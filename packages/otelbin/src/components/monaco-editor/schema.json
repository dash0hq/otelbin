{
  "$id": "https://github.com/dash0hq/otelbin/blob/main/src/components/monaco-editor/schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "otel",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "exporters": {
      "type": "object",
      "description": "An exporter is how data gets sent to different systems/back-ends. Generally, an exporter translates the internal format into another defined format.",
      "additionalProperties": false,
      "patternProperties": {
        "additionalProperties": false,
        "^alibabacloud_logservice(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "LogService's Endpoint, https://www.alibabacloud.com/help/doc-detail/29008.htm\nfor AlibabaCloud Kubernetes(or ECS), set {region-id}-intranet.log.aliyuncs.com, eg cn-hangzhou-intranet.log.aliyuncs.com;\n others set {region-id}.log.aliyuncs.com, eg cn-hangzhou.log.aliyuncs.com"
            },
            "project": {
              "type": "string",
              "default": "",
              "description": "LogService's Project Name"
            },
            "logstore": {
              "type": "string",
              "default": "",
              "description": "LogService's Logstore Name"
            },
            "access_key_id": {
              "type": "string",
              "default": "",
              "description": "AlibabaCloud access key id"
            },
            "access_key_secret": {
              "type": "string",
              "default": "",
              "description": "AlibabaCloud access key secret"
            },
            "ecs_ram_role": {
              "type": "string",
              "default": "",
              "description": "Set AlibabaCLoud ECS ram role if you are using ACK"
            },
            "token_file_path": {
              "type": "string",
              "default": "",
              "description": "Set Token File Path if you are using ACK"
            }
          }
        },
        "^awscloudwatchlogs(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config represent a configuration for the CloudWatch logs exporter.\n",
          "properties": {
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "log_group_name": {
              "type": "string",
              "default": "",
              "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams\nthat share the same retention, monitoring, and access control settings."
            },
            "log_stream_name": {
              "type": "string",
              "default": "",
              "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events\nthat share the same source."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "log_retention": {
              "type": "integer",
              "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0\nPossible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add add at least 1 and at most 50 tags.  Input is a string to string map like so: { 'key': 'value' }\nKeys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$\nValues must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "queue_size": {
                  "type": "integer",
                  "default": 1000,
                  "description": "QueueSize set the length of the sending queue"
                }
              },
              "description": "QueueSettings is a subset of exporterhelper.QueueSettings,\nbecause only QueueSize is user-settable due to how AWS CloudWatch API works"
            },
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "raw_log": {
              "type": "boolean",
              "default": false,
              "description": "Export raw log string instead of log wrapper\nRequired for emf logs"
            }
          }
        },
        "^awsemf(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for AWS EMF exporter.\n",
          "properties": {
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "log_group_name": {
              "type": "string",
              "default": "",
              "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams\nthat share the same retention, monitoring, and access control settings."
            },
            "log_stream_name": {
              "type": "string",
              "default": "",
              "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events\nthat share the same source."
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace is a container for CloudWatch metrics.\nMetrics in different namespaces are isolated from each other."
            },
            "retain_initial_value_of_delta_metric": {
              "type": "boolean",
              "default": false,
              "description": "RetainInitialValueOfDeltaMetric is the flag to signal that the initial value of a metric is a valid datapoint.\nThe default behavior is that the first value occurrence of a metric is set as the baseline for the calculation of\nthe delta to the next occurrence. With this flag set to true the exporter will instead use this first value as the\ninitial delta value. This is especially useful when handling low frequency metrics."
            },
            "dimension_rollup_option": {
              "type": "string",
              "default": "ZeroAndSingleDimensionRollup",
              "description": "DimensionRollupOption is the option for metrics dimension rollup. Three options are available, default option is \"ZeroAndSingleDimensionRollup\".\n\"ZeroAndSingleDimensionRollup\" - Enable both zero dimension rollup and single dimension rollup\n\"SingleDimensionRollupOnly\" - Enable single dimension rollup\n\"NoDimensionRollup\" - No dimension rollup (only keep original metrics which contain all dimensions)"
            },
            "log_retention": {
              "type": "integer",
              "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0\nPossible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add at most 50 tags.  Input is a string to string map like so: { 'key': 'value' }\nKeys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$\nValues must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            },
            "parse_json_encoded_attr_values": {
              "description": "ParseJSONEncodedAttributeValues is an array of attribute keys whose corresponding values are JSON-encoded as strings.\nThose strings will be decoded to its original json structure."
            },
            "metric_declarations": {
              "description": "MetricDeclarations is the list of rules to be used to set dimensions for exported metrics."
            },
            "metric_descriptors": {
              "description": "MetricDescriptors is the list of override metric descriptors that are sent to the CloudWatch"
            },
            "output_destination": {
              "type": "string",
              "default": "cloudwatch",
              "description": "OutputDestination is an option to specify the EMFExporter output. Default option is \"cloudwatch\"\n\"cloudwatch\" - direct the exporter output to CloudWatch backend\n\"stdout\" - direct the exporter output to stdout\nTODO: we can support directing output to a file (in the future) while customer specifies a file path here."
            },
            "eks_fargate_container_insights_enabled": {
              "type": "boolean",
              "default": false,
              "description": "EKSFargateContainerInsightsEnabled is an option to reformat certin metric labels so that they take the form of a high level object\nThe end result will make the labels look like those coming out of ECS and be more easily injected into cloudwatch\nNote that at the moment in order to use this feature the value \"kubernetes\" must also be added to the ParseJSONEncodedAttributeValues array in order to be used"
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings is an option for converting resource attrihutes to telemetry attributes.\n\"Enabled\" - A boolean field to enable/disable this option. Default is `false`.\nIf enabled, all the resource attributes will be converted to metric labels by default."
            },
            "detailed_metrics": {
              "type": "boolean",
              "default": false,
              "description": "DetailedMetrics is an option for retaining detailed datapoint values in exported metrics (e.g instead of exporting a quantile as a statistical value,\npreserve the quantile's population)"
            },
            "version": {
              "type": "string",
              "default": "1",
              "description": "Version is an option for sending metrics to CloudWatchLogs with Embedded Metric Format in selected version  (with \"_aws\")\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html#CloudWatch_Embedded_Metric_Format_Specification_structure\nOtherwise, sending metrics as Embedded Metric Format version 0 (without \"_aws\")"
            }
          }
        },
        "^awskinesis(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config contains the main configuration options for the awskinesis exporter\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "encoding": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "default": "otlp"
                },
                "compression": {
                  "type": "string",
                  "default": "none"
                }
              }
            },
            "aws": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stream_name": {
                  "type": "string",
                  "default": ""
                },
                "kinesis_endpoint": {
                  "type": "string",
                  "default": ""
                },
                "region": {
                  "type": "string",
                  "default": "us-west-2"
                },
                "role": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "AWSConfig contains AWS specific configuration such as awskinesis stream, region, etc."
            },
            "max_records_per_batch": {
              "type": "integer",
              "default": 500
            },
            "max_record_size": {
              "type": "integer",
              "default": 1048576
            }
          }
        },
        "^awsxray(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for AWS X-Ray exporter.\n",
          "properties": {
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "indexed_attributes": {
              "description": "By default, OpenTelemetry attributes are converted to X-Ray metadata, which are not indexed.\nSpecify a list of attribute names to be converted to X-Ray annotations instead, which will be indexed.\nSee annotation vs. metadata: https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations"
            },
            "index_all_attributes": {
              "type": "boolean",
              "default": false,
              "description": "Set to true to convert all OpenTelemetry attributes to X-Ray annotation (indexed) ignoring the IndexedAttributes option.\nDefault value: false"
            },
            "aws_log_groups": {},
            "telemetry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled determines whether any telemetry should be recorded."
                },
                "include_metadata": {
                  "type": "boolean",
                  "default": false,
                  "description": "IncludeMetadata determines whether metadata (instance ID, hostname, resourceARN)\nshould be included in the telemetry."
                },
                "contributors": {
                  "description": "Contributors can be used to explicitly define which X-Ray components are contributing to the telemetry.\nIf omitted, only X-Ray components with the same component.ID as the setup component will have access."
                },
                "hostname": {
                  "type": "string",
                  "default": "",
                  "description": "Hostname can be used to explicitly define the hostname associated with the telemetry."
                },
                "instance_id": {
                  "type": "string",
                  "default": "",
                  "description": "InstanceID can be used to explicitly define the instance ID associated with the telemetry."
                },
                "resource_arn": {
                  "type": "string",
                  "default": "",
                  "description": "ResourceARN can be used to explicitly define the resource ARN associated with the telemetry."
                }
              },
              "description": "TelemetryConfig contains the options for telemetry collection."
            }
          }
        },
        "^azuredataexplorer(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Azure Data Explorer Exporter\n",
          "properties": {
            "cluster_uri": {
              "type": "string",
              "default": ""
            },
            "application_id": {
              "type": "string",
              "default": ""
            },
            "application_key": {
              "type": "string",
              "default": ""
            },
            "tenant_id": {
              "type": "string",
              "default": ""
            },
            "managed_identity_id": {
              "type": "string",
              "default": ""
            },
            "db_name": {
              "type": "string",
              "default": "oteldb"
            },
            "metrics_table_name": {
              "type": "string",
              "default": "OTELMetrics"
            },
            "logs_table_name": {
              "type": "string",
              "default": "OTELLogs"
            },
            "traces_table_name": {
              "type": "string",
              "default": "OTELTraces"
            },
            "metrics_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "logs_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "traces_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "ingestion_type": {
              "type": "string",
              "default": "queued"
            }
          }
        },
        "^azuremonitor(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Azure Monitor\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "https://dc.services.visualstudio.com/v2/track"
            },
            "instrumentation_key": {
              "type": "string",
              "default": ""
            },
            "maxbatchsize": {
              "type": "integer",
              "default": 1024
            },
            "maxbatchinterval": {
              "type": "string",
              "default": "10s"
            },
            "spaneventsenabled": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "^carbon(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Carbon exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003",
              "description": "Endpoint specifies host and port to send metrics in the Carbon plaintext\nformat. The default value is defined by the DefaultEndpoint constant."
            },
            "timeout": {
              "type": "string",
              "default": "5s",
              "description": "Timeout is the maximum duration allowed to connecting and sending the\ndata to the Carbon/Graphite backend.\nThe default value is defined by the DefaultSendTimeout constant."
            }
          }
        },
        "^cassandra(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "dsn": {
              "type": "string",
              "default": "127.0.0.1"
            },
            "port": {
              "type": "integer",
              "default": 9042
            },
            "keyspace": {
              "type": "string",
              "default": "otel"
            },
            "trace_table": {
              "type": "string",
              "default": "otel_spans"
            },
            "logs_table": {
              "type": "string",
              "default": "otel_logs"
            },
            "replication": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "class": {
                  "type": "string",
                  "default": "SimpleStrategy"
                },
                "replication_factor": {
                  "type": "integer",
                  "default": 1
                }
              }
            },
            "compression": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "algorithm": {
                  "type": "string",
                  "default": "LZ4Compressor"
                }
              }
            }
          }
        },
        "^clickhouse(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Elastic exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "queue_size": {
                  "type": "integer",
                  "default": 1000,
                  "description": "QueueSize set the length of the sending queue"
                }
              },
              "description": "QueueSettings is a subset of exporterhelper.QueueSettings,\nbecause only QueueSize is user-settable."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is the clickhouse endpoint."
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Username is the authentication username."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Username is the authentication password."
            },
            "database": {
              "type": "string",
              "default": "default",
              "description": "Database is the database name to export."
            },
            "connection_params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ConnectionParams is the extra connection parameters with map format. for example compression/dial_timeout"
            },
            "logs_table_name": {
              "type": "string",
              "default": "otel_logs",
              "description": "LogsTableName is the table name for logs. default is `otel_logs`."
            },
            "traces_table_name": {
              "type": "string",
              "default": "otel_traces",
              "description": "TracesTableName is the table name for logs. default is `otel_traces`."
            },
            "metrics_table_name": {
              "type": "string",
              "default": "otel_metrics",
              "description": "MetricsTableName is the table name for metrics. default is `otel_metrics`."
            },
            "ttl_days": {
              "default": 0,
              "description": "TTLDays is The data time-to-live in days, 0 means no ttl."
            }
          }
        },
        "^coralogix(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines by Coralogix.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "domain": {
              "type": "string",
              "default": "",
              "description": "Coralogix domain"
            },
            "domain_settings": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "GRPC Settings used with Domain"
            },
            "endpoint": {
              "type": "string",
              "default": "https://"
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "Coralogix traces ingress endpoint"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer",
                  "default": 524288
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "The Coralogix metrics ingress endpoint"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "The Coralogix logs ingress endpoint"
            },
            "private_key": {
              "type": "string",
              "default": "",
              "description": "Your Coralogix private key (sensitive) for authentication"
            },
            "application_name_attributes": {
              "description": "Ordered list of Resource attributes that are used for Coralogix\nAppName and SubSystem values. The first non-empty Resource attribute is used.\nExample: AppNameAttributes: [\"k8s.namespace.name\", \"service.namespace\"]\nExample: SubSystemAttributes: [\"k8s.deployment.name\", \"k8s.daemonset.name\", \"service.name\"]"
            },
            "subsystem_name_attributes": {},
            "application_name": {
              "type": "string",
              "default": "",
              "description": "Default Coralogix application and subsystem name values."
            },
            "subsystem_name": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^datadog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Datadog exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "15s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false,
                  "description": "InsecureSkipVerify controls whether a client verifies the server's\ncertificate chain and host name."
                }
              },
              "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
            },
            "hostname": {
              "type": "string",
              "default": "",
              "description": "Hostname is the host name for unified service tagging.\nIf unset, it is determined automatically."
            },
            "api": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "key": {
                  "type": "string",
                  "default": "",
                  "description": "Key is the Datadog API key to associate your Agent's data with your organization.\nCreate a new API key here: https://app.datadoghq.com/account/settings"
                },
                "site": {
                  "type": "string",
                  "default": "datadoghq.com",
                  "description": "Site is the site of the Datadog intake to send data to.\nThe default value is \"datadoghq.com\"."
                },
                "fail_on_invalid_key": {
                  "type": "boolean",
                  "default": false,
                  "description": "FailOnInvalidKey states whether to exit at startup on invalid API key.\nThe default value is false."
                }
              },
              "description": "API defines the Datadog API configuration."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "delta_ttl": {
                  "type": "integer",
                  "default": 3600,
                  "description": "DeltaTTL defines the time that previous points of a cumulative monotonic\nmetric are kept in memory to calculate deltas"
                },
                "endpoint": {
                  "type": "string",
                  "default": "https://api.datadoghq.com"
                },
                "resource_attributes_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "ResourceAttributesAsTags, if set to true, will use the exporterhelper feature to transform all\nresource attributes into metric labels, which are then converted into tags"
                },
                "instrumentation_scope_metadata_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "InstrumentationScopeMetadataAsTags, if set to true, adds the name and version of the\ninstrumentation scope that created a metric to the metric tags"
                },
                "histograms": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "distributions",
                      "description": "Mode for exporting histograms. Valid values are 'distributions', 'counters' or 'nobuckets'.\n - 'distributions' sends histograms as Datadog distributions (recommended).\n - 'counters' sends histograms as Datadog counts, one metric per bucket.\n - 'nobuckets' sends no bucket histogram metrics. Aggregation metrics will still be sent\n   if `send_aggregation_metrics` is enabled.\n\nThe current default is 'distributions'."
                    },
                    "send_count_sum_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendCountSum states if the export should send .sum and .count metrics for histograms.\nThe default is false.\nDeprecated: [v0.75.0] Use `send_aggregation_metrics` (HistogramConfig.SendAggregations) instead."
                    },
                    "send_aggregation_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendAggregations states if the exporter should send .sum, .count, .min and .max metrics for histograms.\nThe default is false."
                    }
                  },
                  "description": "HistConfig defines the export of OTLP Histograms."
                },
                "sums": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cumulative_monotonic_mode": {
                      "type": "string",
                      "default": "to_delta",
                      "description": "CumulativeMonotonicMode is the mode for exporting OTLP Cumulative Monotonic Sums.\nValid values are 'to_delta' or 'raw_value'.\n - 'to_delta' calculates delta for cumulative monotonic sums and sends it as a Datadog count.\n - 'raw_value' sends the raw value of cumulative monotonic sums as Datadog gauges.\n\nThe default is 'to_delta'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=sum#mapping for details and examples."
                    },
                    "initial_cumulative_monotonic_value": {
                      "type": "string",
                      "default": "auto",
                      "description": "InitialCumulativeMonotonicMode defines the behavior of the exporter when receiving the first value\nof a cumulative monotonic sum."
                    }
                  },
                  "description": "SumConfig defines the export of OTLP Sums."
                },
                "summaries": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "gauges",
                      "description": "Mode is the the mode for exporting OTLP Summaries.\nValid values are 'noquantiles' or 'gauges'.\n - 'noquantiles' sends no `.quantile` metrics. `.sum` and `.count` metrics will still be sent.\n - 'gauges' sends `.quantile` metrics as gauges tagged by the quantile.\n\nThe default is 'gauges'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=summary#mapping for details and examples."
                    }
                  },
                  "description": "SummaryConfig defines the export for OTLP Summaries."
                }
              },
              "description": "Metrics defines the Metrics exporter specific configuration"
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://trace.agent.datadoghq.com"
                },
                "ignore_resources": {
                  "description": "ignored resources\nA blacklist of regular expressions can be provided to disable certain traces based on their resource name\nall entries must be surrounded by double quotes and separated by commas.\nignore_resources: [\"(GET|POST) /healthcheck\"]"
                },
                "span_name_remappings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "SpanNameRemappings is the map of datadog span names and preferred name to map to. This can be used to\nautomatically map Datadog Span Operation Names to an updated value. All entries should be key/value pairs.\nspan_name_remappings:\n  io.opentelemetry.javaagent.spring.client: spring.client\n  instrumentation:express.server: express\n  go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client"
                },
                "span_name_as_resource_name": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true the OpenTelemetry span name will used in the Datadog resource name.\nIf set to false the resource name will be filled with the instrumentation library name + span kind.\nThe default value is `false`."
                },
                "compute_stats_by_span_kind": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables an additional stats computation check on spans to see they have an eligible `span.kind` (server, consumer, client, producer).\nIf enabled, a span with an eligible `span.kind` will have stats computed. If disabled, only top-level and measured spans will have stats computed.\nNOTE: For stats computed from OTel traces, only top-level spans are considered when this option is off."
                },
                "peer_service_aggregation": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables `peer.service` aggregation in the exporter. If disabled, aggregated trace stats will not include `peer.service` as a dimension.\nFor the best experience with `peer.service`, it is recommended to also enable `compute_stats_by_span_kind`.\nIf enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first.\nIf the overhead remains high, it will be due to a high cardinality of `peer.service` values from the traces. You may need to check your instrumentation."
                }
              },
              "description": "Traces defines the Traces exporter specific configuration"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://http-intake.logs.datadoghq.com"
                },
                "dump_payloads": {
                  "type": "boolean",
                  "default": false,
                  "description": "DumpPayloads report whether payloads should be dumped when logging level is debug."
                }
              },
              "description": "Logs defines the Logs exporter specific configuration"
            },
            "host_metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled enables the host metadata functionality."
                },
                "hostname_source": {
                  "type": "string",
                  "default": "config_or_system",
                  "description": "HostnameSource is the source for the hostname of host metadata.\nValid values are 'first_resource' and 'config_or_system':\n- 'first_resource' picks the host metadata hostname from the resource\n   attributes on the first OTLP payload that gets to the exporter.\n   If the first payload lacks hostname-like attributes, it will fallback to 'config_or_system'.\n   Do not use this hostname source if receiving data from multiple hosts.\n- 'config_or_system' picks the host metadata hostname from the 'hostname' setting,\n   If this is empty it will use available system APIs and cloud provider endpoints.\n\nThe default is 'config_or_system'."
                },
                "tags": {
                  "description": "Tags is a list of host tags.\nThese tags will be attached to telemetry signals that have the host metadata hostname.\nTo attach tags to telemetry signals regardless of the host, use a processor instead."
                }
              },
              "description": "HostMetadata defines the host metadata specific configuration"
            },
            "only_metadata": {
              "type": "boolean",
              "default": false,
              "description": "OnlyMetadata defines whether to only send metadata\nThis is useful for agent-collector setups, so that\nmetadata about a host is sent to the backend even\nwhen telemetry data is reported via a different host.\n\nThis flag is incompatible with disabling host metadata,\n`use_resource_metadata`, or `host_metadata::hostname_source != first_resource`"
            }
          }
        },
        "^dataset(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "dataset_url": {
              "type": "string",
              "default": ""
            },
            "api_key": {
              "type": "string",
              "default": ""
            },
            "buffer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_lifetime": {
                  "type": "string",
                  "default": "5s"
                },
                "group_by": {},
                "retry_initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "retry_max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "retry_max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                },
                "retry_shutdown_timeout": {
                  "type": "string",
                  "default": "30s"
                }
              }
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {}
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "export_resource_info_on_event": {
                  "type": "boolean",
                  "default": false,
                  "description": "ExportResourceInfo is optional flag to signal that the resource info is being exported to DataSet while exporting Logs.\nThis is especially useful when reducing DataSet billable log volume.\nDefault value: false."
                },
                "export_scope_info_on_event": {
                  "type": "boolean",
                  "default": true,
                  "description": "ExportScopeInfo is an optional flag that signals if scope info should be exported (when available) with each event. If scope\ninformation is not utilized, it makes sense to disable exporting it since it will result in increased billable log volume."
                },
                "decompose_complex_message_field": {
                  "type": "boolean",
                  "default": false,
                  "description": "DecomposeComplexMessageField is an optional flag to signal that message / body of complex types (e.g. a map) should be\ndecomposed / deconstructed into multiple fields. This is usually done outside of the main DataSet integration on the\nclient side (e.g. as part of the attribute processor or similar) or on the server side (DataSet server side JSON parser\nfor message field) and that's why this functionality is disabled by default."
                }
              }
            },
            "server_host": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "use_hostname": {
                  "type": "boolean",
                  "default": true
                },
                "server_host": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "timeout": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "timeout": {
                  "type": "string",
                  "default": "5s"
                }
              }
            }
          }
        },
        "^dynatrace(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Dynatrace exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "Settings defines configuration for converting resource attributes to telemetry attributes.\nWhen used, it must be embedded in the exporter configuration:\n\n\ttype Config struct {\n\t  // ...\n\t  resourcetotelemetry.Settings `mapstructure:\"resource_to_telemetry_conversion\"`\n\t}"
            },
            "api_token": {
              "type": "string",
              "default": "",
              "description": "Dynatrace API token with metrics ingest permission"
            },
            "default_dimensions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "DefaultDimensions will be added to all exported metrics"
            },
            "prefix": {
              "type": "string",
              "default": "",
              "description": "String to prefix all metric names"
            },
            "tags": {
              "description": "Tags will be added to all exported metrics\nDeprecated: Please use DefaultDimensions instead"
            }
          }
        },
        "^elasticsearch(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Elastic exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "endpoints": {
              "description": "Endpoints holds the Elasticsearch URLs the exporter should send events to.\n\nThis setting is required if CloudID is not set and if the\nELASTICSEARCH_URL environment variable is not set."
            },
            "cloudid": {
              "type": "string",
              "default": "",
              "description": "CloudID holds the cloud ID to identify the Elastic Cloud cluster to send events to.\nhttps://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html\n\nThis setting is required if no URL is configured."
            },
            "num_workers": {
              "type": "integer",
              "description": "NumWorkers configures the number of workers publishing bulk requests."
            },
            "index": {
              "type": "string",
              "default": "",
              "description": "Index configures the index, index alias, or data stream name events should be indexed in.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/indices.html\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html\n\nDeprecated: `index` is deprecated and replaced with `logs_index`."
            },
            "logs_index": {
              "type": "string",
              "default": "logs-generic-default",
              "description": "This setting is required when logging pipelines used."
            },
            "logs_dynamic_index": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "fall back to pure LogsIndex, if 'elasticsearch.index.prefix' or 'elasticsearch.index.suffix' are not found in resource or attribute (prio: resource > attribute)"
            },
            "traces_index": {
              "type": "string",
              "default": "traces-generic-default",
              "description": "This setting is required when traces pipelines used."
            },
            "traces_dynamic_index": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "fall back to pure TracesIndex, if 'elasticsearch.index.prefix' or 'elasticsearch.index.suffix' are not found in resource or attribute (prio: resource > attribute)"
            },
            "pipeline": {
              "type": "string",
              "default": "",
              "description": "Pipeline configures the ingest node pipeline name that should be used to process the\nevents.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html"
            },
            "user": {
              "type": "string",
              "default": "",
              "description": "User is used to configure HTTP Basic Authentication."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Password is used to configure HTTP Basic Authentication."
            },
            "api_key": {
              "type": "string",
              "default": "",
              "description": "APIKey is used to configure ApiKey based Authentication.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html"
            },
            "read_buffer_size": {
              "type": "integer",
              "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize."
            },
            "write_buffer_size": {
              "type": "integer",
              "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize."
            },
            "timeout": {
              "type": "string",
              "default": "1m30s",
              "description": "Timeout configures the HTTP request timeout."
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Headers allows users to configure optional HTTP headers that\nwill be send with each HTTP request."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "discover": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "on_start": {
                  "type": "boolean",
                  "default": false,
                  "description": "OnStart, if set, instructs the exporter to look for available Elasticsearch\nnodes the first time the exporter connects to the cluster."
                },
                "interval": {
                  "type": "string",
                  "description": "Interval instructs the exporter to renew the list of Elasticsearch URLs\nwith the given interval. URLs will not be updated if Interval is <=0."
                }
              },
              "description": "DiscoverySettings defines Elasticsearch node discovery related settings.\nThe exporter will check Elasticsearch regularly for available nodes\nand updates the list of hosts if discovery is enabled. Newly discovered\nnodes will automatically be used for load balancing.\n\nDiscoverySettings should not be enabled when operating Elasticsearch behind a proxy\nor load balancer.\n\nhttps://www.elastic.co/blog/elasticsearch-sniffing-best-practices-what-when-why-how"
            },
            "retry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled allows users to disable retry without having to comment out all settings."
                },
                "max_requests": {
                  "type": "integer",
                  "default": 3,
                  "description": "MaxRequests configures how often an HTTP request is retried before it is assumed to be failed."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "100ms",
                  "description": "InitialInterval configures the initial waiting time if a request failed."
                },
                "max_interval": {
                  "type": "string",
                  "default": "1m0s",
                  "description": "MaxInterval configures the max waiting time if consecutive requests failed."
                }
              },
              "description": "RetrySettings defines settings for the HTTP request retries in the Elasticsearch exporter.\nFailed sends are retried with exponential backoff."
            },
            "flush": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bytes": {
                  "type": "integer",
                  "description": "Bytes sets the send buffer flushing limit."
                },
                "interval": {
                  "type": "string",
                  "description": "Interval configures the max age of a document in the send buffer."
                }
              },
              "description": "FlushSettings  defines settings for configuring the write buffer flushing\npolicy in the Elasticsearch exporter. The exporter sends a bulk request with\nall events already serialized into the send-buffer."
            },
            "mapping": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mode": {
                  "type": "string",
                  "default": "ecs",
                  "description": "Mode configures the field mappings."
                },
                "fields": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Additional field mappings."
                },
                "file": {
                  "type": "string",
                  "default": "",
                  "description": "File to read additional fields mappings from."
                },
                "dedup": {
                  "type": "boolean",
                  "default": true,
                  "description": "Try to find and remove duplicate fields"
                },
                "dedot": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        },
        "^f5cloud(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for F5 Cloud exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces_endpoint": {
              "type": "string",
              "default": ""
            },
            "metrics_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs_endpoint": {
              "type": "string",
              "default": ""
            },
            "source": {
              "type": "string",
              "default": "",
              "description": "Source represents a unique identifier that is used to distinguish where this data is coming from."
            },
            "f5cloud_auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "credential_file": {
                  "type": "string",
                  "default": "",
                  "description": "CredentialFile is the F5 Cloud credentials for your designated account."
                },
                "audience": {
                  "type": "string",
                  "default": "",
                  "description": "Audience is the F5 Cloud audience for your designated account."
                }
              },
              "description": "AuthConfig represents the F5 Cloud authentication configuration options."
            }
          }
        },
        "^file(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for file exporter.\n",
          "properties": {
            "path": {
              "type": "string",
              "default": "",
              "description": "Path of the file to write to. Path is relative to current directory."
            },
            "rotation": {
              "description": "Rotation defines an option about rotation of telemetry files"
            },
            "format": {
              "type": "string",
              "default": "json",
              "description": "FormatType define the data format of encoded telemetry data\nOptions:\n- json[default]:  OTLP json bytes.\n- proto:  OTLP binary protobuf bytes."
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression Codec used to export telemetry data\nSupported compression algorithms:`zstd`"
            },
            "flush_interval": {
              "type": "string",
              "description": "FlushInterval is the duration between flushes.\nSee time.ParseDuration for valid values."
            }
          }
        },
        "^googlecloud(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Google Cloud exporter.\n",
          "properties": {
            "project": {
              "type": "string",
              "default": "",
              "description": "ProjectID is the project telemetry is sent to if the gcp.project.id\nresource attribute is not set. If unspecified, this is determined using\napplication default credentials."
            },
            "user_agent": {
              "type": "string",
              "default": "opentelemetry-collector-contrib {{version}}"
            },
            "impersonate": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "target_principal": {
                  "type": "string",
                  "default": ""
                },
                "subject": {
                  "type": "string",
                  "default": ""
                },
                "delegates": {}
              },
              "description": "ImpersonateConfig defines configuration for service account impersonation."
            },
            "trace": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "attribute_mappings": {
                  "description": "AttributeMappings determines how to map from OpenTelemetry attribute\nkeys to Google Cloud Trace keys.  By default, it changes http and\nservice keys so that they appear more prominently in the UI."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                }
              }
            },
            "log": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "default_log_name": {
                  "type": "string",
                  "default": "",
                  "description": "DefaultLogName sets the fallback log name to use when one isn't explicitly set\nfor a log entry. If unset, logs without a log name will raise an error."
                },
                "resource_filters": {
                  "description": "ResourceFilters, if provided, provides a list of resource filters.\nResource attributes matching any filter will be included in LogEntry labels.\nDefaults to empty, which won't include any additional resource labels."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "service_resource_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "ServiceResourceLabels, if true, causes the exporter to copy OTel's\nservice.name, service.namespace, and service.instance.id resource attributes into the Cloud Logging LogEntry labels.\nDisabling this option does not prevent resource_filters from adding those labels. Default is true."
                },
                "error_reporting_type": {
                  "type": "boolean",
                  "default": false,
                  "description": "ErrorReportingType enables automatically parsing error logs to a json payload containing the\ntype value for GCP Error Reporting. See https://cloud.google.com/error-reporting/docs/formatting-error-messages#log-text."
                }
              }
            },
            "metric": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mapmonitoredresource": {
                  "description": "MapMonitoredResource is not exposed as an option in the configuration, but\ncan be used by other exporters to extend the functionality of this\nexporter. It allows overriding the function used to map otel resource to\nmonitored resource."
                },
                "extrametrics": {
                  "description": "ExtraMetrics is an extension point for exporters to modify the metrics\nbefore they are sent by the exporter."
                },
                "getmetricname": {
                  "description": "GetMetricName is not settable in config files, but can be used by other\nexporters which extend the functionality of this exporter. It allows\ncustomizing the naming of metrics. baseName already includes type\nsuffixes for summary metrics, but does not (yet) include the domain prefix"
                },
                "experimental_wal_config": {
                  "description": "WALConfig holds configuration settings for the write ahead log."
                },
                "prefix": {
                  "type": "string",
                  "default": "workload.googleapis.com"
                },
                "known_domains": {
                  "description": "KnownDomains contains a list of prefixes. If a metric already has one\nof these prefixes, the prefix is not added."
                },
                "resource_filters": {
                  "description": "ResourceFilters, if provided, provides a list of resource filters.\nResource attributes matching any filter will be included in metric labels.\nDefaults to empty, which won't include any additional resource labels. Note that the\nservice_resource_labels option operates independently from resource_filters."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "create_metric_descriptor_buffer_size": {
                  "type": "integer",
                  "default": 10,
                  "description": "CreateMetricDescriptorBufferSize is the buffer size for the channel\nwhich asynchronously calls CreateMetricDescriptor. Default is 10."
                },
                "skip_create_descriptor": {
                  "type": "boolean",
                  "default": false
                },
                "create_service_timeseries": {
                  "type": "boolean",
                  "default": false,
                  "description": "CreateServiceTimeSeries, if true, this will send all timeseries using `CreateServiceTimeSeries`.\nImplicitly, this sets `SkipMetricDescriptor` to true."
                },
                "instrumentation_library_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "InstrumentationLibraryLabels, if true, set the instrumentation_source\nand instrumentation_version labels. Defaults to true."
                },
                "service_resource_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "ServiceResourceLabels, if true, causes the exporter to copy OTel's\nservice.name, service.namespace, and service.instance.id resource attributes into the GCM timeseries metric labels. This\noption is recommended to avoid writing duplicate timeseries against the same monitored\nresource. Disabling this option does not prevent resource_filters from adding those\nlabels. Default is true."
                },
                "cumulative_normalization": {
                  "type": "boolean",
                  "default": true,
                  "description": "CumulativeNormalization normalizes cumulative metrics without start times or with\nexplicit reset points by subtracting subsequent points from the initial point.\nIt is enabled by default. Since it caches starting points, it may result in\nincreased memory usage."
                },
                "sum_of_squared_deviation": {
                  "type": "boolean",
                  "default": false,
                  "description": "EnableSumOfSquaredDeviation enables calculation of an estimated sum of squared\ndeviation.  It isn't correct, so we don't send it by default, and don't expose\nit to users. For some uses, it is expected, however."
                }
              }
            },
            "destination_project_quota": {
              "type": "boolean",
              "default": false
            },
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            }
          }
        },
        "^googlecloudpubsub(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer"
                },
                "queue_size": {
                  "type": "integer"
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "initial_interval": {
                  "type": "string"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string"
                },
                "max_elapsed_time": {
                  "type": "string"
                }
              }
            },
            "project": {
              "type": "string",
              "default": "",
              "description": "Google Cloud Project ID where the Pubsub client will connect to"
            },
            "user_agent": {
              "type": "string",
              "default": "opentelemetry-collector-contrib {{version}}",
              "description": "User agent that will be used by the Pubsub client to connect to the service"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The fully qualified resource name of the Pubsub topic"
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression of the payload (only gzip or is supported, no compression is the default)"
            },
            "watermark": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "behavior": {
                  "type": "string",
                  "default": "current",
                  "description": "Behavior of the watermark. Currently, only  of the message (none, earliest and current, current being the default)\nwill set the timestamp on pubsub based on timestamps of the events inside the message"
                },
                "allowed_drift": {
                  "type": "string",
                  "description": "Indication on how much the timestamp can drift from the current time, the timestamp will be capped to the allowed\nmaximum. A duration of 0 is the same as maximum duration"
                }
              },
              "description": "Watermark defines the watermark (the ce-time attribute on the message) behavior"
            }
          }
        },
        "^googlemanagedprometheus(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Google Cloud Managed Service for Prometheus exporter.\n",
          "properties": {
            "project": {
              "type": "string",
              "default": ""
            },
            "user_agent": {
              "type": "string",
              "default": ""
            },
            "metric": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "prefix": {
                  "type": "string",
                  "default": "",
                  "description": "Prefix configures the prefix of metrics sent to GoogleManagedPrometheus.  Defaults to prometheus.googleapis.com.\nChanging this prefix is not recommended, as it may cause metrics to not be queryable with promql in the Cloud Monitoring UI."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "add_metric_suffixes": {
                  "type": "boolean",
                  "default": true
                },
                "extra_metrics_config": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enable_target_info": {
                      "type": "boolean",
                      "default": true
                    },
                    "enable_scope_info": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "resource_filters": {}
              }
            },
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            }
          }
        },
        "^influxdb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the InfluxDB exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "org": {
              "type": "string",
              "default": "",
              "description": "Org is the InfluxDB organization name of the destination bucket."
            },
            "bucket": {
              "type": "string",
              "default": "",
              "description": "Bucket is the InfluxDB bucket name that telemetry will be written to."
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "Token is used to identify InfluxDB permissions within the organization."
            },
            "v1_compatibility": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled is used to specify if the exporter should use the v1.X InfluxDB API schema"
                },
                "db": {
                  "type": "string",
                  "default": "",
                  "description": "DB is used to specify the name of the V1 InfluxDB database that telemetry will be written to."
                },
                "username": {
                  "type": "string",
                  "default": "",
                  "description": "Username is used to optionally specify the basic auth username"
                },
                "password": {
                  "type": "string",
                  "default": "",
                  "description": "Password is used to optionally specify the basic auth password"
                }
              },
              "description": "V1Compatibility is used to specify if the exporter should use the v1.X InfluxDB API schema."
            },
            "span_dimensions": {
              "description": "SpanDimensions are span attributes to be used as line protocol tags.\nThese are always included as tags:\n- trace ID\n- span ID\nThe default values are strongly recommended for use with Jaeger:\n- service.name\n- span.name\nOther common attributes can be found here:\n- https://opentelemetry.io/docs/specs/semconv/"
            },
            "log_record_dimensions": {
              "description": "LogRecordDimensions are log record attributes to be used as line protocol tags.\nThese are always included as tags, if available:\n- trace ID\n- span ID\nThe default values:\n- service.name\nOther common attributes can be found here:\n- https://opentelemetry.io/docs/specs/semconv/\nWhen using InfluxDB for both logs and traces, be certain that log_record_dimensions\nmatches the tracing span_dimensions value."
            },
            "metrics_schema": {
              "type": "string",
              "default": "telegraf-prometheus-v1",
              "description": "MetricsSchema indicates the metrics schema to emit to line protocol.\nOptions:\n- telegraf-prometheus-v1\n- telegraf-prometheus-v2"
            },
            "payload_max_lines": {
              "type": "integer",
              "default": 10000,
              "description": "PayloadMaxLines is the maximum number of line protocol lines to POST in a single request."
            },
            "payload_max_bytes": {
              "type": "integer",
              "default": 10000000,
              "description": "PayloadMaxBytes is the maximum number of line protocol bytes to POST in a single request."
            }
          }
        },
        "^instana(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Instana exporter\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "agent_key": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {}
          }
        },
        "^jaeger(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger gRPC exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {}
          }
        },
        "^jaeger_thrift(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger Thrift over HTTP exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {}
          }
        },
        "^kafka(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Kafka exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "Kafka protocol version"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The name of the kafka topic to export to (default otlp_spans for traces, otlp_metrics for metrics)"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of messages (default \"otlp_proto\")"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "full": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to maintain a full set of metadata for all topics, or just\nthe minimal set that has been necessary so far. The full set is simpler\nand usually more convenient, but can take up a substantial amount of\nmemory if you have many topics and partitions. Defaults to true."
                },
                "retry": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "max": {
                      "type": "integer",
                      "default": 3,
                      "description": "The total number of times to retry a metadata request when the\ncluster is in the middle of a leader election or at startup (default 3)."
                    },
                    "backoff": {
                      "type": "string",
                      "default": "250ms",
                      "description": "How long to wait for leader election to occur before retrying\n(default 250ms). Similar to the JVM's `retry.backoff.ms`."
                    }
                  },
                  "description": "Retry configuration for metadata.\nThis configuration is useful to avoid race conditions when broker\nis starting at the same time as collector."
                }
              },
              "description": "Metadata is the namespace for metadata management properties used by the\nClient, and shared by the Producer/Consumer."
            },
            "producer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_message_bytes": {
                  "type": "integer",
                  "default": 1000000,
                  "description": "Maximum message bytes the producer will accept to produce."
                },
                "required_acks": {
                  "default": 1,
                  "description": "RequiredAcks Number of acknowledgements required to assume that a message has been sent.\nhttps://pkg.go.dev/github.com/IBM/sarama@v1.30.0#RequiredAcks\nThe options are:\n  0 -> NoResponse.  doesn't send any response\n  1 -> WaitForLocal. waits for only the local commit to succeed before responding ( default )\n  -1 -> WaitForAll. waits for all in-sync replicas to commit before responding."
                },
                "compression": {
                  "type": "string",
                  "default": "none",
                  "description": "Compression Codec used to produce messages\nhttps://pkg.go.dev/github.com/IBM/sarama@v1.30.0#CompressionCodec\nThe options are: 'none', 'gzip', 'snappy', 'lz4', and 'zstd'"
                },
                "flush_max_messages": {
                  "type": "integer",
                  "description": "The maximum number of messages the producer will send in a single\nbroker request. Defaults to 0 for unlimited. Similar to\n`queue.buffering.max.messages` in the JVM producer."
                }
              },
              "description": "Producer is the namespaces for producer properties used only by the Producer"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication defines used authentication mechanism."
            }
          }
        },
        "^loadbalancing(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the exporter.\n",
          "properties": {
            "protocol": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "otlp": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "timeout": {
                      "type": "string",
                      "default": "5s"
                    },
                    "sending_queue": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        },
                        "num_consumers": {
                          "type": "integer",
                          "default": 10
                        },
                        "queue_size": {
                          "type": "integer",
                          "default": 1000
                        },
                        "storage": {}
                      }
                    },
                    "retry_on_failure": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        },
                        "initial_interval": {
                          "type": "string",
                          "default": "5s"
                        },
                        "randomization_factor": {
                          "type": "number"
                        },
                        "multiplier": {
                          "type": "number"
                        },
                        "max_interval": {
                          "type": "string",
                          "default": "30s"
                        },
                        "max_elapsed_time": {
                          "type": "string",
                          "default": "5m0s"
                        }
                      }
                    },
                    "endpoint": {
                      "type": "string",
                      "default": ""
                    },
                    "compression": {
                      "type": "string",
                      "default": "gzip"
                    },
                    "tls": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "ca_file": {
                          "type": "string",
                          "default": ""
                        },
                        "ca_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "cert_file": {
                          "type": "string",
                          "default": ""
                        },
                        "cert_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "key_file": {
                          "type": "string",
                          "default": ""
                        },
                        "key_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "min_version": {
                          "type": "string",
                          "default": ""
                        },
                        "max_version": {
                          "type": "string",
                          "default": ""
                        },
                        "reload_interval": {
                          "type": "string"
                        },
                        "insecure": {
                          "type": "boolean",
                          "default": false
                        },
                        "insecure_skip_verify": {
                          "type": "boolean",
                          "default": false
                        },
                        "server_name_override": {
                          "type": "string",
                          "default": ""
                        }
                      }
                    },
                    "keepalive": {},
                    "read_buffer_size": {
                      "type": "integer"
                    },
                    "write_buffer_size": {
                      "type": "integer",
                      "default": 524288
                    },
                    "wait_for_ready": {
                      "type": "boolean",
                      "default": false
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "balancer_name": {
                      "type": "string",
                      "default": ""
                    },
                    "authority": {
                      "type": "string",
                      "default": ""
                    },
                    "auth": {}
                  }
                }
              },
              "description": "Protocol holds the individual protocol-specific settings. Only OTLP is supported at the moment."
            },
            "resolver": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "static": {
                  "description": "StaticResolver defines the configuration for the resolver providing a fixed list of backends"
                },
                "dns": {
                  "description": "DNSResolver defines the configuration for the DNS resolver"
                },
                "k8s": {
                  "description": "K8sSvcResolver defines the configuration for the DNS resolver"
                }
              },
              "description": "ResolverSettings defines the configurations for the backend resolver"
            },
            "routing_key": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^logging(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "loglevel": {},
            "verbosity": {
              "default": 1
            },
            "sampling_initial": {
              "type": "integer",
              "default": 2
            },
            "sampling_thereafter": {
              "type": "integer",
              "default": 500
            }
          }
        },
        "^logicmonitor(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for LogicMonitor exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "Settings defines configuration for converting resource attributes to telemetry attributes.\nWhen used, it must be embedded in the exporter configuration:\n\n\ttype Config struct {\n\t  // ...\n\t  resourcetotelemetry.Settings `mapstructure:\"resource_to_telemetry_conversion\"`\n\t}"
            },
            "api_token": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_id": {
                  "type": "string",
                  "default": ""
                },
                "access_key": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "ApiToken of Logicmonitor Platform"
            }
          }
        },
        "^logzio(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config contains Logz.io specific configuration such as Account TracesToken, Region, etc.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "account_token": {
              "type": "string",
              "default": ""
            },
            "region": {
              "type": "string",
              "default": ""
            },
            "custom_endpoint": {
              "type": "string",
              "default": ""
            },
            "drain_interval": {
              "type": "integer"
            },
            "queue_capacity": {
              "type": "integer"
            },
            "queue_max_length": {
              "type": "integer"
            }
          }
        },
        "^loki(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Loki exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "default_labels_enabled": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "^mezmo(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Mezmo exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "ingest_url": {
              "type": "string",
              "default": "https://logs.mezmo.com/otel/ingest/rest",
              "description": "IngestURL is the URL to send telemetry to."
            },
            "ingest_key": {
              "type": "string",
              "default": "",
              "description": "Token is the authentication token provided by Mezmo."
            }
          }
        },
        "^opencensus(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for OpenCensus exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer"
                },
                "queue_size": {
                  "type": "integer"
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "initial_interval": {
                  "type": "string"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string"
                },
                "max_elapsed_time": {
                  "type": "string"
                }
              }
            },
            "num_workers": {
              "type": "integer",
              "default": 2,
              "description": "The number of workers that send the gRPC requests."
            }
          }
        },
        "^otlp(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {}
          }
        },
        "^otlphttp(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces_endpoint": {
              "type": "string",
              "default": ""
            },
            "metrics_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs_endpoint": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^parquet(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^prometheus(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Prometheus exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace if set, exports metrics under the provided value."
            },
            "const_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ConstLabels are values that are applied for every exported metric."
            },
            "send_timestamps": {
              "type": "boolean",
              "default": false,
              "description": "SendTimestamps will send the underlying scrape timestamp with the export"
            },
            "metric_expiration": {
              "type": "string",
              "default": "5m0s",
              "description": "MetricExpiration defines how long metrics are kept without updates"
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings defines configuration for converting resource attributes to metric labels."
            },
            "enable_open_metrics": {
              "type": "boolean",
              "default": false,
              "description": "EnableOpenMetrics enables the use of the OpenMetrics encoding option for the prometheus exporter."
            },
            "add_metric_suffixes": {
              "type": "boolean",
              "default": true,
              "description": "AddMetricSuffixes controls whether suffixes are added to metric names. Defaults to true."
            }
          }
        },
        "^prometheusremotewrite(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Remote Write exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "50ms"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "200ms"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "1m0s"
                }
              }
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "prefix attached to each exported metric name\nSee: https://prometheus.io/docs/practices/naming/#metric-names"
            },
            "remote_write_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled if false the queue is not enabled, the export requests\nare executed synchronously."
                },
                "queue_size": {
                  "type": "integer",
                  "default": 10000,
                  "description": "QueueSize is the maximum number of OTLP metric batches allowed\nin the queue at a given time. Ignored if Enabled is false."
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 5,
                  "description": "NumWorkers configures the number of workers used by\nthe collector to fan out remote write requests."
                }
              },
              "description": "QueueConfig allows users to fine tune the queues\nthat handle outgoing requests."
            },
            "external_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ExternalLabels defines a map of label keys and values that are allowed to start with reserved prefix \"__\""
            },
            "endpoint": {
              "type": "string",
              "default": "http://some.url:9411/api/prom/push"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings is the option for converting resource attributes to telemetry attributes.\n\"Enabled\" - A boolean field to enable/disable this option. Default is `false`.\nIf enabled, all the resource attributes will be converted to metric labels by default."
            },
            "wal": {},
            "target_info": {
              "description": "TargetInfo allows customizing the target_info metric"
            },
            "export_created_metric": {
              "description": "CreatedMetric allows customizing creation of _created metrics"
            },
            "add_metric_suffixes": {
              "type": "boolean",
              "default": true,
              "description": "AddMetricSuffixes controls whether unit and type suffixes are added to metrics on export"
            }
          }
        },
        "^pulsar(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Pulsar exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": "pulsar://localhost:6650",
              "description": "Endpoint of pulsar broker (default \"pulsar://localhost:6650\")"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The name of the pulsar topic to export to (default otlp_spans for traces, otlp_metrics for metrics)"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of messages (default \"otlp_proto\")"
            },
            "producer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_reconnect_broker": {},
                "hashing_scheme": {
                  "type": "string",
                  "default": ""
                },
                "compression_level": {
                  "type": "string",
                  "default": ""
                },
                "compression_type": {
                  "type": "string",
                  "default": ""
                },
                "max_pending_messages": {
                  "type": "integer"
                },
                "batch_builder_type": {
                  "type": "string",
                  "default": ""
                },
                "partitions_auto_discovery_interval": {
                  "type": "string"
                },
                "batching_max_publish_delay": {
                  "type": "string"
                },
                "batching_max_messages": {
                  "default": 0
                },
                "batching_max_size": {
                  "default": 0
                },
                "disable_block_if_queue_full": {
                  "type": "boolean",
                  "default": false
                },
                "disable_batching": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "Producer configuration of the Pulsar producer"
            },
            "tls_trust_certs_file_path": {
              "type": "string",
              "default": "",
              "description": "Set the path to the trusted TLS certificate file"
            },
            "tls_allow_insecure_connection": {
              "type": "boolean",
              "default": false,
              "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tls": {},
                "token": {},
                "athenz": {},
                "oauth2": {}
              }
            },
            "operation_timeout": {
              "type": "string",
              "default": "30s"
            },
            "connection_timeout": {
              "type": "string",
              "default": "5s"
            },
            "map_connections_per_broker": {
              "type": "integer",
              "default": 1
            }
          }
        },
        "^sapm(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SAPM exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is the destination to where traces will be sent to in SAPM format.\nIt must be a full URL and include the scheme, port and path e.g, https://ingest.signalfx.com/v2/trace"
            },
            "access_token": {
              "type": "string",
              "default": "",
              "description": "AccessToken is the authentication token provided by SignalFx."
            },
            "num_workers": {
              "default": 8,
              "description": "NumWorkers is the number of workers that should be used to export traces.\nExporter can make as many requests in parallel as the number of workers. Defaults to 8."
            },
            "max_connections": {
              "default": 0,
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open."
            },
            "disable_compression": {
              "type": "boolean",
              "default": false,
              "description": "Disable compression. If set to true then Compression field is ignored."
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression method to use (gzip or zstd). Ignored if DisableCompression=true.\nIf unspecified defaults to gzip."
            },
            "log_detailed_response": {
              "type": "boolean",
              "default": false,
              "description": "Log detailed response from trace ingest."
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": true,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            }
          }
        },
        "^sentry(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the Sentry Exporter.\n",
          "properties": {
            "dsn": {
              "type": "string",
              "default": "",
              "description": "DSN to report transaction to Sentry. If the DSN is not set, no trace will be sent to Sentry."
            },
            "environment": {
              "type": "string",
              "default": "",
              "description": "The deployment environment name, such as production or staging.\nEnvironments are case sensitive. The environment name can't contain newlines, spaces or forward slashes,\ncan't be the string \"None\", or exceed 64 characters."
            },
            "insecure_skip_verify": {
              "type": "boolean",
              "default": false,
              "description": "InsecureSkipVerify controls whether the client verifies the Sentry server certificate chain"
            }
          }
        },
        "^signalfx(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SignalFx exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "access_token": {
              "type": "string",
              "default": "",
              "description": "AccessToken is the authentication token provided by SignalFx."
            },
            "realm": {
              "type": "string",
              "default": "",
              "description": "Realm is the SignalFx realm where data is going to be sent to."
            },
            "ingest_url": {
              "type": "string",
              "default": "",
              "description": "IngestURL is the destination to where SignalFx metrics will be sent to, it is\nintended for tests and debugging. The value of Realm is ignored if the\nURL is specified. The exporter will automatically append the appropriate\npath: \"/v2/datapoint\" for metrics, and \"/v2/event\" for events."
            },
            "ingest_tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "ingest_tls needs to be set if the exporter's IngestURL is pointing to a signalfx receiver\nwith TLS enabled and using a self-signed certificate where its CA is not loaded in the system cert pool."
            },
            "api_url": {
              "type": "string",
              "default": "",
              "description": "APIURL is the destination to where SignalFx metadata will be sent. This\nvalue takes precedence over the value of Realm"
            },
            "api_tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "api_tls needs to be set if the exporter's APIURL is pointing to a httforwarder extension\nwith TLS enabled and using a self-signed certificate where its CA is not loaded in the system cert pool."
            },
            "log_data_points": {
              "type": "boolean",
              "default": false,
              "description": "Whether to log datapoints dispatched to Splunk Observability Cloud"
            },
            "log_dimension_updates": {
              "type": "boolean",
              "default": false,
              "description": "Whether to log dimension updates being sent to SignalFx."
            },
            "dimension_client": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_buffered": {
                  "type": "integer",
                  "default": 10000
                },
                "send_delay": {
                  "type": "string",
                  "default": "10s"
                },
                "max_idle_conns": {
                  "type": "integer",
                  "default": 20
                },
                "max_idle_conns_per_host": {
                  "type": "integer",
                  "default": 20
                },
                "max_conns_per_host": {
                  "type": "integer",
                  "default": 20
                },
                "idle_conn_timeout": {
                  "type": "string",
                  "default": "30s"
                }
              },
              "description": "Dimension update client configuration used for metadata updates."
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": true,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "translation_rules": {
              "description": "TranslationRules defines a set of rules how to translate metrics to a SignalFx compatible format\nRules defined in translation/constants.go are used by default.\nDeprecated: Use metricstransform processor to do metrics transformations."
            },
            "disable_default_translation_rules": {
              "type": "boolean",
              "default": false
            },
            "delta_translation_ttl": {
              "type": "integer",
              "default": 3600,
              "description": "DeltaTranslationTTL specifies in seconds the max duration to keep the most recent datapoint for any\n`delta_metric` specified in TranslationRules. Default is 3600s."
            },
            "sync_host_metadata": {
              "type": "boolean",
              "default": false,
              "description": "SyncHostMetadata defines if the exporter should scrape host metadata and\nsends it as property updates to SignalFx backend.\nIMPORTANT: Host metadata synchronization relies on `resourcedetection` processor.\n           If this option is enabled make sure that `resourcedetection` processor\n           is enabled in the pipeline with one of the cloud provider detectors\n           or environment variable detector setting a unique value to\n           `host.name` attribute within your k8s cluster. Also keep override\n           And keep `override=true` in resourcedetection config."
            },
            "exclude_metrics": {
              "description": "ExcludeMetrics defines dpfilter.MetricFilters that will determine metrics to be\nexcluded from sending to SignalFx backend. If translations enabled with\nTranslationRules options, the exclusion will be applie on translated metrics."
            },
            "include_metrics": {
              "description": "IncludeMetrics defines dpfilter.MetricFilters to override exclusion any of metric.\nThis option can be used to included metrics that are otherwise dropped by default.\nSee ./translation/default_metrics.go for a list of metrics that are dropped by default."
            },
            "exclude_properties": {
              "description": "ExcludeProperties defines dpfilter.PropertyFilters to prevent inclusion of\nproperties to include with dimension updates to the SignalFx backend."
            },
            "correlation": {
              "description": "Correlation configuration for syncing traces service and environment to metrics."
            },
            "nonalphanumeric_dimension_chars": {
              "type": "string",
              "default": "_-.",
              "description": "NonAlphanumericDimensionChars is a list of allowable characters, in addition to alphanumeric ones,\nto be used in a dimension key."
            },
            "max_connections": {
              "type": "integer",
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open.\nDeprecated: use HTTPClientSettings.MaxIdleConns or HTTPClientSettings.MaxIdleConnsPerHost instead."
            },
            "drop_histogram_buckets": {
              "type": "boolean",
              "default": false,
              "description": "Whether to drop  histogram bucket metrics dispatched to Splunk Observability.\nDefault value is set to false."
            }
          }
        },
        "^skywalking(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SkyWalking exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "num_streams": {
              "type": "integer",
              "default": 2,
              "description": "The number of grpc streams that send the gRPC requests."
            }
          }
        },
        "^splunk_hec(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Splunk exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "log_data_enabled": {
              "type": "boolean",
              "default": true,
              "description": "LogDataEnabled can be used to disable sending logs by the exporter."
            },
            "profiling_data_enabled": {
              "type": "boolean",
              "default": true,
              "description": "ProfilingDataEnabled can be used to disable sending profiling data by the exporter."
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "HEC Token is the authentication token provided by Splunk: https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector."
            },
            "source": {
              "type": "string",
              "default": "",
              "description": "Optional Splunk source: https://docs.splunk.com/Splexicon:Source.\nSources identify the incoming data."
            },
            "sourcetype": {
              "type": "string",
              "default": "",
              "description": "Optional Splunk source type: https://docs.splunk.com/Splexicon:Sourcetype."
            },
            "index": {
              "type": "string",
              "default": "",
              "description": "Splunk index, optional name of the Splunk index."
            },
            "max_connections": {
              "default": 0,
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open. Defaults to 100.\nDeprecated: use HTTPClientSettings.MaxIdleConns or HTTPClientSettings.MaxIdleConnsPerHost instead."
            },
            "disable_compression": {
              "type": "boolean",
              "default": false,
              "description": "Disable GZip compression. Defaults to false."
            },
            "max_content_length_logs": {
              "default": 2097152,
              "description": "Maximum log payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_content_length_metrics": {
              "default": 2097152,
              "description": "Maximum metric payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_content_length_traces": {
              "default": 2097152,
              "description": "Maximum trace payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_event_size": {
              "default": 5242880,
              "description": "Maximum payload size, raw uncompressed. Default value is 5242880 bytes (5MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "splunk_app_name": {
              "type": "string",
              "default": "OpenTelemetry Collector Contrib",
              "description": "App name is used to track telemetry information for Splunk App's using HEC by App name. Defaults to \"OpenTelemetry Collector Contrib\"."
            },
            "splunk_app_version": {
              "type": "string",
              "default": "",
              "description": "App version is used to track telemetry information for Splunk App's using HEC by App version. Defaults to the current OpenTelemetry Collector Contrib build version."
            },
            "hec_metadata_to_otel_attrs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source": {
                  "type": "string",
                  "default": "com.splunk.source",
                  "description": "Source indicates the mapping of the source field to a specific unified model attribute."
                },
                "sourcetype": {
                  "type": "string",
                  "default": "com.splunk.sourcetype",
                  "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute."
                },
                "index": {
                  "type": "string",
                  "default": "com.splunk.index",
                  "description": "Index indicates the mapping of the index field to a specific unified model attribute."
                },
                "host": {
                  "type": "string",
                  "default": "host.name",
                  "description": "Host indicates the mapping of the host field to a specific unified model attribute."
                }
              },
              "description": "HecToOtelAttrs creates a mapping from attributes to HEC specific metadata: source, sourcetype, index and host."
            },
            "otel_to_hec_fields": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "severity_text": {
                  "type": "string",
                  "default": "otel.log.severity.text",
                  "description": "SeverityText informs the exporter to map the severity text field to a specific HEC field."
                },
                "severity_number": {
                  "type": "string",
                  "default": "otel.log.severity.number",
                  "description": "SeverityNumber informs the exporter to map the severity number field to a specific HEC field."
                }
              },
              "description": "HecFields creates a mapping from attributes to HEC fields."
            },
            "health_path": {
              "type": "string",
              "default": "/services/collector/health",
              "description": "HealthPath for health API, default is '/services/collector/health'"
            },
            "health_check_enabled": {
              "type": "boolean",
              "default": false,
              "description": "HecHealthCheckEnabled can be used to verify Splunk HEC health on exporter's startup"
            },
            "export_raw": {
              "type": "boolean",
              "default": false,
              "description": "ExportRaw to send only the log's body, targeting a Splunk HEC raw endpoint."
            },
            "use_multi_metric_format": {
              "type": "boolean",
              "default": false,
              "description": "UseMultiMetricFormat combines metric events to save space during ingestion."
            },
            "heartbeat": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "interval": {
                  "type": "string",
                  "description": "Interval represents the time interval for the heartbeat interval. If nothing or 0 is set,\nheartbeat is not enabled.\nA heartbeat is an event sent to _internal index with metadata for the current collector/host."
                },
                "startup": {
                  "type": "boolean",
                  "default": false,
                  "description": "Startup is used to send heartbeat events on exporter's startup."
                }
              },
              "description": "Heartbeat is the configuration to enable heartbeat"
            },
            "telemetry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled is the bool to enable telemetry inside splunk hec exporter"
                },
                "override_metrics_names": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "OverrideMetricsNames is the map to override metrics for internal metrics in splunk hec exporter"
                },
                "extra_attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "ExtraAttributes is the extra attributes for metrics inside splunk hex exporter"
                }
              },
              "description": "Telemetry is the configuration for splunk hec exporter telemetry"
            }
          }
        },
        "^sumologic(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Sumo Logic exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "compress_encoding": {
              "type": "string",
              "default": "gzip",
              "description": "Compression encoding format, either empty string, gzip or deflate (default gzip)\nEmpty string means no compression"
            },
            "max_request_body_size": {
              "type": "integer",
              "default": 1048576,
              "description": "Max HTTP request body size in bytes before compression (if applied).\nBy default 1MB is recommended."
            },
            "log_format": {
              "type": "string",
              "default": "json",
              "description": "Logs related configuration\nFormat to post logs into Sumo. (default json)\n  * text - Logs will appear in Sumo Logic in text format.\n  * json - Logs will appear in Sumo Logic in json format."
            },
            "metric_format": {
              "type": "string",
              "default": "prometheus",
              "description": "Metrics related configuration\nThe format of metrics you will be sending, either graphite or carbon2 or prometheus (Default is prometheus)\nPossible values are `carbon2` and `prometheus`"
            },
            "graphite_template": {
              "type": "string",
              "default": "%{_metric_}",
              "description": "Graphite template.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "metadata_attributes": {
              "description": "List of regexes for attributes which should be send as metadata"
            },
            "source_category": {
              "type": "string",
              "default": "",
              "description": "Sumo specific options\nDesired source category.\nUseful if you want to override the source category configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "source_name": {
              "type": "string",
              "default": "",
              "description": "Desired source name.\nUseful if you want to override the source name configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "source_host": {
              "type": "string",
              "default": "",
              "description": "Desired host name.\nUseful if you want to override the source host configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "client": {
              "type": "string",
              "default": "otelcol",
              "description": "Name of the client"
            }
          }
        },
        "^tanzuobservability(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration options for the exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {}
              },
              "description": "Traces defines the Traces exporter specific configuration"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {},
                "resource_attrs_included": {
                  "type": "boolean",
                  "default": false
                },
                "app_tags_excluded": {
                  "type": "boolean",
                  "default": false,
                  "description": "AppTagsExcluded will exclude the Resource Attributes `application`, `service.name` -> (service),\n`cluster`, and `shard` from the transformed TObs metric if set to true."
                }
              }
            }
          }
        },
        "^tencentcloud_logservice(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for TencentCloud Log Service exporter.\n",
          "properties": {
            "region": {
              "type": "string",
              "default": "",
              "description": "LogService's Region, https://cloud.tencent.com/document/product/614/18940\nfor TencentCloud Kubernetes(or CVM), set ap-{region}.cls.tencentyun.com, eg ap-beijing.cls.tencentyun.com;\n others set ap-{region}.cls.tencentcs.com, eg ap-beijing.cls.tencentcs.com"
            },
            "logset": {
              "type": "string",
              "default": "",
              "description": "LogService's LogSet Name"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "LogService's Topic Name"
            },
            "secret_id": {
              "type": "string",
              "default": "",
              "description": "TencentCloud access key id"
            },
            "secret_key": {
              "type": "string",
              "default": "",
              "description": "TencentCloud access key secret"
            }
          }
        },
        "^zipkin(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration settings for the Zipkin exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "format": {
              "type": "string",
              "default": "json"
            },
            "default_service_name": {
              "type": "string",
              "default": "<missing service name>"
            }
          }
        }
      },
      "properties": {
        "additionalProperties": false,
        "alibabacloud_logservice": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "LogService's Endpoint, https://www.alibabacloud.com/help/doc-detail/29008.htm\nfor AlibabaCloud Kubernetes(or ECS), set {region-id}-intranet.log.aliyuncs.com, eg cn-hangzhou-intranet.log.aliyuncs.com;\n others set {region-id}.log.aliyuncs.com, eg cn-hangzhou.log.aliyuncs.com"
            },
            "project": {
              "type": "string",
              "default": "",
              "description": "LogService's Project Name"
            },
            "logstore": {
              "type": "string",
              "default": "",
              "description": "LogService's Logstore Name"
            },
            "access_key_id": {
              "type": "string",
              "default": "",
              "description": "AlibabaCloud access key id"
            },
            "access_key_secret": {
              "type": "string",
              "default": "",
              "description": "AlibabaCloud access key secret"
            },
            "ecs_ram_role": {
              "type": "string",
              "default": "",
              "description": "Set AlibabaCLoud ECS ram role if you are using ACK"
            },
            "token_file_path": {
              "type": "string",
              "default": "",
              "description": "Set Token File Path if you are using ACK"
            }
          }
        },
        "awscloudwatchlogs": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config represent a configuration for the CloudWatch logs exporter.\n",
          "properties": {
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "log_group_name": {
              "type": "string",
              "default": "",
              "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams\nthat share the same retention, monitoring, and access control settings."
            },
            "log_stream_name": {
              "type": "string",
              "default": "",
              "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events\nthat share the same source."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "log_retention": {
              "type": "integer",
              "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0\nPossible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add add at least 1 and at most 50 tags.  Input is a string to string map like so: { 'key': 'value' }\nKeys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$\nValues must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "queue_size": {
                  "type": "integer",
                  "default": 1000,
                  "description": "QueueSize set the length of the sending queue"
                }
              },
              "description": "QueueSettings is a subset of exporterhelper.QueueSettings,\nbecause only QueueSize is user-settable due to how AWS CloudWatch API works"
            },
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "raw_log": {
              "type": "boolean",
              "default": false,
              "description": "Export raw log string instead of log wrapper\nRequired for emf logs"
            }
          }
        },
        "awsemf": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for AWS EMF exporter.\n",
          "properties": {
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "log_group_name": {
              "type": "string",
              "default": "",
              "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams\nthat share the same retention, monitoring, and access control settings."
            },
            "log_stream_name": {
              "type": "string",
              "default": "",
              "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events\nthat share the same source."
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace is a container for CloudWatch metrics.\nMetrics in different namespaces are isolated from each other."
            },
            "retain_initial_value_of_delta_metric": {
              "type": "boolean",
              "default": false,
              "description": "RetainInitialValueOfDeltaMetric is the flag to signal that the initial value of a metric is a valid datapoint.\nThe default behavior is that the first value occurrence of a metric is set as the baseline for the calculation of\nthe delta to the next occurrence. With this flag set to true the exporter will instead use this first value as the\ninitial delta value. This is especially useful when handling low frequency metrics."
            },
            "dimension_rollup_option": {
              "type": "string",
              "default": "ZeroAndSingleDimensionRollup",
              "description": "DimensionRollupOption is the option for metrics dimension rollup. Three options are available, default option is \"ZeroAndSingleDimensionRollup\".\n\"ZeroAndSingleDimensionRollup\" - Enable both zero dimension rollup and single dimension rollup\n\"SingleDimensionRollupOnly\" - Enable single dimension rollup\n\"NoDimensionRollup\" - No dimension rollup (only keep original metrics which contain all dimensions)"
            },
            "log_retention": {
              "type": "integer",
              "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0\nPossible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add at most 50 tags.  Input is a string to string map like so: { 'key': 'value' }\nKeys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$\nValues must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            },
            "parse_json_encoded_attr_values": {
              "description": "ParseJSONEncodedAttributeValues is an array of attribute keys whose corresponding values are JSON-encoded as strings.\nThose strings will be decoded to its original json structure."
            },
            "metric_declarations": {
              "description": "MetricDeclarations is the list of rules to be used to set dimensions for exported metrics."
            },
            "metric_descriptors": {
              "description": "MetricDescriptors is the list of override metric descriptors that are sent to the CloudWatch"
            },
            "output_destination": {
              "type": "string",
              "default": "cloudwatch",
              "description": "OutputDestination is an option to specify the EMFExporter output. Default option is \"cloudwatch\"\n\"cloudwatch\" - direct the exporter output to CloudWatch backend\n\"stdout\" - direct the exporter output to stdout\nTODO: we can support directing output to a file (in the future) while customer specifies a file path here."
            },
            "eks_fargate_container_insights_enabled": {
              "type": "boolean",
              "default": false,
              "description": "EKSFargateContainerInsightsEnabled is an option to reformat certin metric labels so that they take the form of a high level object\nThe end result will make the labels look like those coming out of ECS and be more easily injected into cloudwatch\nNote that at the moment in order to use this feature the value \"kubernetes\" must also be added to the ParseJSONEncodedAttributeValues array in order to be used"
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings is an option for converting resource attrihutes to telemetry attributes.\n\"Enabled\" - A boolean field to enable/disable this option. Default is `false`.\nIf enabled, all the resource attributes will be converted to metric labels by default."
            },
            "detailed_metrics": {
              "type": "boolean",
              "default": false,
              "description": "DetailedMetrics is an option for retaining detailed datapoint values in exported metrics (e.g instead of exporting a quantile as a statistical value,\npreserve the quantile's population)"
            },
            "version": {
              "type": "string",
              "default": "1",
              "description": "Version is an option for sending metrics to CloudWatchLogs with Embedded Metric Format in selected version  (with \"_aws\")\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html#CloudWatch_Embedded_Metric_Format_Specification_structure\nOtherwise, sending metrics as Embedded Metric Format version 0 (without \"_aws\")"
            }
          }
        },
        "awskinesis": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config contains the main configuration options for the awskinesis exporter\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "encoding": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "default": "otlp"
                },
                "compression": {
                  "type": "string",
                  "default": "none"
                }
              }
            },
            "aws": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stream_name": {
                  "type": "string",
                  "default": ""
                },
                "kinesis_endpoint": {
                  "type": "string",
                  "default": ""
                },
                "region": {
                  "type": "string",
                  "default": "us-west-2"
                },
                "role": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "AWSConfig contains AWS specific configuration such as awskinesis stream, region, etc."
            },
            "max_records_per_batch": {
              "type": "integer",
              "default": 500
            },
            "max_record_size": {
              "type": "integer",
              "default": 1048576
            }
          }
        },
        "awsxray": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for AWS X-Ray exporter.\n",
          "properties": {
            "num_workers": {
              "type": "integer",
              "default": 8,
              "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "X-Ray service endpoint to which the collector sends segment documents."
            },
            "request_timeout_seconds": {
              "type": "integer",
              "default": 30,
              "description": "Number of seconds before timing out a request."
            },
            "max_retries": {
              "type": "integer",
              "default": 2,
              "description": "Maximum number of retries before abandoning an attempt to post data."
            },
            "no_verify_ssl": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable TLS certificate verification."
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "Upload segments to AWS X-Ray through a proxy."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Send segments to AWS X-Ray service in a specific region."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "Local mode to skip EC2 instance metadata check."
            },
            "resource_arn": {
              "type": "string",
              "default": "",
              "description": "Amazon Resource Name (ARN) of the AWS resource running the collector."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "IAM role to upload segments to a different account."
            },
            "indexed_attributes": {
              "description": "By default, OpenTelemetry attributes are converted to X-Ray metadata, which are not indexed.\nSpecify a list of attribute names to be converted to X-Ray annotations instead, which will be indexed.\nSee annotation vs. metadata: https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations"
            },
            "index_all_attributes": {
              "type": "boolean",
              "default": false,
              "description": "Set to true to convert all OpenTelemetry attributes to X-Ray annotation (indexed) ignoring the IndexedAttributes option.\nDefault value: false"
            },
            "aws_log_groups": {},
            "telemetry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled determines whether any telemetry should be recorded."
                },
                "include_metadata": {
                  "type": "boolean",
                  "default": false,
                  "description": "IncludeMetadata determines whether metadata (instance ID, hostname, resourceARN)\nshould be included in the telemetry."
                },
                "contributors": {
                  "description": "Contributors can be used to explicitly define which X-Ray components are contributing to the telemetry.\nIf omitted, only X-Ray components with the same component.ID as the setup component will have access."
                },
                "hostname": {
                  "type": "string",
                  "default": "",
                  "description": "Hostname can be used to explicitly define the hostname associated with the telemetry."
                },
                "instance_id": {
                  "type": "string",
                  "default": "",
                  "description": "InstanceID can be used to explicitly define the instance ID associated with the telemetry."
                },
                "resource_arn": {
                  "type": "string",
                  "default": "",
                  "description": "ResourceARN can be used to explicitly define the resource ARN associated with the telemetry."
                }
              },
              "description": "TelemetryConfig contains the options for telemetry collection."
            }
          }
        },
        "azuredataexplorer": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Azure Data Explorer Exporter\n",
          "properties": {
            "cluster_uri": {
              "type": "string",
              "default": ""
            },
            "application_id": {
              "type": "string",
              "default": ""
            },
            "application_key": {
              "type": "string",
              "default": ""
            },
            "tenant_id": {
              "type": "string",
              "default": ""
            },
            "managed_identity_id": {
              "type": "string",
              "default": ""
            },
            "db_name": {
              "type": "string",
              "default": "oteldb"
            },
            "metrics_table_name": {
              "type": "string",
              "default": "OTELMetrics"
            },
            "logs_table_name": {
              "type": "string",
              "default": "OTELLogs"
            },
            "traces_table_name": {
              "type": "string",
              "default": "OTELTraces"
            },
            "metrics_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "logs_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "traces_table_json_mapping": {
              "type": "string",
              "default": ""
            },
            "ingestion_type": {
              "type": "string",
              "default": "queued"
            }
          }
        },
        "azuremonitor": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Azure Monitor\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "https://dc.services.visualstudio.com/v2/track"
            },
            "instrumentation_key": {
              "type": "string",
              "default": ""
            },
            "maxbatchsize": {
              "type": "integer",
              "default": 1024
            },
            "maxbatchinterval": {
              "type": "string",
              "default": "10s"
            },
            "spaneventsenabled": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "carbon": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Carbon exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003",
              "description": "Endpoint specifies host and port to send metrics in the Carbon plaintext\nformat. The default value is defined by the DefaultEndpoint constant."
            },
            "timeout": {
              "type": "string",
              "default": "5s",
              "description": "Timeout is the maximum duration allowed to connecting and sending the\ndata to the Carbon/Graphite backend.\nThe default value is defined by the DefaultSendTimeout constant."
            }
          }
        },
        "cassandra": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "dsn": {
              "type": "string",
              "default": "127.0.0.1"
            },
            "port": {
              "type": "integer",
              "default": 9042
            },
            "keyspace": {
              "type": "string",
              "default": "otel"
            },
            "trace_table": {
              "type": "string",
              "default": "otel_spans"
            },
            "logs_table": {
              "type": "string",
              "default": "otel_logs"
            },
            "replication": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "class": {
                  "type": "string",
                  "default": "SimpleStrategy"
                },
                "replication_factor": {
                  "type": "integer",
                  "default": 1
                }
              }
            },
            "compression": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "algorithm": {
                  "type": "string",
                  "default": "LZ4Compressor"
                }
              }
            }
          }
        },
        "clickhouse": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Elastic exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "queue_size": {
                  "type": "integer",
                  "default": 1000,
                  "description": "QueueSize set the length of the sending queue"
                }
              },
              "description": "QueueSettings is a subset of exporterhelper.QueueSettings,\nbecause only QueueSize is user-settable."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is the clickhouse endpoint."
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Username is the authentication username."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Username is the authentication password."
            },
            "database": {
              "type": "string",
              "default": "default",
              "description": "Database is the database name to export."
            },
            "connection_params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ConnectionParams is the extra connection parameters with map format. for example compression/dial_timeout"
            },
            "logs_table_name": {
              "type": "string",
              "default": "otel_logs",
              "description": "LogsTableName is the table name for logs. default is `otel_logs`."
            },
            "traces_table_name": {
              "type": "string",
              "default": "otel_traces",
              "description": "TracesTableName is the table name for logs. default is `otel_traces`."
            },
            "metrics_table_name": {
              "type": "string",
              "default": "otel_metrics",
              "description": "MetricsTableName is the table name for metrics. default is `otel_metrics`."
            },
            "ttl_days": {
              "default": 0,
              "description": "TTLDays is The data time-to-live in days, 0 means no ttl."
            }
          }
        },
        "coralogix": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines by Coralogix.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "domain": {
              "type": "string",
              "default": "",
              "description": "Coralogix domain"
            },
            "domain_settings": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "GRPC Settings used with Domain"
            },
            "endpoint": {
              "type": "string",
              "default": "https://"
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "Coralogix traces ingress endpoint"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer",
                  "default": 524288
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "The Coralogix metrics ingress endpoint"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://"
                },
                "compression": {
                  "type": "string",
                  "default": "gzip"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "keepalive": {},
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "wait_for_ready": {
                  "type": "boolean",
                  "default": false
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "balancer_name": {
                  "type": "string",
                  "default": ""
                },
                "authority": {
                  "type": "string",
                  "default": ""
                },
                "auth": {}
              },
              "description": "The Coralogix logs ingress endpoint"
            },
            "private_key": {
              "type": "string",
              "default": "",
              "description": "Your Coralogix private key (sensitive) for authentication"
            },
            "application_name_attributes": {
              "description": "Ordered list of Resource attributes that are used for Coralogix\nAppName and SubSystem values. The first non-empty Resource attribute is used.\nExample: AppNameAttributes: [\"k8s.namespace.name\", \"service.namespace\"]\nExample: SubSystemAttributes: [\"k8s.deployment.name\", \"k8s.daemonset.name\", \"service.name\"]"
            },
            "subsystem_name_attributes": {},
            "application_name": {
              "type": "string",
              "default": "",
              "description": "Default Coralogix application and subsystem name values."
            },
            "subsystem_name": {
              "type": "string",
              "default": ""
            }
          }
        },
        "datadog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Datadog exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "15s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false,
                  "description": "InsecureSkipVerify controls whether a client verifies the server's\ncertificate chain and host name."
                }
              },
              "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
            },
            "hostname": {
              "type": "string",
              "default": "",
              "description": "Hostname is the host name for unified service tagging.\nIf unset, it is determined automatically."
            },
            "api": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "key": {
                  "type": "string",
                  "default": "",
                  "description": "Key is the Datadog API key to associate your Agent's data with your organization.\nCreate a new API key here: https://app.datadoghq.com/account/settings"
                },
                "site": {
                  "type": "string",
                  "default": "datadoghq.com",
                  "description": "Site is the site of the Datadog intake to send data to.\nThe default value is \"datadoghq.com\"."
                },
                "fail_on_invalid_key": {
                  "type": "boolean",
                  "default": false,
                  "description": "FailOnInvalidKey states whether to exit at startup on invalid API key.\nThe default value is false."
                }
              },
              "description": "API defines the Datadog API configuration."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "delta_ttl": {
                  "type": "integer",
                  "default": 3600,
                  "description": "DeltaTTL defines the time that previous points of a cumulative monotonic\nmetric are kept in memory to calculate deltas"
                },
                "endpoint": {
                  "type": "string",
                  "default": "https://api.datadoghq.com"
                },
                "resource_attributes_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "ResourceAttributesAsTags, if set to true, will use the exporterhelper feature to transform all\nresource attributes into metric labels, which are then converted into tags"
                },
                "instrumentation_scope_metadata_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "InstrumentationScopeMetadataAsTags, if set to true, adds the name and version of the\ninstrumentation scope that created a metric to the metric tags"
                },
                "histograms": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "distributions",
                      "description": "Mode for exporting histograms. Valid values are 'distributions', 'counters' or 'nobuckets'.\n - 'distributions' sends histograms as Datadog distributions (recommended).\n - 'counters' sends histograms as Datadog counts, one metric per bucket.\n - 'nobuckets' sends no bucket histogram metrics. Aggregation metrics will still be sent\n   if `send_aggregation_metrics` is enabled.\n\nThe current default is 'distributions'."
                    },
                    "send_count_sum_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendCountSum states if the export should send .sum and .count metrics for histograms.\nThe default is false.\nDeprecated: [v0.75.0] Use `send_aggregation_metrics` (HistogramConfig.SendAggregations) instead."
                    },
                    "send_aggregation_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendAggregations states if the exporter should send .sum, .count, .min and .max metrics for histograms.\nThe default is false."
                    }
                  },
                  "description": "HistConfig defines the export of OTLP Histograms."
                },
                "sums": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cumulative_monotonic_mode": {
                      "type": "string",
                      "default": "to_delta",
                      "description": "CumulativeMonotonicMode is the mode for exporting OTLP Cumulative Monotonic Sums.\nValid values are 'to_delta' or 'raw_value'.\n - 'to_delta' calculates delta for cumulative monotonic sums and sends it as a Datadog count.\n - 'raw_value' sends the raw value of cumulative monotonic sums as Datadog gauges.\n\nThe default is 'to_delta'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=sum#mapping for details and examples."
                    },
                    "initial_cumulative_monotonic_value": {
                      "type": "string",
                      "default": "auto",
                      "description": "InitialCumulativeMonotonicMode defines the behavior of the exporter when receiving the first value\nof a cumulative monotonic sum."
                    }
                  },
                  "description": "SumConfig defines the export of OTLP Sums."
                },
                "summaries": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "gauges",
                      "description": "Mode is the the mode for exporting OTLP Summaries.\nValid values are 'noquantiles' or 'gauges'.\n - 'noquantiles' sends no `.quantile` metrics. `.sum` and `.count` metrics will still be sent.\n - 'gauges' sends `.quantile` metrics as gauges tagged by the quantile.\n\nThe default is 'gauges'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=summary#mapping for details and examples."
                    }
                  },
                  "description": "SummaryConfig defines the export for OTLP Summaries."
                }
              },
              "description": "Metrics defines the Metrics exporter specific configuration"
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://trace.agent.datadoghq.com"
                },
                "ignore_resources": {
                  "description": "ignored resources\nA blacklist of regular expressions can be provided to disable certain traces based on their resource name\nall entries must be surrounded by double quotes and separated by commas.\nignore_resources: [\"(GET|POST) /healthcheck\"]"
                },
                "span_name_remappings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "SpanNameRemappings is the map of datadog span names and preferred name to map to. This can be used to\nautomatically map Datadog Span Operation Names to an updated value. All entries should be key/value pairs.\nspan_name_remappings:\n  io.opentelemetry.javaagent.spring.client: spring.client\n  instrumentation:express.server: express\n  go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client"
                },
                "span_name_as_resource_name": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true the OpenTelemetry span name will used in the Datadog resource name.\nIf set to false the resource name will be filled with the instrumentation library name + span kind.\nThe default value is `false`."
                },
                "compute_stats_by_span_kind": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables an additional stats computation check on spans to see they have an eligible `span.kind` (server, consumer, client, producer).\nIf enabled, a span with an eligible `span.kind` will have stats computed. If disabled, only top-level and measured spans will have stats computed.\nNOTE: For stats computed from OTel traces, only top-level spans are considered when this option is off."
                },
                "peer_service_aggregation": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables `peer.service` aggregation in the exporter. If disabled, aggregated trace stats will not include `peer.service` as a dimension.\nFor the best experience with `peer.service`, it is recommended to also enable `compute_stats_by_span_kind`.\nIf enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first.\nIf the overhead remains high, it will be due to a high cardinality of `peer.service` values from the traces. You may need to check your instrumentation."
                }
              },
              "description": "Traces defines the Traces exporter specific configuration"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://http-intake.logs.datadoghq.com"
                },
                "dump_payloads": {
                  "type": "boolean",
                  "default": false,
                  "description": "DumpPayloads report whether payloads should be dumped when logging level is debug."
                }
              },
              "description": "Logs defines the Logs exporter specific configuration"
            },
            "host_metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled enables the host metadata functionality."
                },
                "hostname_source": {
                  "type": "string",
                  "default": "config_or_system",
                  "description": "HostnameSource is the source for the hostname of host metadata.\nValid values are 'first_resource' and 'config_or_system':\n- 'first_resource' picks the host metadata hostname from the resource\n   attributes on the first OTLP payload that gets to the exporter.\n   If the first payload lacks hostname-like attributes, it will fallback to 'config_or_system'.\n   Do not use this hostname source if receiving data from multiple hosts.\n- 'config_or_system' picks the host metadata hostname from the 'hostname' setting,\n   If this is empty it will use available system APIs and cloud provider endpoints.\n\nThe default is 'config_or_system'."
                },
                "tags": {
                  "description": "Tags is a list of host tags.\nThese tags will be attached to telemetry signals that have the host metadata hostname.\nTo attach tags to telemetry signals regardless of the host, use a processor instead."
                }
              },
              "description": "HostMetadata defines the host metadata specific configuration"
            },
            "only_metadata": {
              "type": "boolean",
              "default": false,
              "description": "OnlyMetadata defines whether to only send metadata\nThis is useful for agent-collector setups, so that\nmetadata about a host is sent to the backend even\nwhen telemetry data is reported via a different host.\n\nThis flag is incompatible with disabling host metadata,\n`use_resource_metadata`, or `host_metadata::hostname_source != first_resource`"
            }
          }
        },
        "dataset": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "dataset_url": {
              "type": "string",
              "default": ""
            },
            "api_key": {
              "type": "string",
              "default": ""
            },
            "buffer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_lifetime": {
                  "type": "string",
                  "default": "5s"
                },
                "group_by": {},
                "retry_initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "retry_max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "retry_max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                },
                "retry_shutdown_timeout": {
                  "type": "string",
                  "default": "30s"
                }
              }
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {}
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "export_resource_info_on_event": {
                  "type": "boolean",
                  "default": false,
                  "description": "ExportResourceInfo is optional flag to signal that the resource info is being exported to DataSet while exporting Logs.\nThis is especially useful when reducing DataSet billable log volume.\nDefault value: false."
                },
                "export_scope_info_on_event": {
                  "type": "boolean",
                  "default": true,
                  "description": "ExportScopeInfo is an optional flag that signals if scope info should be exported (when available) with each event. If scope\ninformation is not utilized, it makes sense to disable exporting it since it will result in increased billable log volume."
                },
                "decompose_complex_message_field": {
                  "type": "boolean",
                  "default": false,
                  "description": "DecomposeComplexMessageField is an optional flag to signal that message / body of complex types (e.g. a map) should be\ndecomposed / deconstructed into multiple fields. This is usually done outside of the main DataSet integration on the\nclient side (e.g. as part of the attribute processor or similar) or on the server side (DataSet server side JSON parser\nfor message field) and that's why this functionality is disabled by default."
                }
              }
            },
            "server_host": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "use_hostname": {
                  "type": "boolean",
                  "default": true
                },
                "server_host": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "timeout": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "timeout": {
                  "type": "string",
                  "default": "5s"
                }
              }
            }
          }
        },
        "dynatrace": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Dynatrace exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "Settings defines configuration for converting resource attributes to telemetry attributes.\nWhen used, it must be embedded in the exporter configuration:\n\n\ttype Config struct {\n\t  // ...\n\t  resourcetotelemetry.Settings `mapstructure:\"resource_to_telemetry_conversion\"`\n\t}"
            },
            "api_token": {
              "type": "string",
              "default": "",
              "description": "Dynatrace API token with metrics ingest permission"
            },
            "default_dimensions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "DefaultDimensions will be added to all exported metrics"
            },
            "prefix": {
              "type": "string",
              "default": "",
              "description": "String to prefix all metric names"
            },
            "tags": {
              "description": "Tags will be added to all exported metrics\nDeprecated: Please use DefaultDimensions instead"
            }
          }
        },
        "elasticsearch": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Elastic exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "endpoints": {
              "description": "Endpoints holds the Elasticsearch URLs the exporter should send events to.\n\nThis setting is required if CloudID is not set and if the\nELASTICSEARCH_URL environment variable is not set."
            },
            "cloudid": {
              "type": "string",
              "default": "",
              "description": "CloudID holds the cloud ID to identify the Elastic Cloud cluster to send events to.\nhttps://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html\n\nThis setting is required if no URL is configured."
            },
            "num_workers": {
              "type": "integer",
              "description": "NumWorkers configures the number of workers publishing bulk requests."
            },
            "index": {
              "type": "string",
              "default": "",
              "description": "Index configures the index, index alias, or data stream name events should be indexed in.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/indices.html\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html\n\nDeprecated: `index` is deprecated and replaced with `logs_index`."
            },
            "logs_index": {
              "type": "string",
              "default": "logs-generic-default",
              "description": "This setting is required when logging pipelines used."
            },
            "logs_dynamic_index": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "fall back to pure LogsIndex, if 'elasticsearch.index.prefix' or 'elasticsearch.index.suffix' are not found in resource or attribute (prio: resource > attribute)"
            },
            "traces_index": {
              "type": "string",
              "default": "traces-generic-default",
              "description": "This setting is required when traces pipelines used."
            },
            "traces_dynamic_index": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "fall back to pure TracesIndex, if 'elasticsearch.index.prefix' or 'elasticsearch.index.suffix' are not found in resource or attribute (prio: resource > attribute)"
            },
            "pipeline": {
              "type": "string",
              "default": "",
              "description": "Pipeline configures the ingest node pipeline name that should be used to process the\nevents.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html"
            },
            "user": {
              "type": "string",
              "default": "",
              "description": "User is used to configure HTTP Basic Authentication."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Password is used to configure HTTP Basic Authentication."
            },
            "api_key": {
              "type": "string",
              "default": "",
              "description": "APIKey is used to configure ApiKey based Authentication.\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html"
            },
            "read_buffer_size": {
              "type": "integer",
              "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize."
            },
            "write_buffer_size": {
              "type": "integer",
              "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize."
            },
            "timeout": {
              "type": "string",
              "default": "1m30s",
              "description": "Timeout configures the HTTP request timeout."
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Headers allows users to configure optional HTTP headers that\nwill be send with each HTTP request."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "discover": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "on_start": {
                  "type": "boolean",
                  "default": false,
                  "description": "OnStart, if set, instructs the exporter to look for available Elasticsearch\nnodes the first time the exporter connects to the cluster."
                },
                "interval": {
                  "type": "string",
                  "description": "Interval instructs the exporter to renew the list of Elasticsearch URLs\nwith the given interval. URLs will not be updated if Interval is <=0."
                }
              },
              "description": "DiscoverySettings defines Elasticsearch node discovery related settings.\nThe exporter will check Elasticsearch regularly for available nodes\nand updates the list of hosts if discovery is enabled. Newly discovered\nnodes will automatically be used for load balancing.\n\nDiscoverySettings should not be enabled when operating Elasticsearch behind a proxy\nor load balancer.\n\nhttps://www.elastic.co/blog/elasticsearch-sniffing-best-practices-what-when-why-how"
            },
            "retry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled allows users to disable retry without having to comment out all settings."
                },
                "max_requests": {
                  "type": "integer",
                  "default": 3,
                  "description": "MaxRequests configures how often an HTTP request is retried before it is assumed to be failed."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "100ms",
                  "description": "InitialInterval configures the initial waiting time if a request failed."
                },
                "max_interval": {
                  "type": "string",
                  "default": "1m0s",
                  "description": "MaxInterval configures the max waiting time if consecutive requests failed."
                }
              },
              "description": "RetrySettings defines settings for the HTTP request retries in the Elasticsearch exporter.\nFailed sends are retried with exponential backoff."
            },
            "flush": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bytes": {
                  "type": "integer",
                  "description": "Bytes sets the send buffer flushing limit."
                },
                "interval": {
                  "type": "string",
                  "description": "Interval configures the max age of a document in the send buffer."
                }
              },
              "description": "FlushSettings  defines settings for configuring the write buffer flushing\npolicy in the Elasticsearch exporter. The exporter sends a bulk request with\nall events already serialized into the send-buffer."
            },
            "mapping": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mode": {
                  "type": "string",
                  "default": "ecs",
                  "description": "Mode configures the field mappings."
                },
                "fields": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Additional field mappings."
                },
                "file": {
                  "type": "string",
                  "default": "",
                  "description": "File to read additional fields mappings from."
                },
                "dedup": {
                  "type": "boolean",
                  "default": true,
                  "description": "Try to find and remove duplicate fields"
                },
                "dedot": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        },
        "f5cloud": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for F5 Cloud exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces_endpoint": {
              "type": "string",
              "default": ""
            },
            "metrics_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs_endpoint": {
              "type": "string",
              "default": ""
            },
            "source": {
              "type": "string",
              "default": "",
              "description": "Source represents a unique identifier that is used to distinguish where this data is coming from."
            },
            "f5cloud_auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "credential_file": {
                  "type": "string",
                  "default": "",
                  "description": "CredentialFile is the F5 Cloud credentials for your designated account."
                },
                "audience": {
                  "type": "string",
                  "default": "",
                  "description": "Audience is the F5 Cloud audience for your designated account."
                }
              },
              "description": "AuthConfig represents the F5 Cloud authentication configuration options."
            }
          }
        },
        "file": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for file exporter.\n",
          "properties": {
            "path": {
              "type": "string",
              "default": "",
              "description": "Path of the file to write to. Path is relative to current directory."
            },
            "rotation": {
              "description": "Rotation defines an option about rotation of telemetry files"
            },
            "format": {
              "type": "string",
              "default": "json",
              "description": "FormatType define the data format of encoded telemetry data\nOptions:\n- json[default]:  OTLP json bytes.\n- proto:  OTLP binary protobuf bytes."
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression Codec used to export telemetry data\nSupported compression algorithms:`zstd`"
            },
            "flush_interval": {
              "type": "string",
              "description": "FlushInterval is the duration between flushes.\nSee time.ParseDuration for valid values."
            }
          }
        },
        "googlecloud": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Google Cloud exporter.\n",
          "properties": {
            "project": {
              "type": "string",
              "default": "",
              "description": "ProjectID is the project telemetry is sent to if the gcp.project.id\nresource attribute is not set. If unspecified, this is determined using\napplication default credentials."
            },
            "user_agent": {
              "type": "string",
              "default": "opentelemetry-collector-contrib {{version}}"
            },
            "impersonate": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "target_principal": {
                  "type": "string",
                  "default": ""
                },
                "subject": {
                  "type": "string",
                  "default": ""
                },
                "delegates": {}
              },
              "description": "ImpersonateConfig defines configuration for service account impersonation."
            },
            "trace": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "attribute_mappings": {
                  "description": "AttributeMappings determines how to map from OpenTelemetry attribute\nkeys to Google Cloud Trace keys.  By default, it changes http and\nservice keys so that they appear more prominently in the UI."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                }
              }
            },
            "log": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "default_log_name": {
                  "type": "string",
                  "default": "",
                  "description": "DefaultLogName sets the fallback log name to use when one isn't explicitly set\nfor a log entry. If unset, logs without a log name will raise an error."
                },
                "resource_filters": {
                  "description": "ResourceFilters, if provided, provides a list of resource filters.\nResource attributes matching any filter will be included in LogEntry labels.\nDefaults to empty, which won't include any additional resource labels."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "service_resource_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "ServiceResourceLabels, if true, causes the exporter to copy OTel's\nservice.name, service.namespace, and service.instance.id resource attributes into the Cloud Logging LogEntry labels.\nDisabling this option does not prevent resource_filters from adding those labels. Default is true."
                },
                "error_reporting_type": {
                  "type": "boolean",
                  "default": false,
                  "description": "ErrorReportingType enables automatically parsing error logs to a json payload containing the\ntype value for GCP Error Reporting. See https://cloud.google.com/error-reporting/docs/formatting-error-messages#log-text."
                }
              }
            },
            "metric": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mapmonitoredresource": {
                  "description": "MapMonitoredResource is not exposed as an option in the configuration, but\ncan be used by other exporters to extend the functionality of this\nexporter. It allows overriding the function used to map otel resource to\nmonitored resource."
                },
                "extrametrics": {
                  "description": "ExtraMetrics is an extension point for exporters to modify the metrics\nbefore they are sent by the exporter."
                },
                "getmetricname": {
                  "description": "GetMetricName is not settable in config files, but can be used by other\nexporters which extend the functionality of this exporter. It allows\ncustomizing the naming of metrics. baseName already includes type\nsuffixes for summary metrics, but does not (yet) include the domain prefix"
                },
                "experimental_wal_config": {
                  "description": "WALConfig holds configuration settings for the write ahead log."
                },
                "prefix": {
                  "type": "string",
                  "default": "workload.googleapis.com"
                },
                "known_domains": {
                  "description": "KnownDomains contains a list of prefixes. If a metric already has one\nof these prefixes, the prefix is not added."
                },
                "resource_filters": {
                  "description": "ResourceFilters, if provided, provides a list of resource filters.\nResource attributes matching any filter will be included in metric labels.\nDefaults to empty, which won't include any additional resource labels. Note that the\nservice_resource_labels option operates independently from resource_filters."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "create_metric_descriptor_buffer_size": {
                  "type": "integer",
                  "default": 10,
                  "description": "CreateMetricDescriptorBufferSize is the buffer size for the channel\nwhich asynchronously calls CreateMetricDescriptor. Default is 10."
                },
                "skip_create_descriptor": {
                  "type": "boolean",
                  "default": false
                },
                "create_service_timeseries": {
                  "type": "boolean",
                  "default": false,
                  "description": "CreateServiceTimeSeries, if true, this will send all timeseries using `CreateServiceTimeSeries`.\nImplicitly, this sets `SkipMetricDescriptor` to true."
                },
                "instrumentation_library_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "InstrumentationLibraryLabels, if true, set the instrumentation_source\nand instrumentation_version labels. Defaults to true."
                },
                "service_resource_labels": {
                  "type": "boolean",
                  "default": true,
                  "description": "ServiceResourceLabels, if true, causes the exporter to copy OTel's\nservice.name, service.namespace, and service.instance.id resource attributes into the GCM timeseries metric labels. This\noption is recommended to avoid writing duplicate timeseries against the same monitored\nresource. Disabling this option does not prevent resource_filters from adding those\nlabels. Default is true."
                },
                "cumulative_normalization": {
                  "type": "boolean",
                  "default": true,
                  "description": "CumulativeNormalization normalizes cumulative metrics without start times or with\nexplicit reset points by subtracting subsequent points from the initial point.\nIt is enabled by default. Since it caches starting points, it may result in\nincreased memory usage."
                },
                "sum_of_squared_deviation": {
                  "type": "boolean",
                  "default": false,
                  "description": "EnableSumOfSquaredDeviation enables calculation of an estimated sum of squared\ndeviation.  It isn't correct, so we don't send it by default, and don't expose\nit to users. For some uses, it is expected, however."
                }
              }
            },
            "destination_project_quota": {
              "type": "boolean",
              "default": false
            },
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            }
          }
        },
        "googlecloudpubsub": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer"
                },
                "queue_size": {
                  "type": "integer"
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "initial_interval": {
                  "type": "string"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string"
                },
                "max_elapsed_time": {
                  "type": "string"
                }
              }
            },
            "project": {
              "type": "string",
              "default": "",
              "description": "Google Cloud Project ID where the Pubsub client will connect to"
            },
            "user_agent": {
              "type": "string",
              "default": "opentelemetry-collector-contrib {{version}}",
              "description": "User agent that will be used by the Pubsub client to connect to the service"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The fully qualified resource name of the Pubsub topic"
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression of the payload (only gzip or is supported, no compression is the default)"
            },
            "watermark": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "behavior": {
                  "type": "string",
                  "default": "current",
                  "description": "Behavior of the watermark. Currently, only  of the message (none, earliest and current, current being the default)\nwill set the timestamp on pubsub based on timestamps of the events inside the message"
                },
                "allowed_drift": {
                  "type": "string",
                  "description": "Indication on how much the timestamp can drift from the current time, the timestamp will be capped to the allowed\nmaximum. A duration of 0 is the same as maximum duration"
                }
              },
              "description": "Watermark defines the watermark (the ce-time attribute on the message) behavior"
            }
          }
        },
        "googlemanagedprometheus": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Google Cloud Managed Service for Prometheus exporter.\n",
          "properties": {
            "project": {
              "type": "string",
              "default": ""
            },
            "user_agent": {
              "type": "string",
              "default": ""
            },
            "metric": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "prefix": {
                  "type": "string",
                  "default": "",
                  "description": "Prefix configures the prefix of metrics sent to GoogleManagedPrometheus.  Defaults to prometheus.googleapis.com.\nChanging this prefix is not recommended, as it may cause metrics to not be queryable with promql in the Cloud Monitoring UI."
                },
                "getclientoptions": {
                  "description": "GetClientOptions returns additional options to be passed\nto the underlying Google Cloud API client.\nMust be set programmatically (no support via declarative config).\nIf GetClientOptions returns any options, the exporter will not add the\ndefault credentials, as those could conflict with options provided via\nGetClientOptions.\nOptional."
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "compression": {
                  "type": "string",
                  "default": "",
                  "description": "Compression specifies the compression format for Metrics and Logging gRPC requests.\nSupported values: gzip."
                },
                "use_insecure": {
                  "type": "boolean",
                  "default": false,
                  "description": "Only has effect if Endpoint is not \"\""
                },
                "grpc_pool_size": {
                  "type": "integer",
                  "description": "GRPCPoolSize sets the size of the connection pool in the GCP client"
                },
                "add_metric_suffixes": {
                  "type": "boolean",
                  "default": true
                },
                "extra_metrics_config": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enable_target_info": {
                      "type": "boolean",
                      "default": true
                    },
                    "enable_scope_info": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "resource_filters": {}
              }
            },
            "timeout": {
              "type": "string",
              "default": "12s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            }
          }
        },
        "influxdb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the InfluxDB exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "org": {
              "type": "string",
              "default": "",
              "description": "Org is the InfluxDB organization name of the destination bucket."
            },
            "bucket": {
              "type": "string",
              "default": "",
              "description": "Bucket is the InfluxDB bucket name that telemetry will be written to."
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "Token is used to identify InfluxDB permissions within the organization."
            },
            "v1_compatibility": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled is used to specify if the exporter should use the v1.X InfluxDB API schema"
                },
                "db": {
                  "type": "string",
                  "default": "",
                  "description": "DB is used to specify the name of the V1 InfluxDB database that telemetry will be written to."
                },
                "username": {
                  "type": "string",
                  "default": "",
                  "description": "Username is used to optionally specify the basic auth username"
                },
                "password": {
                  "type": "string",
                  "default": "",
                  "description": "Password is used to optionally specify the basic auth password"
                }
              },
              "description": "V1Compatibility is used to specify if the exporter should use the v1.X InfluxDB API schema."
            },
            "span_dimensions": {
              "description": "SpanDimensions are span attributes to be used as line protocol tags.\nThese are always included as tags:\n- trace ID\n- span ID\nThe default values are strongly recommended for use with Jaeger:\n- service.name\n- span.name\nOther common attributes can be found here:\n- https://opentelemetry.io/docs/specs/semconv/"
            },
            "log_record_dimensions": {
              "description": "LogRecordDimensions are log record attributes to be used as line protocol tags.\nThese are always included as tags, if available:\n- trace ID\n- span ID\nThe default values:\n- service.name\nOther common attributes can be found here:\n- https://opentelemetry.io/docs/specs/semconv/\nWhen using InfluxDB for both logs and traces, be certain that log_record_dimensions\nmatches the tracing span_dimensions value."
            },
            "metrics_schema": {
              "type": "string",
              "default": "telegraf-prometheus-v1",
              "description": "MetricsSchema indicates the metrics schema to emit to line protocol.\nOptions:\n- telegraf-prometheus-v1\n- telegraf-prometheus-v2"
            },
            "payload_max_lines": {
              "type": "integer",
              "default": 10000,
              "description": "PayloadMaxLines is the maximum number of line protocol lines to POST in a single request."
            },
            "payload_max_bytes": {
              "type": "integer",
              "default": 10000000,
              "description": "PayloadMaxBytes is the maximum number of line protocol bytes to POST in a single request."
            }
          }
        },
        "instana": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Instana exporter\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "agent_key": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {}
          }
        },
        "jaeger": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger gRPC exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {}
          }
        },
        "jaeger_thrift": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger Thrift over HTTP exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {}
          }
        },
        "kafka": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Kafka exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "Kafka protocol version"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The name of the kafka topic to export to (default otlp_spans for traces, otlp_metrics for metrics)"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of messages (default \"otlp_proto\")"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "full": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to maintain a full set of metadata for all topics, or just\nthe minimal set that has been necessary so far. The full set is simpler\nand usually more convenient, but can take up a substantial amount of\nmemory if you have many topics and partitions. Defaults to true."
                },
                "retry": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "max": {
                      "type": "integer",
                      "default": 3,
                      "description": "The total number of times to retry a metadata request when the\ncluster is in the middle of a leader election or at startup (default 3)."
                    },
                    "backoff": {
                      "type": "string",
                      "default": "250ms",
                      "description": "How long to wait for leader election to occur before retrying\n(default 250ms). Similar to the JVM's `retry.backoff.ms`."
                    }
                  },
                  "description": "Retry configuration for metadata.\nThis configuration is useful to avoid race conditions when broker\nis starting at the same time as collector."
                }
              },
              "description": "Metadata is the namespace for metadata management properties used by the\nClient, and shared by the Producer/Consumer."
            },
            "producer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_message_bytes": {
                  "type": "integer",
                  "default": 1000000,
                  "description": "Maximum message bytes the producer will accept to produce."
                },
                "required_acks": {
                  "default": 1,
                  "description": "RequiredAcks Number of acknowledgements required to assume that a message has been sent.\nhttps://pkg.go.dev/github.com/IBM/sarama@v1.30.0#RequiredAcks\nThe options are:\n  0 -> NoResponse.  doesn't send any response\n  1 -> WaitForLocal. waits for only the local commit to succeed before responding ( default )\n  -1 -> WaitForAll. waits for all in-sync replicas to commit before responding."
                },
                "compression": {
                  "type": "string",
                  "default": "none",
                  "description": "Compression Codec used to produce messages\nhttps://pkg.go.dev/github.com/IBM/sarama@v1.30.0#CompressionCodec\nThe options are: 'none', 'gzip', 'snappy', 'lz4', and 'zstd'"
                },
                "flush_max_messages": {
                  "type": "integer",
                  "description": "The maximum number of messages the producer will send in a single\nbroker request. Defaults to 0 for unlimited. Similar to\n`queue.buffering.max.messages` in the JVM producer."
                }
              },
              "description": "Producer is the namespaces for producer properties used only by the Producer"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication defines used authentication mechanism."
            }
          }
        },
        "loadbalancing": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the exporter.\n",
          "properties": {
            "protocol": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "otlp": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "timeout": {
                      "type": "string",
                      "default": "5s"
                    },
                    "sending_queue": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        },
                        "num_consumers": {
                          "type": "integer",
                          "default": 10
                        },
                        "queue_size": {
                          "type": "integer",
                          "default": 1000
                        },
                        "storage": {}
                      }
                    },
                    "retry_on_failure": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        },
                        "initial_interval": {
                          "type": "string",
                          "default": "5s"
                        },
                        "randomization_factor": {
                          "type": "number"
                        },
                        "multiplier": {
                          "type": "number"
                        },
                        "max_interval": {
                          "type": "string",
                          "default": "30s"
                        },
                        "max_elapsed_time": {
                          "type": "string",
                          "default": "5m0s"
                        }
                      }
                    },
                    "endpoint": {
                      "type": "string",
                      "default": ""
                    },
                    "compression": {
                      "type": "string",
                      "default": "gzip"
                    },
                    "tls": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "ca_file": {
                          "type": "string",
                          "default": ""
                        },
                        "ca_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "cert_file": {
                          "type": "string",
                          "default": ""
                        },
                        "cert_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "key_file": {
                          "type": "string",
                          "default": ""
                        },
                        "key_pem": {
                          "type": "string",
                          "default": ""
                        },
                        "min_version": {
                          "type": "string",
                          "default": ""
                        },
                        "max_version": {
                          "type": "string",
                          "default": ""
                        },
                        "reload_interval": {
                          "type": "string"
                        },
                        "insecure": {
                          "type": "boolean",
                          "default": false
                        },
                        "insecure_skip_verify": {
                          "type": "boolean",
                          "default": false
                        },
                        "server_name_override": {
                          "type": "string",
                          "default": ""
                        }
                      }
                    },
                    "keepalive": {},
                    "read_buffer_size": {
                      "type": "integer"
                    },
                    "write_buffer_size": {
                      "type": "integer",
                      "default": 524288
                    },
                    "wait_for_ready": {
                      "type": "boolean",
                      "default": false
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "balancer_name": {
                      "type": "string",
                      "default": ""
                    },
                    "authority": {
                      "type": "string",
                      "default": ""
                    },
                    "auth": {}
                  }
                }
              },
              "description": "Protocol holds the individual protocol-specific settings. Only OTLP is supported at the moment."
            },
            "resolver": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "static": {
                  "description": "StaticResolver defines the configuration for the resolver providing a fixed list of backends"
                },
                "dns": {
                  "description": "DNSResolver defines the configuration for the DNS resolver"
                },
                "k8s": {
                  "description": "K8sSvcResolver defines the configuration for the DNS resolver"
                }
              },
              "description": "ResolverSettings defines the configurations for the backend resolver"
            },
            "routing_key": {
              "type": "string",
              "default": ""
            }
          }
        },
        "logging": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "loglevel": {},
            "verbosity": {
              "default": 1
            },
            "sampling_initial": {
              "type": "integer",
              "default": 2
            },
            "sampling_thereafter": {
              "type": "integer",
              "default": 500
            }
          }
        },
        "logicmonitor": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for LogicMonitor exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "Settings defines configuration for converting resource attributes to telemetry attributes.\nWhen used, it must be embedded in the exporter configuration:\n\n\ttype Config struct {\n\t  // ...\n\t  resourcetotelemetry.Settings `mapstructure:\"resource_to_telemetry_conversion\"`\n\t}"
            },
            "api_token": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "access_id": {
                  "type": "string",
                  "default": ""
                },
                "access_key": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "ApiToken of Logicmonitor Platform"
            }
          }
        },
        "logzio": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config contains Logz.io specific configuration such as Account TracesToken, Region, etc.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "account_token": {
              "type": "string",
              "default": ""
            },
            "region": {
              "type": "string",
              "default": ""
            },
            "custom_endpoint": {
              "type": "string",
              "default": ""
            },
            "drain_interval": {
              "type": "integer"
            },
            "queue_capacity": {
              "type": "integer"
            },
            "queue_max_length": {
              "type": "integer"
            }
          }
        },
        "loki": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Loki exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "default_labels_enabled": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "mezmo": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Mezmo exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "ingest_url": {
              "type": "string",
              "default": "https://logs.mezmo.com/otel/ingest/rest",
              "description": "IngestURL is the URL to send telemetry to."
            },
            "ingest_key": {
              "type": "string",
              "default": "",
              "description": "Token is the authentication token provided by Mezmo."
            }
          }
        },
        "opencensus": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for OpenCensus exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer"
                },
                "queue_size": {
                  "type": "integer"
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "initial_interval": {
                  "type": "string"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string"
                },
                "max_elapsed_time": {
                  "type": "string"
                }
              }
            },
            "num_workers": {
              "type": "integer",
              "default": 2,
              "description": "The number of workers that send the gRPC requests."
            }
          }
        },
        "otlp": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {}
          }
        },
        "otlphttp": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": "gzip"
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces_endpoint": {
              "type": "string",
              "default": ""
            },
            "metrics_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs_endpoint": {
              "type": "string",
              "default": ""
            }
          }
        },
        "parquet": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "path": {
              "type": "string",
              "default": ""
            }
          }
        },
        "prometheus": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Prometheus exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace if set, exports metrics under the provided value."
            },
            "const_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ConstLabels are values that are applied for every exported metric."
            },
            "send_timestamps": {
              "type": "boolean",
              "default": false,
              "description": "SendTimestamps will send the underlying scrape timestamp with the export"
            },
            "metric_expiration": {
              "type": "string",
              "default": "5m0s",
              "description": "MetricExpiration defines how long metrics are kept without updates"
            },
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings defines configuration for converting resource attributes to metric labels."
            },
            "enable_open_metrics": {
              "type": "boolean",
              "default": false,
              "description": "EnableOpenMetrics enables the use of the OpenMetrics encoding option for the prometheus exporter."
            },
            "add_metric_suffixes": {
              "type": "boolean",
              "default": true,
              "description": "AddMetricSuffixes controls whether suffixes are added to metric names. Defaults to true."
            }
          }
        },
        "prometheusremotewrite": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Remote Write exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "50ms"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "200ms"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "1m0s"
                }
              }
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "prefix attached to each exported metric name\nSee: https://prometheus.io/docs/practices/naming/#metric-names"
            },
            "remote_write_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled if false the queue is not enabled, the export requests\nare executed synchronously."
                },
                "queue_size": {
                  "type": "integer",
                  "default": 10000,
                  "description": "QueueSize is the maximum number of OTLP metric batches allowed\nin the queue at a given time. Ignored if Enabled is false."
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 5,
                  "description": "NumWorkers configures the number of workers used by\nthe collector to fan out remote write requests."
                }
              },
              "description": "QueueConfig allows users to fine tune the queues\nthat handle outgoing requests."
            },
            "external_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ExternalLabels defines a map of label keys and values that are allowed to start with reserved prefix \"__\""
            },
            "endpoint": {
              "type": "string",
              "default": "http://some.url:9411/api/prom/push"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "resource_to_telemetry_conversion": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`."
                }
              },
              "description": "ResourceToTelemetrySettings is the option for converting resource attributes to telemetry attributes.\n\"Enabled\" - A boolean field to enable/disable this option. Default is `false`.\nIf enabled, all the resource attributes will be converted to metric labels by default."
            },
            "wal": {},
            "target_info": {
              "description": "TargetInfo allows customizing the target_info metric"
            },
            "export_created_metric": {
              "description": "CreatedMetric allows customizing creation of _created metrics"
            },
            "add_metric_suffixes": {
              "type": "boolean",
              "default": true,
              "description": "AddMetricSuffixes controls whether unit and type suffixes are added to metrics on export"
            }
          }
        },
        "pulsar": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Pulsar exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": "pulsar://localhost:6650",
              "description": "Endpoint of pulsar broker (default \"pulsar://localhost:6650\")"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The name of the pulsar topic to export to (default otlp_spans for traces, otlp_metrics for metrics)"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of messages (default \"otlp_proto\")"
            },
            "producer": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_reconnect_broker": {},
                "hashing_scheme": {
                  "type": "string",
                  "default": ""
                },
                "compression_level": {
                  "type": "string",
                  "default": ""
                },
                "compression_type": {
                  "type": "string",
                  "default": ""
                },
                "max_pending_messages": {
                  "type": "integer"
                },
                "batch_builder_type": {
                  "type": "string",
                  "default": ""
                },
                "partitions_auto_discovery_interval": {
                  "type": "string"
                },
                "batching_max_publish_delay": {
                  "type": "string"
                },
                "batching_max_messages": {
                  "default": 0
                },
                "batching_max_size": {
                  "default": 0
                },
                "disable_block_if_queue_full": {
                  "type": "boolean",
                  "default": false
                },
                "disable_batching": {
                  "type": "boolean",
                  "default": false
                }
              },
              "description": "Producer configuration of the Pulsar producer"
            },
            "tls_trust_certs_file_path": {
              "type": "string",
              "default": "",
              "description": "Set the path to the trusted TLS certificate file"
            },
            "tls_allow_insecure_connection": {
              "type": "boolean",
              "default": false,
              "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tls": {},
                "token": {},
                "athenz": {},
                "oauth2": {}
              }
            },
            "operation_timeout": {
              "type": "string",
              "default": "30s"
            },
            "connection_timeout": {
              "type": "string",
              "default": "5s"
            },
            "map_connections_per_broker": {
              "type": "integer",
              "default": 1
            }
          }
        },
        "sapm": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SAPM exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is the destination to where traces will be sent to in SAPM format.\nIt must be a full URL and include the scheme, port and path e.g, https://ingest.signalfx.com/v2/trace"
            },
            "access_token": {
              "type": "string",
              "default": "",
              "description": "AccessToken is the authentication token provided by SignalFx."
            },
            "num_workers": {
              "default": 8,
              "description": "NumWorkers is the number of workers that should be used to export traces.\nExporter can make as many requests in parallel as the number of workers. Defaults to 8."
            },
            "max_connections": {
              "default": 0,
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open."
            },
            "disable_compression": {
              "type": "boolean",
              "default": false,
              "description": "Disable compression. If set to true then Compression field is ignored."
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Compression method to use (gzip or zstd). Ignored if DisableCompression=true.\nIf unspecified defaults to gzip."
            },
            "log_detailed_response": {
              "type": "boolean",
              "default": false,
              "description": "Log detailed response from trace ingest."
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": true,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            }
          }
        },
        "sentry": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the Sentry Exporter.\n",
          "properties": {
            "dsn": {
              "type": "string",
              "default": "",
              "description": "DSN to report transaction to Sentry. If the DSN is not set, no trace will be sent to Sentry."
            },
            "environment": {
              "type": "string",
              "default": "",
              "description": "The deployment environment name, such as production or staging.\nEnvironments are case sensitive. The environment name can't contain newlines, spaces or forward slashes,\ncan't be the string \"None\", or exceed 64 characters."
            },
            "insecure_skip_verify": {
              "type": "boolean",
              "default": false,
              "description": "InsecureSkipVerify controls whether the client verifies the Sentry server certificate chain"
            }
          }
        },
        "signalfx": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SignalFx exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "access_token": {
              "type": "string",
              "default": "",
              "description": "AccessToken is the authentication token provided by SignalFx."
            },
            "realm": {
              "type": "string",
              "default": "",
              "description": "Realm is the SignalFx realm where data is going to be sent to."
            },
            "ingest_url": {
              "type": "string",
              "default": "",
              "description": "IngestURL is the destination to where SignalFx metrics will be sent to, it is\nintended for tests and debugging. The value of Realm is ignored if the\nURL is specified. The exporter will automatically append the appropriate\npath: \"/v2/datapoint\" for metrics, and \"/v2/event\" for events."
            },
            "ingest_tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "ingest_tls needs to be set if the exporter's IngestURL is pointing to a signalfx receiver\nwith TLS enabled and using a self-signed certificate where its CA is not loaded in the system cert pool."
            },
            "api_url": {
              "type": "string",
              "default": "",
              "description": "APIURL is the destination to where SignalFx metadata will be sent. This\nvalue takes precedence over the value of Realm"
            },
            "api_tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "api_tls needs to be set if the exporter's APIURL is pointing to a httforwarder extension\nwith TLS enabled and using a self-signed certificate where its CA is not loaded in the system cert pool."
            },
            "log_data_points": {
              "type": "boolean",
              "default": false,
              "description": "Whether to log datapoints dispatched to Splunk Observability Cloud"
            },
            "log_dimension_updates": {
              "type": "boolean",
              "default": false,
              "description": "Whether to log dimension updates being sent to SignalFx."
            },
            "dimension_client": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_buffered": {
                  "type": "integer",
                  "default": 10000
                },
                "send_delay": {
                  "type": "string",
                  "default": "10s"
                },
                "max_idle_conns": {
                  "type": "integer",
                  "default": 20
                },
                "max_idle_conns_per_host": {
                  "type": "integer",
                  "default": 20
                },
                "max_conns_per_host": {
                  "type": "integer",
                  "default": 20
                },
                "idle_conn_timeout": {
                  "type": "string",
                  "default": "30s"
                }
              },
              "description": "Dimension update client configuration used for metadata updates."
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": true,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "translation_rules": {
              "description": "TranslationRules defines a set of rules how to translate metrics to a SignalFx compatible format\nRules defined in translation/constants.go are used by default.\nDeprecated: Use metricstransform processor to do metrics transformations."
            },
            "disable_default_translation_rules": {
              "type": "boolean",
              "default": false
            },
            "delta_translation_ttl": {
              "type": "integer",
              "default": 3600,
              "description": "DeltaTranslationTTL specifies in seconds the max duration to keep the most recent datapoint for any\n`delta_metric` specified in TranslationRules. Default is 3600s."
            },
            "sync_host_metadata": {
              "type": "boolean",
              "default": false,
              "description": "SyncHostMetadata defines if the exporter should scrape host metadata and\nsends it as property updates to SignalFx backend.\nIMPORTANT: Host metadata synchronization relies on `resourcedetection` processor.\n           If this option is enabled make sure that `resourcedetection` processor\n           is enabled in the pipeline with one of the cloud provider detectors\n           or environment variable detector setting a unique value to\n           `host.name` attribute within your k8s cluster. Also keep override\n           And keep `override=true` in resourcedetection config."
            },
            "exclude_metrics": {
              "description": "ExcludeMetrics defines dpfilter.MetricFilters that will determine metrics to be\nexcluded from sending to SignalFx backend. If translations enabled with\nTranslationRules options, the exclusion will be applie on translated metrics."
            },
            "include_metrics": {
              "description": "IncludeMetrics defines dpfilter.MetricFilters to override exclusion any of metric.\nThis option can be used to included metrics that are otherwise dropped by default.\nSee ./translation/default_metrics.go for a list of metrics that are dropped by default."
            },
            "exclude_properties": {
              "description": "ExcludeProperties defines dpfilter.PropertyFilters to prevent inclusion of\nproperties to include with dimension updates to the SignalFx backend."
            },
            "correlation": {
              "description": "Correlation configuration for syncing traces service and environment to metrics."
            },
            "nonalphanumeric_dimension_chars": {
              "type": "string",
              "default": "_-.",
              "description": "NonAlphanumericDimensionChars is a list of allowable characters, in addition to alphanumeric ones,\nto be used in a dimension key."
            },
            "max_connections": {
              "type": "integer",
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open.\nDeprecated: use HTTPClientSettings.MaxIdleConns or HTTPClientSettings.MaxIdleConnsPerHost instead."
            },
            "drop_histogram_buckets": {
              "type": "boolean",
              "default": false,
              "description": "Whether to drop  histogram bucket metrics dispatched to Splunk Observability.\nDefault value is set to false."
            }
          }
        },
        "skywalking": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SkyWalking exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "compression": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "keepalive": {},
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "wait_for_ready": {
              "type": "boolean",
              "default": false
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "balancer_name": {
              "type": "string",
              "default": ""
            },
            "authority": {
              "type": "string",
              "default": ""
            },
            "auth": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "num_streams": {
              "type": "integer",
              "default": 2,
              "description": "The number of grpc streams that send the gRPC requests."
            }
          }
        },
        "splunk_hec": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Splunk exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "log_data_enabled": {
              "type": "boolean",
              "default": true,
              "description": "LogDataEnabled can be used to disable sending logs by the exporter."
            },
            "profiling_data_enabled": {
              "type": "boolean",
              "default": true,
              "description": "ProfilingDataEnabled can be used to disable sending profiling data by the exporter."
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "HEC Token is the authentication token provided by Splunk: https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector."
            },
            "source": {
              "type": "string",
              "default": "",
              "description": "Optional Splunk source: https://docs.splunk.com/Splexicon:Source.\nSources identify the incoming data."
            },
            "sourcetype": {
              "type": "string",
              "default": "",
              "description": "Optional Splunk source type: https://docs.splunk.com/Splexicon:Sourcetype."
            },
            "index": {
              "type": "string",
              "default": "",
              "description": "Splunk index, optional name of the Splunk index."
            },
            "max_connections": {
              "default": 0,
              "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open. Defaults to 100.\nDeprecated: use HTTPClientSettings.MaxIdleConns or HTTPClientSettings.MaxIdleConnsPerHost instead."
            },
            "disable_compression": {
              "type": "boolean",
              "default": false,
              "description": "Disable GZip compression. Defaults to false."
            },
            "max_content_length_logs": {
              "default": 2097152,
              "description": "Maximum log payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_content_length_metrics": {
              "default": 2097152,
              "description": "Maximum metric payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_content_length_traces": {
              "default": 2097152,
              "description": "Maximum trace payload size in bytes. Default value is 2097152 bytes (2MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "max_event_size": {
              "default": 5242880,
              "description": "Maximum payload size, raw uncompressed. Default value is 5242880 bytes (5MiB).\nMaximum allowed value is 838860800 (~ 800 MB)."
            },
            "splunk_app_name": {
              "type": "string",
              "default": "OpenTelemetry Collector Contrib",
              "description": "App name is used to track telemetry information for Splunk App's using HEC by App name. Defaults to \"OpenTelemetry Collector Contrib\"."
            },
            "splunk_app_version": {
              "type": "string",
              "default": "",
              "description": "App version is used to track telemetry information for Splunk App's using HEC by App version. Defaults to the current OpenTelemetry Collector Contrib build version."
            },
            "hec_metadata_to_otel_attrs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source": {
                  "type": "string",
                  "default": "com.splunk.source",
                  "description": "Source indicates the mapping of the source field to a specific unified model attribute."
                },
                "sourcetype": {
                  "type": "string",
                  "default": "com.splunk.sourcetype",
                  "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute."
                },
                "index": {
                  "type": "string",
                  "default": "com.splunk.index",
                  "description": "Index indicates the mapping of the index field to a specific unified model attribute."
                },
                "host": {
                  "type": "string",
                  "default": "host.name",
                  "description": "Host indicates the mapping of the host field to a specific unified model attribute."
                }
              },
              "description": "HecToOtelAttrs creates a mapping from attributes to HEC specific metadata: source, sourcetype, index and host."
            },
            "otel_to_hec_fields": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "severity_text": {
                  "type": "string",
                  "default": "otel.log.severity.text",
                  "description": "SeverityText informs the exporter to map the severity text field to a specific HEC field."
                },
                "severity_number": {
                  "type": "string",
                  "default": "otel.log.severity.number",
                  "description": "SeverityNumber informs the exporter to map the severity number field to a specific HEC field."
                }
              },
              "description": "HecFields creates a mapping from attributes to HEC fields."
            },
            "health_path": {
              "type": "string",
              "default": "/services/collector/health",
              "description": "HealthPath for health API, default is '/services/collector/health'"
            },
            "health_check_enabled": {
              "type": "boolean",
              "default": false,
              "description": "HecHealthCheckEnabled can be used to verify Splunk HEC health on exporter's startup"
            },
            "export_raw": {
              "type": "boolean",
              "default": false,
              "description": "ExportRaw to send only the log's body, targeting a Splunk HEC raw endpoint."
            },
            "use_multi_metric_format": {
              "type": "boolean",
              "default": false,
              "description": "UseMultiMetricFormat combines metric events to save space during ingestion."
            },
            "heartbeat": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "interval": {
                  "type": "string",
                  "description": "Interval represents the time interval for the heartbeat interval. If nothing or 0 is set,\nheartbeat is not enabled.\nA heartbeat is an event sent to _internal index with metadata for the current collector/host."
                },
                "startup": {
                  "type": "boolean",
                  "default": false,
                  "description": "Startup is used to send heartbeat events on exporter's startup."
                }
              },
              "description": "Heartbeat is the configuration to enable heartbeat"
            },
            "telemetry": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled is the bool to enable telemetry inside splunk hec exporter"
                },
                "override_metrics_names": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "OverrideMetricsNames is the map to override metrics for internal metrics in splunk hec exporter"
                },
                "extra_attributes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "ExtraAttributes is the extra attributes for metrics inside splunk hex exporter"
                }
              },
              "description": "Telemetry is the configuration for splunk hec exporter telemetry"
            }
          }
        },
        "sumologic": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Sumo Logic exporter.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "compress_encoding": {
              "type": "string",
              "default": "gzip",
              "description": "Compression encoding format, either empty string, gzip or deflate (default gzip)\nEmpty string means no compression"
            },
            "max_request_body_size": {
              "type": "integer",
              "default": 1048576,
              "description": "Max HTTP request body size in bytes before compression (if applied).\nBy default 1MB is recommended."
            },
            "log_format": {
              "type": "string",
              "default": "json",
              "description": "Logs related configuration\nFormat to post logs into Sumo. (default json)\n  * text - Logs will appear in Sumo Logic in text format.\n  * json - Logs will appear in Sumo Logic in json format."
            },
            "metric_format": {
              "type": "string",
              "default": "prometheus",
              "description": "Metrics related configuration\nThe format of metrics you will be sending, either graphite or carbon2 or prometheus (Default is prometheus)\nPossible values are `carbon2` and `prometheus`"
            },
            "graphite_template": {
              "type": "string",
              "default": "%{_metric_}",
              "description": "Graphite template.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "metadata_attributes": {
              "description": "List of regexes for attributes which should be send as metadata"
            },
            "source_category": {
              "type": "string",
              "default": "",
              "description": "Sumo specific options\nDesired source category.\nUseful if you want to override the source category configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "source_name": {
              "type": "string",
              "default": "",
              "description": "Desired source name.\nUseful if you want to override the source name configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "source_host": {
              "type": "string",
              "default": "",
              "description": "Desired host name.\nUseful if you want to override the source host configured for the source.\nPlaceholders `%{attr_name}` will be replaced with attribute value for attr_name."
            },
            "client": {
              "type": "string",
              "default": "otelcol",
              "description": "Name of the client"
            }
          }
        },
        "tanzuobservability": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration options for the exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {}
              },
              "description": "Traces defines the Traces exporter specific configuration"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {},
                "resource_attrs_included": {
                  "type": "boolean",
                  "default": false
                },
                "app_tags_excluded": {
                  "type": "boolean",
                  "default": false,
                  "description": "AppTagsExcluded will exclude the Resource Attributes `application`, `service.name` -> (service),\n`cluster`, and `shard` from the transformed TObs metric if set to true."
                }
              }
            }
          }
        },
        "tencentcloud_logservice": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for TencentCloud Log Service exporter.\n",
          "properties": {
            "region": {
              "type": "string",
              "default": "",
              "description": "LogService's Region, https://cloud.tencent.com/document/product/614/18940\nfor TencentCloud Kubernetes(or CVM), set ap-{region}.cls.tencentyun.com, eg ap-beijing.cls.tencentyun.com;\n others set ap-{region}.cls.tencentcs.com, eg ap-beijing.cls.tencentcs.com"
            },
            "logset": {
              "type": "string",
              "default": "",
              "description": "LogService's LogSet Name"
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "LogService's Topic Name"
            },
            "secret_id": {
              "type": "string",
              "default": "",
              "description": "TencentCloud access key id"
            },
            "secret_key": {
              "type": "string",
              "default": "",
              "description": "TencentCloud access key secret"
            }
          }
        },
        "zipkin": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration settings for the Zipkin exporter.\n",
          "properties": {
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "format": {
              "type": "string",
              "default": "json"
            },
            "default_service_name": {
              "type": "string",
              "default": "<missing service name>"
            }
          }
        }
      }
    },
    "extensions" : {
      "type": "object",
      "description": "Extensions provide capabilities on top of the primary functionality of the collector.",
      "additionalProperties": false,
      "patternProperties": {
        "additionalProperties": false,
        "^asapclient(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "key_id": {
              "type": "string",
              "default": ""
            },
            "ttl": {
              "type": "string"
            },
            "issuer": {
              "type": "string",
              "default": ""
            },
            "audience": {},
            "private_key": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^awsproxy(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for an AWS X-Ray proxy.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:2000"
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "ProxyAddress defines the proxy address that the local TCP server\nforwards HTTP requests to AWS X-Ray backend through."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "TLSSetting struct exposes TLS client configuration when forwarding\ncalls to the AWS X-Ray backend."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Region is the AWS region the local TCP server forwards requests to."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "RoleARN is the IAM role used by the local TCP server when\ncommunicating with the AWS X-Ray service."
            },
            "aws_endpoint": {
              "type": "string",
              "default": "",
              "description": "AWSEndpoint is the X-Ray service endpoint which the local\nTCP server forwards requests to."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "LocalMode determines whether the EC2 instance metadata endpoint\nwill be called or not. Set to `true` to skip EC2 instance\nmetadata check."
            }
          }
        },
        "^basicauth(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "htpasswd": {
              "description": "Htpasswd settings."
            },
            "client_auth": {
              "description": "ClientAuth settings"
            }
          }
        },
        "^bearertokenauth(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config specifies how the Per-RPC bearer token based authentication data should be obtained.\n",
          "properties": {
            "scheme": {
              "type": "string",
              "default": "Bearer",
              "description": "Scheme specifies the auth-scheme for the token. Defaults to \"Bearer\""
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "BearerToken specifies the bearer token to use for every RPC."
            },
            "filename": {
              "type": "string",
              "default": "",
              "description": "Filename points to a file that contains the bearer token to use for every RPC."
            }
          }
        },
        "^db_storage(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for dbstorage extension.\n",
          "properties": {
            "driver": {
              "type": "string",
              "default": ""
            },
            "datasource": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^docker_observer(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for docker observer\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/docker.sock",
              "description": "The URL of the docker server.  Default is \"unix:///var/run/docker.sock\""
            },
            "timeout": {
              "type": "string",
              "default": "5s",
              "description": "The maximum amount of time to wait for docker API responses.  Default is 5s"
            },
            "excluded_images": {
              "description": "A list of filters whose matching images are to be excluded.  Supports literals, globs, and regex."
            },
            "use_hostname_if_present": {
              "type": "boolean",
              "default": false,
              "description": "If true, the \"Config.Hostname\" field (if present) of the docker\ncontainer will be used as the discovered host that is used to configure\nreceivers.  If false or if no hostname is configured, the field\n`NetworkSettings.IPAddress` is used instead."
            },
            "use_host_bindings": {
              "type": "boolean",
              "default": false,
              "description": "If true, the observer will configure receivers for matching container endpoints\nusing the host bound ip and port.  This is useful if containers exist that are not\naccessible to an instance of the agent running outside of the docker network stack.\nIf UseHostnameIfPresent and this config are both enabled, this setting will take precedence."
            },
            "ignore_non_host_bindings": {
              "type": "boolean",
              "default": false,
              "description": "If true, the observer will ignore discovered container endpoints that are not bound\nto host ports.  This is useful if containers exist that are not accessible\nto an instance of the agent running outside of the docker network stack."
            },
            "cache_sync_interval": {
              "type": "string",
              "default": "1h0m0s",
              "description": "The time to wait before resyncing the list of containers the observer maintains\nthrough the docker event listener example: cache_sync_interval: \"20m\"\nDefault: \"60m\""
            },
            "api_version": {
              "type": "number",
              "description": "Docker client API version. Default is 1.22"
            }
          }
        },
        "^ecs_task_observer(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "refresh_interval": {
              "type": "string",
              "default": "30s",
              "description": "RefreshInterval determines the frequency at which the observer\nneeds to poll for collecting new information about task containers."
            },
            "port_labels": {
              "description": "PortLabels is a list of container Docker labels from which to obtain the observed Endpoint port.\nThe first label with valid port found will be used.  If no PortLabels provided, default of\nECS_TASK_OBSERVER_PORT will be used."
            }
          }
        },
        "^file_storage(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for file storage extension.\n",
          "properties": {
            "directory": {
              "type": "string",
              "default": "/var/lib/otelcol/file_storage"
            },
            "timeout": {
              "type": "string",
              "default": "1s"
            },
            "compaction": {
              "description": "CompactionConfig defines configuration for optional file storage compaction."
            }
          }
        },
        "^headers_setter(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "headers": {}
          }
        },
        "^health_check(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the health check\nextension, used to report the health status of the service.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:13133"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "path": {
              "type": "string",
              "default": "/",
              "description": "Path represents the path the health check service will serve.\nThe default path is \"/\"."
            },
            "response_body": {
              "description": "ResponseBody represents the body of the response returned by the health check service.\nThis overrides the default response that it would return."
            },
            "check_collector_pipeline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not enable collector pipeline check."
                },
                "interval": {
                  "type": "string",
                  "default": "5m",
                  "description": "Interval the time range to check healthy status of collector pipeline"
                },
                "exporter_failure_threshold": {
                  "type": "integer",
                  "default": 5,
                  "description": "ExporterFailureThreshold is the threshold of exporter failure numbers during the Interval"
                }
              },
              "description": "CheckCollectorPipeline contains the list of settings of collector pipeline health check"
            }
          }
        },
        "^host_observer(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for host observer.\n",
          "properties": {
            "refresh_interval": {
              "type": "string",
              "default": "10s",
              "description": "RefreshInterval determines how frequency at which the observer\nneeds to poll for collecting information about new processes."
            }
          }
        },
        "^http_forwarder(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for http forwarder extension.\n",
          "properties": {
            "ingress": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ":6060"
                },
                "tls": {},
                "cors": {},
                "auth": {},
                "max_request_body_size": {
                  "type": "integer"
                },
                "include_metadata": {
                  "type": "boolean",
                  "default": false
                },
                "response_headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Ingress holds config settings for HTTP server listening for requests."
            },
            "egress": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string",
                  "default": "10s"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {}
              },
              "description": "Egress holds config settings to use for forwarded requests."
            }
          }
        },
        "^jaegerremotesampling(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the health check\nextension, used to report the health status of the service.\n",
          "properties": {
            "http": {},
            "grpc": {},
            "source": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "remote": {
                  "description": "Remote defines the remote location for the file"
                },
                "file": {
                  "type": "string",
                  "default": "",
                  "description": "File specifies a local file as the strategies source"
                },
                "reload_interval": {
                  "type": "string",
                  "description": "ReloadInterval determines the periodicity to refresh the strategies"
                }
              },
              "description": "Source configures the source for the strategies file. One of `remote` or `file` has to be specified."
            }
          }
        },
        "^k8s_observer(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for k8s attributes processor.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "node": {
              "type": "string",
              "default": "",
              "description": "Node is the node name to limit the discovery of pod, port, and node endpoints.\nProviding no value (the default) results in discovering endpoints for all available nodes.\nFor example, node name can be set using the downward API inside the collector\npod spec as follows:\n\nenv:\n  - name: K8S_NODE_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.nodeName\n\nThen set this value to ${env:K8S_NODE_NAME} in the configuration."
            },
            "observe_pods": {
              "type": "boolean",
              "default": true,
              "description": "ObservePods determines whether to report observer pod and port endpoints. If `true` and Node is specified\nit will only discover pod and port endpoints whose `spec.nodeName` matches the provided node name. If `true` and\nNode isn't specified, it will discover all available pod and port endpoints. `true` by default."
            },
            "observe_nodes": {
              "type": "boolean",
              "default": false,
              "description": "ObserveNodes determines whether to report observer k8s.node endpoints. If `true` and Node is specified\nit will only discover node endpoints whose `metadata.name` matches the provided node name. If `true` and\nNode isn't specified, it will discover all available node endpoints. `false` by default."
            }
          }
        },
        "^memory_ballast(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "size_mib": {
              "default": 0
            },
            "size_in_percentage": {
              "default": 0
            }
          }
        },
        "^oauth2client(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config stores the configuration for OAuth2 Client Credentials (2-legged OAuth2 flow) setup.\n",
          "properties": {
            "client_id": {
              "type": "string",
              "default": "",
              "description": "ClientID is the application's ID.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-2.2"
            },
            "client_secret": {
              "type": "string",
              "default": "",
              "description": "ClientSecret is the application's secret.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1"
            },
            "endpoint_params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "EndpointParams specifies additional parameters for requests to the token endpoint."
            },
            "token_url": {
              "type": "string",
              "default": "",
              "description": "TokenURL is the resource server's token endpoint\nURL. This is a constant specific to each server.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-3.2"
            },
            "scopes": {
              "description": "Scope specifies optional requested permissions.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-3.3"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "TLSSetting struct exposes TLS client configuration for the underneath client to authorization server."
            },
            "timeout": {
              "type": "string",
              "description": "Timeout parameter configures `http.Client.Timeout` for the underneath client to authorization\nserver while fetching and refreshing tokens."
            }
          }
        },
        "^oidc(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the OIDC Authenticator extension.\n",
          "properties": {
            "attribute": {
              "type": "string",
              "default": "authorization",
              "description": "The attribute (header name) to look for auth data. Optional, default value: \"authorization\"."
            },
            "issuer_url": {
              "type": "string",
              "default": "",
              "description": "IssuerURL is the base URL for the OIDC provider.\nRequired."
            },
            "audience": {
              "type": "string",
              "default": "",
              "description": "Audience of the token, used during the verification.\nFor example: \"https://accounts.google.com\" or \"https://login.salesforce.com\".\nRequired."
            },
            "issuer_ca_path": {
              "type": "string",
              "default": "",
              "description": "The local path for the issuer CA's TLS server cert.\nOptional."
            },
            "username_claim": {
              "type": "string",
              "default": "",
              "description": "The claim to use as the username, in case the token's 'sub' isn't the suitable source.\nOptional."
            },
            "groups_claim": {
              "type": "string",
              "default": "",
              "description": "The claim that holds the subject's group membership information.\nOptional."
            }
          }
        },
        "^pprof(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the golang\nnet/http/pprof (Performance Profiler) extension.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:1777"
            },
            "block_profile_fraction": {
              "type": "integer",
              "description": "Fraction of blocking events that are profiled. A value <= 0 disables\nprofiling. See https://golang.org/pkg/runtime/#SetBlockProfileRate for details."
            },
            "mutex_profile_fraction": {
              "type": "integer",
              "description": "Fraction of mutex contention events that are profiled. A value <= 0\ndisables profiling. See https://golang.org/pkg/runtime/#SetMutexProfileFraction\nfor details."
            },
            "save_to_file": {
              "type": "string",
              "default": "",
              "description": "Optional file name to save the CPU profile to. The profiling starts when the\nCollector starts and is saved to the file when the Collector is terminated."
            }
          }
        },
        "^sigv4auth(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config stores the configuration for the Sigv4 Authenticator\n",
          "properties": {
            "region": {
              "type": "string",
              "default": ""
            },
            "service": {
              "type": "string",
              "default": ""
            },
            "assume_role": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "arn": {
                  "type": "string",
                  "default": ""
                },
                "session_name": {
                  "type": "string",
                  "default": ""
                },
                "sts_region": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "AssumeRole holds the configuration needed to assume a role"
            }
          }
        },
        "^zpages(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:55679"
            }
          }
        }
      },
      "properties": {
        "additionalProperties": false,
        "asapclient": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "key_id": {
              "type": "string",
              "default": ""
            },
            "ttl": {
              "type": "string"
            },
            "issuer": {
              "type": "string",
              "default": ""
            },
            "audience": {},
            "private_key": {
              "type": "string",
              "default": ""
            }
          }
        },
        "awsproxy": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for an AWS X-Ray proxy.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:2000"
            },
            "proxy_address": {
              "type": "string",
              "default": "",
              "description": "ProxyAddress defines the proxy address that the local TCP server\nforwards HTTP requests to AWS X-Ray backend through."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "TLSSetting struct exposes TLS client configuration when forwarding\ncalls to the AWS X-Ray backend."
            },
            "region": {
              "type": "string",
              "default": "",
              "description": "Region is the AWS region the local TCP server forwards requests to."
            },
            "role_arn": {
              "type": "string",
              "default": "",
              "description": "RoleARN is the IAM role used by the local TCP server when\ncommunicating with the AWS X-Ray service."
            },
            "aws_endpoint": {
              "type": "string",
              "default": "",
              "description": "AWSEndpoint is the X-Ray service endpoint which the local\nTCP server forwards requests to."
            },
            "local_mode": {
              "type": "boolean",
              "default": false,
              "description": "LocalMode determines whether the EC2 instance metadata endpoint\nwill be called or not. Set to `true` to skip EC2 instance\nmetadata check."
            }
          }
        },
        "basicauth": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "htpasswd": {
              "description": "Htpasswd settings."
            },
            "client_auth": {
              "description": "ClientAuth settings"
            }
          }
        },
        "bearertokenauth": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config specifies how the Per-RPC bearer token based authentication data should be obtained.\n",
          "properties": {
            "scheme": {
              "type": "string",
              "default": "Bearer",
              "description": "Scheme specifies the auth-scheme for the token. Defaults to \"Bearer\""
            },
            "token": {
              "type": "string",
              "default": "",
              "description": "BearerToken specifies the bearer token to use for every RPC."
            },
            "filename": {
              "type": "string",
              "default": "",
              "description": "Filename points to a file that contains the bearer token to use for every RPC."
            }
          }
        },
        "db_storage": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for dbstorage extension.\n",
          "properties": {
            "driver": {
              "type": "string",
              "default": ""
            },
            "datasource": {
              "type": "string",
              "default": ""
            }
          }
        },
        "docker_observer": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for docker observer\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/docker.sock",
              "description": "The URL of the docker server.  Default is \"unix:///var/run/docker.sock\""
            },
            "timeout": {
              "type": "string",
              "default": "5s",
              "description": "The maximum amount of time to wait for docker API responses.  Default is 5s"
            },
            "excluded_images": {
              "description": "A list of filters whose matching images are to be excluded.  Supports literals, globs, and regex."
            },
            "use_hostname_if_present": {
              "type": "boolean",
              "default": false,
              "description": "If true, the \"Config.Hostname\" field (if present) of the docker\ncontainer will be used as the discovered host that is used to configure\nreceivers.  If false or if no hostname is configured, the field\n`NetworkSettings.IPAddress` is used instead."
            },
            "use_host_bindings": {
              "type": "boolean",
              "default": false,
              "description": "If true, the observer will configure receivers for matching container endpoints\nusing the host bound ip and port.  This is useful if containers exist that are not\naccessible to an instance of the agent running outside of the docker network stack.\nIf UseHostnameIfPresent and this config are both enabled, this setting will take precedence."
            },
            "ignore_non_host_bindings": {
              "type": "boolean",
              "default": false,
              "description": "If true, the observer will ignore discovered container endpoints that are not bound\nto host ports.  This is useful if containers exist that are not accessible\nto an instance of the agent running outside of the docker network stack."
            },
            "cache_sync_interval": {
              "type": "string",
              "default": "1h0m0s",
              "description": "The time to wait before resyncing the list of containers the observer maintains\nthrough the docker event listener example: cache_sync_interval: \"20m\"\nDefault: \"60m\""
            },
            "api_version": {
              "type": "number",
              "description": "Docker client API version. Default is 1.22"
            }
          }
        },
        "ecs_task_observer": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "refresh_interval": {
              "type": "string",
              "default": "30s",
              "description": "RefreshInterval determines the frequency at which the observer\nneeds to poll for collecting new information about task containers."
            },
            "port_labels": {
              "description": "PortLabels is a list of container Docker labels from which to obtain the observed Endpoint port.\nThe first label with valid port found will be used.  If no PortLabels provided, default of\nECS_TASK_OBSERVER_PORT will be used."
            }
          }
        },
        "file_storage": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for file storage extension.\n",
          "properties": {
            "directory": {
              "type": "string",
              "default": "/var/lib/otelcol/file_storage"
            },
            "timeout": {
              "type": "string",
              "default": "1s"
            },
            "compaction": {
              "description": "CompactionConfig defines configuration for optional file storage compaction."
            }
          }
        },
        "headers_setter": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "headers": {}
          }
        },
        "health_check": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the health check\nextension, used to report the health status of the service.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:13133"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "path": {
              "type": "string",
              "default": "/",
              "description": "Path represents the path the health check service will serve.\nThe default path is \"/\"."
            },
            "response_body": {
              "description": "ResponseBody represents the body of the response returned by the health check service.\nThis overrides the default response that it would return."
            },
            "check_collector_pipeline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not enable collector pipeline check."
                },
                "interval": {
                  "type": "string",
                  "default": "5m",
                  "description": "Interval the time range to check healthy status of collector pipeline"
                },
                "exporter_failure_threshold": {
                  "type": "integer",
                  "default": 5,
                  "description": "ExporterFailureThreshold is the threshold of exporter failure numbers during the Interval"
                }
              },
              "description": "CheckCollectorPipeline contains the list of settings of collector pipeline health check"
            }
          }
        },
        "host_observer": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for host observer.\n",
          "properties": {
            "refresh_interval": {
              "type": "string",
              "default": "10s",
              "description": "RefreshInterval determines how frequency at which the observer\nneeds to poll for collecting information about new processes."
            }
          }
        },
        "http_forwarder": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for http forwarder extension.\n",
          "properties": {
            "ingress": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ":6060"
                },
                "tls": {},
                "cors": {},
                "auth": {},
                "max_request_body_size": {
                  "type": "integer"
                },
                "include_metadata": {
                  "type": "boolean",
                  "default": false
                },
                "response_headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Ingress holds config settings for HTTP server listening for requests."
            },
            "egress": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string",
                  "default": "10s"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {}
              },
              "description": "Egress holds config settings to use for forwarded requests."
            }
          }
        },
        "jaegerremotesampling": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the health check\nextension, used to report the health status of the service.\n",
          "properties": {
            "http": {},
            "grpc": {},
            "source": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "remote": {
                  "description": "Remote defines the remote location for the file"
                },
                "file": {
                  "type": "string",
                  "default": "",
                  "description": "File specifies a local file as the strategies source"
                },
                "reload_interval": {
                  "type": "string",
                  "description": "ReloadInterval determines the periodicity to refresh the strategies"
                }
              },
              "description": "Source configures the source for the strategies file. One of `remote` or `file` has to be specified."
            }
          }
        },
        "k8s_observer": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for k8s attributes processor.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "node": {
              "type": "string",
              "default": "",
              "description": "Node is the node name to limit the discovery of pod, port, and node endpoints.\nProviding no value (the default) results in discovering endpoints for all available nodes.\nFor example, node name can be set using the downward API inside the collector\npod spec as follows:\n\nenv:\n  - name: K8S_NODE_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.nodeName\n\nThen set this value to ${env:K8S_NODE_NAME} in the configuration."
            },
            "observe_pods": {
              "type": "boolean",
              "default": true,
              "description": "ObservePods determines whether to report observer pod and port endpoints. If `true` and Node is specified\nit will only discover pod and port endpoints whose `spec.nodeName` matches the provided node name. If `true` and\nNode isn't specified, it will discover all available pod and port endpoints. `true` by default."
            },
            "observe_nodes": {
              "type": "boolean",
              "default": false,
              "description": "ObserveNodes determines whether to report observer k8s.node endpoints. If `true` and Node is specified\nit will only discover node endpoints whose `metadata.name` matches the provided node name. If `true` and\nNode isn't specified, it will discover all available node endpoints. `false` by default."
            }
          }
        },
        "memory_ballast": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "size_mib": {
              "default": 0
            },
            "size_in_percentage": {
              "default": 0
            }
          }
        },
        "oauth2client": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config stores the configuration for OAuth2 Client Credentials (2-legged OAuth2 flow) setup.\n",
          "properties": {
            "client_id": {
              "type": "string",
              "default": "",
              "description": "ClientID is the application's ID.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-2.2"
            },
            "client_secret": {
              "type": "string",
              "default": "",
              "description": "ClientSecret is the application's secret.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1"
            },
            "endpoint_params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "EndpointParams specifies additional parameters for requests to the token endpoint."
            },
            "token_url": {
              "type": "string",
              "default": "",
              "description": "TokenURL is the resource server's token endpoint\nURL. This is a constant specific to each server.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-3.2"
            },
            "scopes": {
              "description": "Scope specifies optional requested permissions.\nSee https://datatracker.ietf.org/doc/html/rfc6749#section-3.3"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "TLSSetting struct exposes TLS client configuration for the underneath client to authorization server."
            },
            "timeout": {
              "type": "string",
              "description": "Timeout parameter configures `http.Client.Timeout` for the underneath client to authorization\nserver while fetching and refreshing tokens."
            }
          }
        },
        "oidc": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the OIDC Authenticator extension.\n",
          "properties": {
            "attribute": {
              "type": "string",
              "default": "authorization",
              "description": "The attribute (header name) to look for auth data. Optional, default value: \"authorization\"."
            },
            "issuer_url": {
              "type": "string",
              "default": "",
              "description": "IssuerURL is the base URL for the OIDC provider.\nRequired."
            },
            "audience": {
              "type": "string",
              "default": "",
              "description": "Audience of the token, used during the verification.\nFor example: \"https://accounts.google.com\" or \"https://login.salesforce.com\".\nRequired."
            },
            "issuer_ca_path": {
              "type": "string",
              "default": "",
              "description": "The local path for the issuer CA's TLS server cert.\nOptional."
            },
            "username_claim": {
              "type": "string",
              "default": "",
              "description": "The claim to use as the username, in case the token's 'sub' isn't the suitable source.\nOptional."
            },
            "groups_claim": {
              "type": "string",
              "default": "",
              "description": "The claim that holds the subject's group membership information.\nOptional."
            }
          }
        },
        "pprof": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration for the extension enabling the golang\nnet/http/pprof (Performance Profiler) extension.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:1777"
            },
            "block_profile_fraction": {
              "type": "integer",
              "description": "Fraction of blocking events that are profiled. A value <= 0 disables\nprofiling. See https://golang.org/pkg/runtime/#SetBlockProfileRate for details."
            },
            "mutex_profile_fraction": {
              "type": "integer",
              "description": "Fraction of mutex contention events that are profiled. A value <= 0\ndisables profiling. See https://golang.org/pkg/runtime/#SetMutexProfileFraction\nfor details."
            },
            "save_to_file": {
              "type": "string",
              "default": "",
              "description": "Optional file name to save the CPU profile to. The profiling starts when the\nCollector starts and is saved to the file when the Collector is terminated."
            }
          }
        },
        "sigv4auth": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config stores the configuration for the Sigv4 Authenticator\n",
          "properties": {
            "region": {
              "type": "string",
              "default": ""
            },
            "service": {
              "type": "string",
              "default": ""
            },
            "assume_role": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "arn": {
                  "type": "string",
                  "default": ""
                },
                "session_name": {
                  "type": "string",
                  "default": ""
                },
                "sts_region": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "AssumeRole holds the configuration needed to assume a role"
            }
          }
        },
        "zpages": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:55679"
            }
          }
        }
      }
    },
    "processors": {
      "type": "object",
      "description": "Processors are used at various stages of a pipeline. Generally, a processor pre-processes data before it is exported (e.g. modify attributes or sample) or helps ensure that data makes it through a pipeline successfully (e.g. batch/retry).",
      "additionalProperties": false,
      "patternProperties": {
        "additionalProperties": false,
        "^attributes(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config specifies the set of attributes to be inserted, updated, upserted and\ndeleted and the properties to include/exclude a span from being processed.\nThis processor handles all forms of modifications to attributes within a span, log, or metric.\nPrior to any actions being applied, each span is compared against\nthe include properties and then the exclude properties if they are specified.\nThis determines if a span is to be processed or not.\nThe list of actions is applied in order specified in the configuration.\n",
          "properties": {
            "include": {
              "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
            },
            "exclude": {
              "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
            },
            "actions": {
              "description": "Actions specifies the list of attributes to act on.\nThe set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT, CONVERT}.\nThis is a required field."
            }
          }
        },
        "^batch(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "200ms"
            },
            "send_batch_size": {
              "default": 8192
            },
            "send_batch_max_size": {
              "default": 0
            },
            "metadata_keys": {},
            "metadata_cardinality_limit": {
              "default": 1000
            }
          }
        },
        "^cumulativetodelta(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "max_staleness": {
              "type": "string",
              "description": "MaxStaleness is the total time a state entry will live past the time it was last seen. Set to 0 to retain state indefinitely."
            },
            "initial_value": {
              "type": "integer",
              "description": "InitialValue determines how to handle the first datapoint for a given metric. Valid values:\n\n  - auto: (default) send the first point iff the startime is set AND the starttime happens after the component started AND the starttime is different from the timestamp\n  - keep: always send the first point\n  - drop: don't send the first point, but store it for subsequent delta calculations"
            },
            "include": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "match_type": {
                  "type": "string",
                  "default": ""
                },
                "regexp": {
                  "description": "Config represents the options for a NewFilterSet."
                },
                "metrics": {}
              },
              "description": "Include specifies a filter on the metrics that should be converted.\nExclude specifies a filter on the metrics that should not be converted.\nIf neither `include` nor `exclude` are set, all metrics will be converted.\nCannot be used with deprecated Metrics config option."
            },
            "exclude": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "match_type": {
                  "type": "string",
                  "default": ""
                },
                "regexp": {
                  "description": "Config represents the options for a NewFilterSet."
                },
                "metrics": {}
              },
              "description": "Config configures the matching behavior of a FilterSet."
            }
          }
        },
        "^datadog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for datadogprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "object",
              "additionalProperties": false,
              "properties": {},
              "description": "MetricsExporter specifies the name of the metrics exporter to be used when\nexporting stats metrics."
            }
          }
        },
        "^deltatorate(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "metrics": {
              "description": "List of delta sum metrics to convert to rates"
            }
          }
        },
        "^experimental_metricsgeneration(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "rules": {
              "description": "Set of rules for generating new metrics"
            }
          }
        },
        "^filter(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include match properties describe metrics that should be included in the Collector Service pipeline,\nall other metrics should be dropped from further processing.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "exclude": {
                  "description": "Exclude match properties describe metrics that should be excluded from the Collector Service pipeline,\nall other metrics should be included.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "regexp": {
                  "description": "RegexpConfig specifies options for the regexp match type"
                },
                "metric": {
                  "description": "MetricConditions is a list of OTTL conditions for an ottlmetric context.\nIf any condition resolves to true, the metric will be dropped.\nSupports `and`, `or`, and `()`"
                },
                "datapoint": {
                  "description": "DataPointConditions is a list of OTTL conditions for an ottldatapoint context.\nIf any condition resolves to true, the datapoint will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "MetricFilters filters by Metric properties."
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include match properties describe logs that should be included in the Collector Service pipeline,\nall other logs should be dropped from further processing.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "exclude": {
                  "description": "Exclude match properties describe logs that should be excluded from the Collector Service pipeline,\nall other logs should be included.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "log_record": {
                  "description": "LogConditions is a list of OTTL conditions for an ottllog context.\nIf any condition resolves to true, the log event will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "LogFilters filters by Log properties."
            },
            "spans": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
                },
                "exclude": {
                  "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
                }
              },
              "description": "MatchConfig has two optional MatchProperties one to define what is processed\nby the processor, captured under the 'include' and the second, exclude, to\ndefine what is excluded from the processor."
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "span": {
                  "description": "SpanConditions is a list of OTTL conditions for an ottlspan context.\nIf any condition resolves to true, the span will be dropped.\nSupports `and`, `or`, and `()`"
                },
                "spanevent": {
                  "description": "SpanEventConditions is a list of OTTL conditions for an ottlspanevent context.\nIf any condition resolves to true, the span event will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "TraceFilters filters by OTTL conditions"
            }
          }
        },
        "^groupbyattrs(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the processor.\n",
          "properties": {
            "keys": {
              "description": "GroupByKeys describes the attribute names that are going to be used for grouping.\nEmpty value is allowed, since processor in such case can compact data"
            }
          }
        },
        "^groupbytrace(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the processor.\n",
          "properties": {
            "num_traces": {
              "type": "integer",
              "default": 1000000,
              "description": "NumTraces is the max number of traces to keep in memory waiting for the duration.\nDefault: 1_000_000."
            },
            "num_workers": {
              "type": "integer",
              "default": 1,
              "description": "NumWorkers is a number of workers processing event queue.\nDefault: 1."
            },
            "wait_duration": {
              "type": "string",
              "default": "1s",
              "description": "WaitDuration tells the processor to wait for the specified duration for the trace to be complete.\nDefault: 1s."
            },
            "discard_orphans": {
              "type": "boolean",
              "default": false,
              "description": "DiscardOrphans instructs the processor to discard traces without the root span.\nThis typically indicates that the trace is incomplete.\nDefault: false.\nNot yet implemented, and an error will be returned when this option is used."
            },
            "store_on_disk": {
              "type": "boolean",
              "default": false,
              "description": "StoreOnDisk tells the processor to keep only the trace ID in memory, serializing the trace spans to disk.\nUseful when the duration to wait for traces to complete is high.\nDefault: false.\nNot yet implemented, and an error will be returned when this option is used."
            }
          }
        },
        "^k8sattributes(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for k8s attributes processor.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "passthrough": {
              "type": "boolean",
              "default": false,
              "description": "Passthrough mode only annotates resources with the pod IP and\ndoes not try to extract any other metadata. It does not need\naccess to the K8S cluster API. Agent/Collector must receive spans\ndirectly from services to be able to correctly detect the pod IPs."
            },
            "extract": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "metadata": {
                  "description": "Metadata allows to extract pod/namespace metadata from a list of metadata fields.\nThe field accepts a list of strings.\n\nMetadata fields supported right now are,\n  k8s.pod.name, k8s.pod.uid, k8s.deployment.name,\n  k8s.node.name, k8s.namespace.name, k8s.pod.start_time,\n  k8s.replicaset.name, k8s.replicaset.uid,\n  k8s.daemonset.name, k8s.daemonset.uid,\n  k8s.job.name, k8s.job.uid, k8s.cronjob.name,\n  k8s.statefulset.name, k8s.statefulset.uid,\n  k8s.container.name, container.image.name,\n  container.image.tag, container.id\n  k8s.cluster.uid\n\nSpecifying anything other than these values will result in an error.\nBy default, the following fields are extracted and added to spans, metrics and logs as attributes:\n - k8s.pod.name\n - k8s.pod.uid\n - k8s.pod.start_time\n - k8s.namespace.name\n - k8s.node.name\n - k8s.deployment.name (if the pod is controlled by a deployment)\n - k8s.container.name (requires an additional attribute to be set: container.id)\n - container.image.name (requires one of the following additional attributes to be set: container.id or k8s.container.name)\n - container.image.tag (requires one of the following additional attributes to be set: container.id or k8s.container.name)"
                },
                "annotations": {
                  "description": "Annotations allows extracting data from pod annotations and record it\nas resource attributes.\nIt is a list of FieldExtractConfig type. See FieldExtractConfig\ndocumentation for more details."
                },
                "labels": {
                  "description": "Labels allows extracting data from pod labels and record it\nas resource attributes.\nIt is a list of FieldExtractConfig type. See FieldExtractConfig\ndocumentation for more details."
                }
              },
              "description": "Extract section allows specifying extraction rules to extract\ndata from k8s pod specs"
            },
            "filter": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "node": {
                  "type": "string",
                  "default": "",
                  "description": "Node represents a k8s node or host. If specified, any pods not running\non the specified node will be ignored by the tagger."
                },
                "node_from_env_var": {
                  "type": "string",
                  "default": "",
                  "description": "NodeFromEnv can be used to extract the node name from an environment\nvariable. The value must be the name of the environment variable.\nThis is useful when the node a Otel agent will run on cannot be\npredicted. In such cases, the Kubernetes downward API can be used to\nadd the node name to each pod as an environment variable. K8s tagger\ncan then read this value and filter pods by it.\n\nFor example, node name can be passed to each agent with the downward API as follows\n\nenv:\n  - name: K8S_NODE_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.nodeName\n\nThen the NodeFromEnv field can be set to `K8S_NODE_NAME` to filter all pods by the node that\nthe agent is running on.\n\nMore on downward API here: https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/"
                },
                "namespace": {
                  "type": "string",
                  "default": "",
                  "description": "Namespace filters all pods by the provided namespace. All other pods are ignored."
                },
                "fields": {
                  "description": "Fields allows to filter pods by generic k8s fields.\nOnly the following operations are supported:\n   - equals\n   - not-equals\n\nCheck FieldFilterConfig for more details."
                },
                "labels": {
                  "description": "Labels allows to filter pods by generic k8s pod labels.\nOnly the following operations are supported:\n   - equals\n   - not-equals\n   - exists\n   - not-exists\n\nCheck FieldFilterConfig for more details."
                }
              },
              "description": "Filter section allows specifying filters to filter\npods by labels, fields, namespaces, nodes, etc."
            },
            "pod_association": {
              "description": "Association section allows to define rules for tagging spans, metrics,\nand logs with Pod metadata."
            },
            "exclude": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "pods": {
                  "description": "ExcludePodConfig represent a Pod name to ignore"
                }
              },
              "description": "Exclude section allows to define names of pod that should be\nignored while tagging."
            }
          }
        },
        "^memory_limiter(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "check_interval": {
              "type": "string"
            },
            "limit_mib": {
              "default": 0
            },
            "spike_limit_mib": {
              "default": 0
            },
            "limit_percentage": {
              "default": 0
            },
            "spike_limit_percentage": {
              "default": 0
            }
          }
        },
        "^metricstransform(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "transforms": {
              "description": "transform specifies a list of transforms on metrics with each transform focusing on one metric."
            }
          }
        },
        "^probabilistic_sampler(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration guiding the sampler processor.\n",
          "properties": {
            "sampling_percentage": {
              "description": "SamplingPercentage is the percentage rate at which traces or logs are going to be sampled. Defaults to zero, i.e.: no sample.\nValues greater or equal 100 are treated as \"sample all traces/logs\"."
            },
            "hash_seed": {
              "default": 0,
              "description": "HashSeed allows one to configure the hashing seed. This is important in scenarios where multiple layers of collectors\nhave different sampling rates: if they use the same seed all passing one layer may pass the other even if they have\ndifferent sampling rates, configuring different seeds avoids that."
            },
            "attribute_source": {
              "type": "string",
              "default": "traceID",
              "description": "AttributeSource (logs only) defines where to look for the attribute in from_attribute. The allowed values are\n`traceID` or `record`. Default is `traceID`."
            },
            "from_attribute": {
              "type": "string",
              "default": "",
              "description": "FromAttribute (logs only) The optional name of a log record attribute used for sampling purposes, such as a\nunique log record ID. The value of the attribute is only used if the trace ID is absent or if `attribute_source` is set to `record`."
            },
            "sampling_priority": {
              "type": "string",
              "default": "",
              "description": "SamplingPriority (logs only) allows to use a log record attribute designed by the `sampling_priority` key\nto be used as the sampling priority of the log record."
            }
          }
        },
        "^resource(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "attributes": {
              "description": "AttributesActions specifies the list of actions to be applied on resource attributes.\nThe set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT}."
            }
          }
        },
        "^resourcedetection(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "detectors": {
              "description": "Detectors is an ordered list of named detectors that should be\nrun to attempt to detect resource information."
            },
            "override": {
              "type": "boolean",
              "default": true,
              "description": "Override indicates whether any existing resource attributes\nshould be overridden or preserved. Defaults to true."
            },
            "ec2": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tags": {
                  "description": "Tags is a list of regex's to match ec2 instance tag keys that users want\nto add as resource attributes to processed data"
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.image.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/ec2 resource attributes."
                }
              },
              "description": "EC2Config contains user-specified configurations for the EC2 detector"
            },
            "ecs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "aws.ecs.cluster.arn": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.launchtype": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.arn": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.family": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.revision": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.group.arns": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.group.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.arns": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/ecs resource attributes."
                }
              },
              "description": "ECSConfig contains user-specified configurations for the ECS detector"
            },
            "eks": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/eks resource attributes."
                }
              },
              "description": "EKSConfig contains user-specified configurations for the EKS detector"
            },
            "elasticbeanstalk": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "deployment.environment": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.instance.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/elastic_beanstalk resource attributes."
                }
              },
              "description": "Elasticbeanstalk contains user-specified configurations for the elasticbeanstalk detector"
            },
            "lambda": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "aws.log.group.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.instance": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.max_memory": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/lambda resource attributes."
                }
              },
              "description": "Lambda contains user-specified configurations for the lambda detector"
            },
            "azure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "azure.resourcegroup.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.scaleset.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.size": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/azure resource attributes."
                }
              },
              "description": "Azure contains user-specified configurations for the azure detector"
            },
            "aks": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/aks resource attributes."
                }
              },
              "description": "Aks contains user-specified configurations for the aks detector"
            },
            "consul": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "address": {
                  "type": "string",
                  "default": "",
                  "description": "Address is the address of the Consul server"
                },
                "datacenter": {
                  "type": "string",
                  "default": "",
                  "description": "Datacenter to use. If not provided, the default agent datacenter is used."
                },
                "token": {
                  "type": "string",
                  "default": "",
                  "description": "Token is used to provide a per-request ACL token\nwhich overrides the agent's default (empty) token.\nToken or Tokenfile are only required if [Consul's ACL\nSystem](https://www.consul.io/docs/security/acl/acl-system) is enabled."
                },
                "token_file": {
                  "type": "string",
                  "default": "",
                  "description": "TokenFile is a file containing the current token to use for this client.\nIf provided it is read once at startup and never again.\nToken or Tokenfile are only required if [Consul's ACL\nSystem](https://www.consul.io/docs/security/acl/acl-system) is enabled."
                },
                "namespace": {
                  "type": "string",
                  "default": "",
                  "description": "Namespace is the name of the namespace to send along for the request\nwhen no other Namespace is present in the QueryOptions"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Allowlist of [Consul\nMetadata](https://www.consul.io/docs/agent/options#node_meta) keys to use as\nresource attributes."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "azure.resourcegroup.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.scaleset.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.size": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributes configuration for Consul detector"
                }
              },
              "description": "ConsulConfig contains user-specified configurations for the Consul detector"
            },
            "docker": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/docker resource attributes."
                }
              },
              "description": "DockerConfig contains user-specified configurations for the docker detector"
            },
            "gcp": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.cloud_run.job.execution": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.cloud_run.job.task_index": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.gce.instance.hostname": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.gce.instance.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "k8s.cluster.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/gcp resource attributes."
                }
              },
              "description": "GcpConfig contains user-specified configurations for the gcp detector"
            },
            "heroku": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.app.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.dyno.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.release.commit": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.release.creation_timestamp": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.instance.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/heroku resource attributes."
                }
              },
              "description": "HerokuConfig contains user-specified configurations for the heroku detector"
            },
            "system": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "hostname_sources": {
                  "description": "The HostnameSources is a priority list of sources from which hostname will be fetched.\nIn case of the error in fetching hostname from source,\nthe next source from the list will be considered.(**default**: `[\"dns\", \"os\"]`)"
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "host.arch": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.description": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/system resource attributes."
                }
              },
              "description": "SystemConfig contains user-specified configurations for the System detector"
            },
            "openshift": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "address": {
                  "type": "string",
                  "default": "",
                  "description": "Address is the address of the openshift api server"
                },
                "token": {
                  "type": "string",
                  "default": "",
                  "description": "Token is used to identify against the openshift api server"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "description": "TLSSettings contains TLS configurations that are specific to client\nconnection used to communicate with the Openshift API."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "k8s.cluster.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/openshift resource attributes."
                }
              },
              "description": "OpenShift contains user-specified configurations for the Openshift detector"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "attributes": {
              "description": "Attributes is an allowlist of attributes to add.\nIf a supplied attribute is not a valid attribute of a supplied detector it will be ignored.\nDeprecated: Please use detector's resource_attributes config instead"
            }
          }
        },
        "^routing(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Routing processor.\n",
          "properties": {
            "default_exporters": {
              "description": "DefaultExporters contains the list of exporters to use when a more specific record can't be found in the routing table.\nOptional."
            },
            "attribute_source": {
              "type": "string",
              "default": "context",
              "description": "AttributeSource defines where the attribute defined in `from_attribute` is searched for.\nThe allowed values are:\n- \"context\" - the attribute must exist in the incoming context\n- \"resource\" - the attribute must exist in resource attributes\nThe default value is \"context\".\nOptional."
            },
            "from_attribute": {
              "type": "string",
              "default": "",
              "description": "FromAttribute contains the attribute name to look up the route value. This attribute should be part of the context propagated\ndown from the previous receivers and/or processors. If all the receivers and processors are propagating the entire context correctly,\nthis could be the HTTP/gRPC header from the original request/RPC. Typically, aggregation processors (batch, groupbytrace)\nwill create a new context, so, those should be avoided when using this processor.Although the HTTP spec allows headers to be repeated,\nthis processor will only use the first value.\nRequired."
            },
            "drop_resource_routing_attribute": {
              "type": "boolean",
              "default": false,
              "description": "DropRoutingResourceAttribute controls whether to remove the resource attribute used for routing.\nThis is only relevant if AttributeSource is set to resource.\nOptional."
            },
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode.\nIf `ignored` is used and a statement's condition has an error then the payload will be routed to the default exporter.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "table": {
              "description": "Table contains the routing table for this processor.\nRequired."
            }
          }
        },
        "^servicegraph(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for servicegraphprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "string",
              "default": "",
              "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
            },
            "latency_histogram_buckets": {
              "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- client\n- server\n- failed\n- connection_type\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "store": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_items": {
                  "type": "integer",
                  "default": 1000,
                  "description": "MaxItems is the maximum number of items to keep in the store."
                },
                "ttl": {
                  "type": "string",
                  "default": "2s",
                  "description": "TTL is the time to live for items in the store."
                }
              },
              "description": "Store contains the config for the in-memory store used to find requests between services by pairing spans."
            },
            "cache_loop": {
              "type": "string",
              "default": "1m0s",
              "description": "CacheLoop is the time to cleans the cache periodically."
            },
            "store_expiration_loop": {
              "type": "string",
              "default": "2s",
              "description": "CacheLoop is the time to expire old entries from the store periodically."
            },
            "virtual_node_peer_attributes": {
              "description": "VirtualNodePeerAttributes the list of attributes need to match, the higher the front, the higher the priority."
            }
          }
        },
        "^span(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the span processor.\nPrior to any actions being applied, each span is compared against\nthe include properties and then the exclude properties if they are specified.\nThis determines if a span is to be processed or not.\n",
          "properties": {
            "include": {
              "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
            },
            "exclude": {
              "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
            },
            "name": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "from_attributes": {
                  "description": "FromAttributes represents the attribute keys to pull the values from to\ngenerate the new span name. All attribute keys are required in the span\nto re-name a span. If any attribute is missing from the span, no re-name\nwill occur.\nNote: The new span name is constructed in order of the `from_attributes`\nspecified in the configuration. This field is required and cannot be empty."
                },
                "separator": {
                  "type": "string",
                  "default": "",
                  "description": "Separator is the string used to separate attributes values in the new\nspan name. If no value is set, no separator is used between attribute\nvalues. Used with FromAttributes only."
                },
                "to_attributes": {
                  "description": "ToAttributes specifies a configuration to extract attributes from span name."
                }
              },
              "description": "Rename specifies the components required to re-name a span.\nThe `from_attributes` field needs to be set for this processor to be properly\nconfigured.\nNote: The field name is `Rename` to avoid collision with the Name() method\nfrom config.NamedEntity"
            },
            "status": {
              "description": "SetStatus specifies status which should be set for this span."
            }
          }
        },
        "^spanmetrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for spanmetricsprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "string",
              "default": "",
              "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
            },
            "latency_histogram_buckets": {
              "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- service.name\n- operation\n- span.kind\n- status.code\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "dimensions_cache_size": {
              "type": "integer",
              "default": 1000,
              "description": "DimensionsCacheSize defines the size of cache for storing Dimensions, which helps to avoid cache memory growing\nindefinitely over the lifetime of the collector.\nOptional. See defaultDimensionsCacheSize in processor.go for the default value."
            },
            "aggregation_temporality": {
              "type": "string",
              "default": "AGGREGATION_TEMPORALITY_CUMULATIVE"
            },
            "metrics_flush_interval": {
              "type": "string",
              "default": "15s",
              "description": "MetricsEmitInterval is the time period between when metrics are flushed or emitted to the configured MetricsExporter."
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace is the namespace to use for the metrics."
            }
          }
        },
        "^tail_sampling(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config holds the configuration for tail-based sampling.\n",
          "properties": {
            "decision_wait": {
              "type": "string",
              "default": "30s",
              "description": "DecisionWait is the desired wait time from the arrival of the first span of\ntrace until the decision about sampling it or not is evaluated."
            },
            "num_traces": {
              "default": 50000,
              "description": "NumTraces is the number of traces kept on memory. Typically most of the data\nof a trace is released after a sampling decision is taken."
            },
            "expected_new_traces_per_sec": {
              "default": 0,
              "description": "ExpectedNewTracesPerSec sets the expected number of new traces sending to the tail sampling processor\nper second. This helps with allocating data structures with closer to actual usage size."
            },
            "policies": {
              "description": "PolicyCfgs sets the tail-based sampling policy which makes a sampling decision\nfor a given trace when requested."
            }
          }
        },
        "^transform(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing a statement.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by statements and continues on to the next statement. This is the recommended mode.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "trace_statements": {},
            "metric_statements": {},
            "log_statements": {}
          }
        }
      },
      "properties": {
        "additionalProperties": false,
        "attributes": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config specifies the set of attributes to be inserted, updated, upserted and\ndeleted and the properties to include/exclude a span from being processed.\nThis processor handles all forms of modifications to attributes within a span, log, or metric.\nPrior to any actions being applied, each span is compared against\nthe include properties and then the exclude properties if they are specified.\nThis determines if a span is to be processed or not.\nThe list of actions is applied in order specified in the configuration.\n",
          "properties": {
            "include": {
              "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
            },
            "exclude": {
              "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
            },
            "actions": {
              "description": "Actions specifies the list of attributes to act on.\nThe set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT, CONVERT}.\nThis is a required field."
            }
          }
        },
        "batch": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "timeout": {
              "type": "string",
              "default": "200ms"
            },
            "send_batch_size": {
              "default": 8192
            },
            "send_batch_max_size": {
              "default": 0
            },
            "metadata_keys": {},
            "metadata_cardinality_limit": {
              "default": 1000
            }
          }
        },
        "cumulativetodelta": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "max_staleness": {
              "type": "string",
              "description": "MaxStaleness is the total time a state entry will live past the time it was last seen. Set to 0 to retain state indefinitely."
            },
            "initial_value": {
              "type": "integer",
              "description": "InitialValue determines how to handle the first datapoint for a given metric. Valid values:\n\n  - auto: (default) send the first point iff the startime is set AND the starttime happens after the component started AND the starttime is different from the timestamp\n  - keep: always send the first point\n  - drop: don't send the first point, but store it for subsequent delta calculations"
            },
            "include": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "match_type": {
                  "type": "string",
                  "default": ""
                },
                "regexp": {
                  "description": "Config represents the options for a NewFilterSet."
                },
                "metrics": {}
              },
              "description": "Include specifies a filter on the metrics that should be converted.\nExclude specifies a filter on the metrics that should not be converted.\nIf neither `include` nor `exclude` are set, all metrics will be converted.\nCannot be used with deprecated Metrics config option."
            },
            "exclude": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "match_type": {
                  "type": "string",
                  "default": ""
                },
                "regexp": {
                  "description": "Config represents the options for a NewFilterSet."
                },
                "metrics": {}
              },
              "description": "Config configures the matching behavior of a FilterSet."
            }
          }
        },
        "datadog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for datadogprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "object",
              "additionalProperties": false,
              "properties": {},
              "description": "MetricsExporter specifies the name of the metrics exporter to be used when\nexporting stats metrics."
            }
          }
        },
        "deltatorate": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "metrics": {
              "description": "List of delta sum metrics to convert to rates"
            }
          }
        },
        "experimental_metricsgeneration": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "rules": {
              "description": "Set of rules for generating new metrics"
            }
          }
        },
        "filter": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include match properties describe metrics that should be included in the Collector Service pipeline,\nall other metrics should be dropped from further processing.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "exclude": {
                  "description": "Exclude match properties describe metrics that should be excluded from the Collector Service pipeline,\nall other metrics should be included.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "regexp": {
                  "description": "RegexpConfig specifies options for the regexp match type"
                },
                "metric": {
                  "description": "MetricConditions is a list of OTTL conditions for an ottlmetric context.\nIf any condition resolves to true, the metric will be dropped.\nSupports `and`, `or`, and `()`"
                },
                "datapoint": {
                  "description": "DataPointConditions is a list of OTTL conditions for an ottldatapoint context.\nIf any condition resolves to true, the datapoint will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "MetricFilters filters by Metric properties."
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include match properties describe logs that should be included in the Collector Service pipeline,\nall other logs should be dropped from further processing.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "exclude": {
                  "description": "Exclude match properties describe logs that should be excluded from the Collector Service pipeline,\nall other logs should be included.\nIf both Include and Exclude are specified, Include filtering occurs first."
                },
                "log_record": {
                  "description": "LogConditions is a list of OTTL conditions for an ottllog context.\nIf any condition resolves to true, the log event will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "LogFilters filters by Log properties."
            },
            "spans": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "include": {
                  "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
                },
                "exclude": {
                  "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
                }
              },
              "description": "MatchConfig has two optional MatchProperties one to define what is processed\nby the processor, captured under the 'include' and the second, exclude, to\ndefine what is excluded from the processor."
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "span": {
                  "description": "SpanConditions is a list of OTTL conditions for an ottlspan context.\nIf any condition resolves to true, the span will be dropped.\nSupports `and`, `or`, and `()`"
                },
                "spanevent": {
                  "description": "SpanEventConditions is a list of OTTL conditions for an ottlspanevent context.\nIf any condition resolves to true, the span event will be dropped.\nSupports `and`, `or`, and `()`"
                }
              },
              "description": "TraceFilters filters by OTTL conditions"
            }
          }
        },
        "groupbyattrs": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the processor.\n",
          "properties": {
            "keys": {
              "description": "GroupByKeys describes the attribute names that are going to be used for grouping.\nEmpty value is allowed, since processor in such case can compact data"
            }
          }
        },
        "groupbytrace": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the processor.\n",
          "properties": {
            "num_traces": {
              "type": "integer",
              "default": 1000000,
              "description": "NumTraces is the max number of traces to keep in memory waiting for the duration.\nDefault: 1_000_000."
            },
            "num_workers": {
              "type": "integer",
              "default": 1,
              "description": "NumWorkers is a number of workers processing event queue.\nDefault: 1."
            },
            "wait_duration": {
              "type": "string",
              "default": "1s",
              "description": "WaitDuration tells the processor to wait for the specified duration for the trace to be complete.\nDefault: 1s."
            },
            "discard_orphans": {
              "type": "boolean",
              "default": false,
              "description": "DiscardOrphans instructs the processor to discard traces without the root span.\nThis typically indicates that the trace is incomplete.\nDefault: false.\nNot yet implemented, and an error will be returned when this option is used."
            },
            "store_on_disk": {
              "type": "boolean",
              "default": false,
              "description": "StoreOnDisk tells the processor to keep only the trace ID in memory, serializing the trace spans to disk.\nUseful when the duration to wait for traces to complete is high.\nDefault: false.\nNot yet implemented, and an error will be returned when this option is used."
            }
          }
        },
        "k8sattributes": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for k8s attributes processor.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "passthrough": {
              "type": "boolean",
              "default": false,
              "description": "Passthrough mode only annotates resources with the pod IP and\ndoes not try to extract any other metadata. It does not need\naccess to the K8S cluster API. Agent/Collector must receive spans\ndirectly from services to be able to correctly detect the pod IPs."
            },
            "extract": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "metadata": {
                  "description": "Metadata allows to extract pod/namespace metadata from a list of metadata fields.\nThe field accepts a list of strings.\n\nMetadata fields supported right now are,\n  k8s.pod.name, k8s.pod.uid, k8s.deployment.name,\n  k8s.node.name, k8s.namespace.name, k8s.pod.start_time,\n  k8s.replicaset.name, k8s.replicaset.uid,\n  k8s.daemonset.name, k8s.daemonset.uid,\n  k8s.job.name, k8s.job.uid, k8s.cronjob.name,\n  k8s.statefulset.name, k8s.statefulset.uid,\n  k8s.container.name, container.image.name,\n  container.image.tag, container.id\n  k8s.cluster.uid\n\nSpecifying anything other than these values will result in an error.\nBy default, the following fields are extracted and added to spans, metrics and logs as attributes:\n - k8s.pod.name\n - k8s.pod.uid\n - k8s.pod.start_time\n - k8s.namespace.name\n - k8s.node.name\n - k8s.deployment.name (if the pod is controlled by a deployment)\n - k8s.container.name (requires an additional attribute to be set: container.id)\n - container.image.name (requires one of the following additional attributes to be set: container.id or k8s.container.name)\n - container.image.tag (requires one of the following additional attributes to be set: container.id or k8s.container.name)"
                },
                "annotations": {
                  "description": "Annotations allows extracting data from pod annotations and record it\nas resource attributes.\nIt is a list of FieldExtractConfig type. See FieldExtractConfig\ndocumentation for more details."
                },
                "labels": {
                  "description": "Labels allows extracting data from pod labels and record it\nas resource attributes.\nIt is a list of FieldExtractConfig type. See FieldExtractConfig\ndocumentation for more details."
                }
              },
              "description": "Extract section allows specifying extraction rules to extract\ndata from k8s pod specs"
            },
            "filter": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "node": {
                  "type": "string",
                  "default": "",
                  "description": "Node represents a k8s node or host. If specified, any pods not running\non the specified node will be ignored by the tagger."
                },
                "node_from_env_var": {
                  "type": "string",
                  "default": "",
                  "description": "NodeFromEnv can be used to extract the node name from an environment\nvariable. The value must be the name of the environment variable.\nThis is useful when the node a Otel agent will run on cannot be\npredicted. In such cases, the Kubernetes downward API can be used to\nadd the node name to each pod as an environment variable. K8s tagger\ncan then read this value and filter pods by it.\n\nFor example, node name can be passed to each agent with the downward API as follows\n\nenv:\n  - name: K8S_NODE_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.nodeName\n\nThen the NodeFromEnv field can be set to `K8S_NODE_NAME` to filter all pods by the node that\nthe agent is running on.\n\nMore on downward API here: https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/"
                },
                "namespace": {
                  "type": "string",
                  "default": "",
                  "description": "Namespace filters all pods by the provided namespace. All other pods are ignored."
                },
                "fields": {
                  "description": "Fields allows to filter pods by generic k8s fields.\nOnly the following operations are supported:\n   - equals\n   - not-equals\n\nCheck FieldFilterConfig for more details."
                },
                "labels": {
                  "description": "Labels allows to filter pods by generic k8s pod labels.\nOnly the following operations are supported:\n   - equals\n   - not-equals\n   - exists\n   - not-exists\n\nCheck FieldFilterConfig for more details."
                }
              },
              "description": "Filter section allows specifying filters to filter\npods by labels, fields, namespaces, nodes, etc."
            },
            "pod_association": {
              "description": "Association section allows to define rules for tagging spans, metrics,\nand logs with Pod metadata."
            },
            "exclude": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "pods": {
                  "description": "ExcludePodConfig represent a Pod name to ignore"
                }
              },
              "description": "Exclude section allows to define names of pod that should be\nignored while tagging."
            }
          }
        },
        "memory_limiter": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "check_interval": {
              "type": "string"
            },
            "limit_mib": {
              "default": 0
            },
            "spike_limit_mib": {
              "default": 0
            },
            "limit_percentage": {
              "default": 0
            },
            "spike_limit_percentage": {
              "default": 0
            }
          }
        },
        "metricstransform": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "transforms": {
              "description": "transform specifies a list of transforms on metrics with each transform focusing on one metric."
            }
          }
        },
        "probabilistic_sampler": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config has the configuration guiding the sampler processor.\n",
          "properties": {
            "sampling_percentage": {
              "description": "SamplingPercentage is the percentage rate at which traces or logs are going to be sampled. Defaults to zero, i.e.: no sample.\nValues greater or equal 100 are treated as \"sample all traces/logs\"."
            },
            "hash_seed": {
              "default": 0,
              "description": "HashSeed allows one to configure the hashing seed. This is important in scenarios where multiple layers of collectors\nhave different sampling rates: if they use the same seed all passing one layer may pass the other even if they have\ndifferent sampling rates, configuring different seeds avoids that."
            },
            "attribute_source": {
              "type": "string",
              "default": "traceID",
              "description": "AttributeSource (logs only) defines where to look for the attribute in from_attribute. The allowed values are\n`traceID` or `record`. Default is `traceID`."
            },
            "from_attribute": {
              "type": "string",
              "default": "",
              "description": "FromAttribute (logs only) The optional name of a log record attribute used for sampling purposes, such as a\nunique log record ID. The value of the attribute is only used if the trace ID is absent or if `attribute_source` is set to `record`."
            },
            "sampling_priority": {
              "type": "string",
              "default": "",
              "description": "SamplingPriority (logs only) allows to use a log record attribute designed by the `sampling_priority` key\nto be used as the sampling priority of the log record."
            }
          }
        },
        "resource": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "attributes": {
              "description": "AttributesActions specifies the list of actions to be applied on resource attributes.\nThe set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT}."
            }
          }
        },
        "resourcedetection": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Resource processor.\n",
          "properties": {
            "detectors": {
              "description": "Detectors is an ordered list of named detectors that should be\nrun to attempt to detect resource information."
            },
            "override": {
              "type": "boolean",
              "default": true,
              "description": "Override indicates whether any existing resource attributes\nshould be overridden or preserved. Defaults to true."
            },
            "ec2": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tags": {
                  "description": "Tags is a list of regex's to match ec2 instance tag keys that users want\nto add as resource attributes to processed data"
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.image.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/ec2 resource attributes."
                }
              },
              "description": "EC2Config contains user-specified configurations for the EC2 detector"
            },
            "ecs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "aws.ecs.cluster.arn": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.launchtype": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.arn": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.family": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.ecs.task.revision": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.group.arns": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.group.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.arns": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/ecs resource attributes."
                }
              },
              "description": "ECSConfig contains user-specified configurations for the ECS detector"
            },
            "eks": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/eks resource attributes."
                }
              },
              "description": "EKSConfig contains user-specified configurations for the EKS detector"
            },
            "elasticbeanstalk": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "deployment.environment": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.instance.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/elastic_beanstalk resource attributes."
                }
              },
              "description": "Elasticbeanstalk contains user-specified configurations for the elasticbeanstalk detector"
            },
            "lambda": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "aws.log.group.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "aws.log.stream.names": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.instance": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.max_memory": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/lambda resource attributes."
                }
              },
              "description": "Lambda contains user-specified configurations for the lambda detector"
            },
            "azure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "azure.resourcegroup.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.scaleset.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.size": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/azure resource attributes."
                }
              },
              "description": "Azure contains user-specified configurations for the azure detector"
            },
            "aks": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/aks resource attributes."
                }
              },
              "description": "Aks contains user-specified configurations for the aks detector"
            },
            "consul": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "address": {
                  "type": "string",
                  "default": "",
                  "description": "Address is the address of the Consul server"
                },
                "datacenter": {
                  "type": "string",
                  "default": "",
                  "description": "Datacenter to use. If not provided, the default agent datacenter is used."
                },
                "token": {
                  "type": "string",
                  "default": "",
                  "description": "Token is used to provide a per-request ACL token\nwhich overrides the agent's default (empty) token.\nToken or Tokenfile are only required if [Consul's ACL\nSystem](https://www.consul.io/docs/security/acl/acl-system) is enabled."
                },
                "token_file": {
                  "type": "string",
                  "default": "",
                  "description": "TokenFile is a file containing the current token to use for this client.\nIf provided it is read once at startup and never again.\nToken or Tokenfile are only required if [Consul's ACL\nSystem](https://www.consul.io/docs/security/acl/acl-system) is enabled."
                },
                "namespace": {
                  "type": "string",
                  "default": "",
                  "description": "Namespace is the name of the namespace to send along for the request\nwhen no other Namespace is present in the QueryOptions"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Allowlist of [Consul\nMetadata](https://www.consul.io/docs/agent/options#node_meta) keys to use as\nresource attributes."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "azure.resourcegroup.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.scaleset.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "azure.vm.size": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributes configuration for Consul detector"
                }
              },
              "description": "ConsulConfig contains user-specified configurations for the Consul detector"
            },
            "docker": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/docker resource attributes."
                }
              },
              "description": "DockerConfig contains user-specified configurations for the docker detector"
            },
            "gcp": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.account.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.availability_zone": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "faas.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.cloud_run.job.execution": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.cloud_run.job.task_index": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.gce.instance.hostname": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "gcp.gce.instance.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "k8s.cluster.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/gcp resource attributes."
                }
              },
              "description": "GcpConfig contains user-specified configurations for the gcp detector"
            },
            "heroku": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.app.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.dyno.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.release.commit": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "heroku.release.creation_timestamp": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.instance.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "service.version": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/heroku resource attributes."
                }
              },
              "description": "HerokuConfig contains user-specified configurations for the heroku detector"
            },
            "system": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "hostname_sources": {
                  "description": "The HostnameSources is a priority list of sources from which hostname will be fetched.\nIn case of the error in fetching hostname from source,\nthe next source from the list will be considered.(**default**: `[\"dns\", \"os\"]`)"
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "host.arch": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.id": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "host.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.description": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "os.type": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/system resource attributes."
                }
              },
              "description": "SystemConfig contains user-specified configurations for the System detector"
            },
            "openshift": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "address": {
                  "type": "string",
                  "default": "",
                  "description": "Address is the address of the openshift api server"
                },
                "token": {
                  "type": "string",
                  "default": "",
                  "description": "Token is used to identify against the openshift api server"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "description": "TLSSettings contains TLS configurations that are specific to client\nconnection used to communicate with the Openshift API."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cloud.platform": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.provider": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "cloud.region": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    },
                    "k8s.cluster.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for resourcedetectionprocessor/openshift resource attributes."
                }
              },
              "description": "OpenShift contains user-specified configurations for the Openshift detector"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "attributes": {
              "description": "Attributes is an allowlist of attributes to add.\nIf a supplied attribute is not a valid attribute of a supplied detector it will be ignored.\nDeprecated: Please use detector's resource_attributes config instead"
            }
          }
        },
        "routing": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Routing processor.\n",
          "properties": {
            "default_exporters": {
              "description": "DefaultExporters contains the list of exporters to use when a more specific record can't be found in the routing table.\nOptional."
            },
            "attribute_source": {
              "type": "string",
              "default": "context",
              "description": "AttributeSource defines where the attribute defined in `from_attribute` is searched for.\nThe allowed values are:\n- \"context\" - the attribute must exist in the incoming context\n- \"resource\" - the attribute must exist in resource attributes\nThe default value is \"context\".\nOptional."
            },
            "from_attribute": {
              "type": "string",
              "default": "",
              "description": "FromAttribute contains the attribute name to look up the route value. This attribute should be part of the context propagated\ndown from the previous receivers and/or processors. If all the receivers and processors are propagating the entire context correctly,\nthis could be the HTTP/gRPC header from the original request/RPC. Typically, aggregation processors (batch, groupbytrace)\nwill create a new context, so, those should be avoided when using this processor.Although the HTTP spec allows headers to be repeated,\nthis processor will only use the first value.\nRequired."
            },
            "drop_resource_routing_attribute": {
              "type": "boolean",
              "default": false,
              "description": "DropRoutingResourceAttribute controls whether to remove the resource attribute used for routing.\nThis is only relevant if AttributeSource is set to resource.\nOptional."
            },
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode.\nIf `ignored` is used and a statement's condition has an error then the payload will be routed to the default exporter.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "table": {
              "description": "Table contains the routing table for this processor.\nRequired."
            }
          }
        },
        "servicegraph": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for servicegraphprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "string",
              "default": "",
              "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
            },
            "latency_histogram_buckets": {
              "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- client\n- server\n- failed\n- connection_type\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "store": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_items": {
                  "type": "integer",
                  "default": 1000,
                  "description": "MaxItems is the maximum number of items to keep in the store."
                },
                "ttl": {
                  "type": "string",
                  "default": "2s",
                  "description": "TTL is the time to live for items in the store."
                }
              },
              "description": "Store contains the config for the in-memory store used to find requests between services by pairing spans."
            },
            "cache_loop": {
              "type": "string",
              "default": "1m0s",
              "description": "CacheLoop is the time to cleans the cache periodically."
            },
            "store_expiration_loop": {
              "type": "string",
              "default": "2s",
              "description": "CacheLoop is the time to expire old entries from the store periodically."
            },
            "virtual_node_peer_attributes": {
              "description": "VirtualNodePeerAttributes the list of attributes need to match, the higher the front, the higher the priority."
            }
          }
        },
        "span": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the span processor.\nPrior to any actions being applied, each span is compared against\nthe include properties and then the exclude properties if they are specified.\nThis determines if a span is to be processed or not.\n",
          "properties": {
            "include": {
              "description": "Include specifies the set of input data properties that must be present in order\nfor this processor to apply to it.\nNote: If `exclude` is specified, the input data is compared against those\nproperties after the `include` properties.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nare processed. If `include` is set and `exclude` isn't set, then all\ninput data matching the properties in this structure are processed."
            },
            "exclude": {
              "description": "Exclude specifies when this processor will not be applied to the input data\nwhich match the specified properties.\nNote: The `exclude` properties are checked after the `include` properties,\nif they exist, are checked.\nIf `include` isn't specified, the `exclude` properties are checked against\nall input data.\nThis is an optional field. If neither `include` and `exclude` are set, all input data\nis processed. If `exclude` is set and `include` isn't set, then all the\ninput data that does not match the properties in this structure are processed."
            },
            "name": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "from_attributes": {
                  "description": "FromAttributes represents the attribute keys to pull the values from to\ngenerate the new span name. All attribute keys are required in the span\nto re-name a span. If any attribute is missing from the span, no re-name\nwill occur.\nNote: The new span name is constructed in order of the `from_attributes`\nspecified in the configuration. This field is required and cannot be empty."
                },
                "separator": {
                  "type": "string",
                  "default": "",
                  "description": "Separator is the string used to separate attributes values in the new\nspan name. If no value is set, no separator is used between attribute\nvalues. Used with FromAttributes only."
                },
                "to_attributes": {
                  "description": "ToAttributes specifies a configuration to extract attributes from span name."
                }
              },
              "description": "Rename specifies the components required to re-name a span.\nThe `from_attributes` field needs to be set for this processor to be properly\nconfigured.\nNote: The field name is `Rename` to avoid collision with the Name() method\nfrom config.NamedEntity"
            },
            "status": {
              "description": "SetStatus specifies status which should be set for this span."
            }
          }
        },
        "spanmetrics": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for spanmetricsprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "string",
              "default": "",
              "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
            },
            "latency_histogram_buckets": {
              "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- service.name\n- operation\n- span.kind\n- status.code\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "dimensions_cache_size": {
              "type": "integer",
              "default": 1000,
              "description": "DimensionsCacheSize defines the size of cache for storing Dimensions, which helps to avoid cache memory growing\nindefinitely over the lifetime of the collector.\nOptional. See defaultDimensionsCacheSize in processor.go for the default value."
            },
            "aggregation_temporality": {
              "type": "string",
              "default": "AGGREGATION_TEMPORALITY_CUMULATIVE"
            },
            "metrics_flush_interval": {
              "type": "string",
              "default": "15s",
              "description": "MetricsEmitInterval is the time period between when metrics are flushed or emitted to the configured MetricsExporter."
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace is the namespace to use for the metrics."
            }
          }
        },
        "tail_sampling": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config holds the configuration for tail-based sampling.\n",
          "properties": {
            "decision_wait": {
              "type": "string",
              "default": "30s",
              "description": "DecisionWait is the desired wait time from the arrival of the first span of\ntrace until the decision about sampling it or not is evaluated."
            },
            "num_traces": {
              "default": 50000,
              "description": "NumTraces is the number of traces kept on memory. Typically most of the data\nof a trace is released after a sampling decision is taken."
            },
            "expected_new_traces_per_sec": {
              "default": 0,
              "description": "ExpectedNewTracesPerSec sets the expected number of new traces sending to the tail sampling processor\nper second. This helps with allocating data structures with closer to actual usage size."
            },
            "policies": {
              "description": "PolicyCfgs sets the tail-based sampling policy which makes a sampling decision\nfor a given trace when requested."
            }
          }
        },
        "transform": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the processor.\n",
          "properties": {
            "error_mode": {
              "type": "string",
              "default": "propagate",
              "description": "ErrorMode determines how the processor reacts to errors that occur while processing a statement.\nValid values are `ignore` and `propagate`.\n`ignore` means the processor ignores errors returned by statements and continues on to the next statement. This is the recommended mode.\n`propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector.\nThe default value is `propagate`."
            },
            "trace_statements": {},
            "metric_statements": {},
            "log_statements": {}
          }
        }
      }
    },
    "receivers": {
      "type": "object",
      "description": "A receiver is how data gets into the OpenTelemetry Collector.",
      "additionalProperties": false,
      "patternProperties": {
        "additionalProperties": false,
        "^active_directory_ds(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for active_directory_ds metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "active_directory.ds.bind.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.bind.last_successful.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.bind.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.client.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.search.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.name_cache.hit_rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.notification.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.operation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.object.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.operation.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.property.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.sync.object.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.sync.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.value.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.security_descriptor_propagations_event.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.suboperation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.thread.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for active_directory_ds metrics."
            }
          }
        },
        "^aerospike(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the receiver configuration\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "20s"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:3000"
            },
            "tlsname": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "collect_cluster_metrics": {
              "type": "boolean",
              "default": false
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aerospike.namespace.disk.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_cells": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_false_positive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_points": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.memory.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.scan.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.transaction.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.connection.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.memory.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.query.tracked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for aerospike metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aerospike.namespace": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "aerospike.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for aerospike resource attributes."
            },
            "tls": {}
          }
        },
        "^apache(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for apache metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8080/server-status?auto"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "apache.cpu.load": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.current_connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.1": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.15": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.5": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.request.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.scoreboard": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.traffic": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.workers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for apache metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "apache.server.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "apache.server.port": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for apache resource attributes."
            }
          }
        },
        "^apachespark(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "spark.driver.block_manager.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.block_manager.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.compilation.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.compilation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_class.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_class.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_method.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_method.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.source_code.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.source_code.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.job.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.job.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.stage.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.stage.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.gc.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.gc.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.execution": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.jvm": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.pool": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.storage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.file_cache_hits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.files_discovered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.hive_client_calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.parallel_listing_jobs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.partitions_fetched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.jvm_cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.posted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.processing_time.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.queue_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.gc_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.input_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.shuffle.io.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.storage_memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.stage.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.stage.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.disk.spilled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.executor.cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.executor.run_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.io.records": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.io.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.jvm_gc_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.memory.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.memory.spilled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.blocks_fetched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.fetch_wait_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.disk": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.read.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.records": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.write.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.write_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.result_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for apachespark metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "spark.application.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.application.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.executor.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.job.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.stage.attempt.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.stage.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for apachespark resource attributes."
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:4040"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "application_names": {}
          }
        },
        "^awscloudwatch(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the overall config structure for the awscloudwatchreceiver\n",
          "properties": {
            "region": {
              "type": "string",
              "default": ""
            },
            "profile": {
              "type": "string",
              "default": ""
            },
            "imds_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs": {
              "description": "LogsConfig is the configuration for the logs portion of this receiver"
            }
          }
        },
        "^awscontainerinsightreceiver(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for aws ecs container metrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s",
              "description": "CollectionInterval is the interval at which metrics should be collected. The default is 60 second."
            },
            "container_orchestrator": {
              "type": "string",
              "default": "eks",
              "description": "ContainerOrchestrator is the type of container orchestration service, e.g. eks or ecs. The default is eks."
            },
            "add_service_as_attribute": {
              "type": "boolean",
              "default": true,
              "description": "Whether to add the associated service name as attribute. The default is true"
            },
            "prefer_full_pod_name": {
              "type": "boolean",
              "default": false,
              "description": "The \"PodName\" attribute is set based on the name of the relevant controllers like Daemonset, Job, ReplicaSet, ReplicationController, ...\nIf it can not be set that way and PrefFullPodName is true, the \"PodName\" attribute is set to the pod's own name.\nThe default value is false"
            },
            "add_full_pod_name_metric_label": {
              "type": "boolean",
              "default": false,
              "description": "The \"FullPodName\" attribute is the pod name including suffix\nIf false FullPodName label is not added\nThe default value is false"
            }
          }
        },
        "^awsecscontainermetrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for aws ecs container metrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "20s",
              "description": "CollectionInterval is the interval at which metrics should be collected"
            }
          }
        },
        "^awsfirehose(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:4433"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "record_type": {
              "type": "string",
              "default": "cwmetrics",
              "description": "RecordType is the key used to determine which unmarshaler to use\nwhen receiving the requests."
            },
            "access_key": {
              "type": "string",
              "default": "",
              "description": "AccessKey is checked against the one received with each request.\nThis can be set when creating or updating the Firehose delivery\nstream."
            }
          }
        },
        "^awsxray(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configurations for an AWS X-Ray receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:2000"
            },
            "transport": {
              "type": "string",
              "default": "udp"
            },
            "proxy_server": {
              "description": "ProxyServer defines configurations related to the local TCP proxy server."
            }
          }
        },
        "^azureblob(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "connection_string": {
              "type": "string",
              "default": "",
              "description": "Azure Blob Storage connection key,\nwhich can be found in the Azure Blob Storage resource on the Azure Portal. (no default)"
            },
            "event_hub": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "",
                  "description": "Azure Event Hub endpoint triggering on the `Blob Create` event"
                }
              },
              "description": "Configurations of Azure Event Hub triggering on the `Blob Create` event"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container_name": {
                  "type": "string",
                  "default": "logs",
                  "description": "Name of the blob container with the logs (default = \"logs\")"
                }
              },
              "description": "Logs related configurations"
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container_name": {
                  "type": "string",
                  "default": "traces",
                  "description": "Name of the blob container with the traces (default = \"traces\")"
                }
              },
              "description": "Traces related configurations"
            }
          }
        },
        "^azureeventhub(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "connection": {
              "type": "string",
              "default": ""
            },
            "partition": {
              "type": "string",
              "default": ""
            },
            "offset": {
              "type": "string",
              "default": ""
            },
            "storage": {},
            "format": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^azuremonitor(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "azuremonitor.subscription_id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeSettings provides common settings for a particular metric."
                },
                "azuremonitor.tenant_id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeSettings provides common settings for a particular metric."
                }
              },
              "description": "ResourceAttributesSettings provides settings for azuremonitorreceiver metrics."
            },
            "subscription_id": {
              "type": "string",
              "default": ""
            },
            "tenant_id": {
              "type": "string",
              "default": ""
            },
            "client_id": {
              "type": "string",
              "default": ""
            },
            "client_secret": {
              "type": "string",
              "default": ""
            },
            "resource_groups": {},
            "services": {},
            "cache_resources": {
              "type": "number"
            },
            "cache_resources_definitions": {
              "type": "number"
            },
            "maximum_number_of_metrics_in_a_call": {
              "type": "integer",
              "default": 20
            },
            "append_tags_as_attributes": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "^bigip(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "https://localhost:443"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bigip.node.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.member.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for bigip metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bigip.node.ip_address": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool_member.ip_address": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool_member.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.virtual_server.destination": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.virtual_server.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for bigip resource attributes."
            }
          }
        },
        "^carbon(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Carbon receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tcp_idle_timeout": {
              "type": "string",
              "default": "30s",
              "description": "TCPIdleTimeout is the timout for idle TCP connections, it is ignored\nif transport being used is UDP."
            },
            "parser": {
              "description": "Parser specifies a parser and the respective configuration to be used\nby the receiver."
            }
          }
        },
        "^chrony(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for chrony metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s",
              "description": "Timeout controls the max time allowed to read data from chronyd"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ntp.frequency.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.skew": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.stratum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.correction": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.last_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.rms_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.root_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for chrony metrics."
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/chrony/chronyd.sock",
              "description": "Endpoint is the published address or unix socket\nthat allows clients to connect to:\nThe allowed format is:\n  unix:///path/to/chronyd/unix.sock\n  udp://localhost:323\n\nThe default value is unix:///var/run/chrony/chronyd.sock"
            }
          }
        },
        "^cloudfoundry(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Collectd receiver.\n",
          "properties": {
            "rlp_gateway": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://localhost"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {},
                "shard_id": {
                  "type": "string",
                  "default": "opentelemetry"
                }
              }
            },
            "uaa": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://localhost"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
                },
                "username": {
                  "type": "string",
                  "default": "admin"
                },
                "password": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "LimitedHTTPClientSettings is a subset of HTTPClientSettings, implemented as a separate type due to the library this\nconfiguration is used with not taking a preconfigured http.Client as input, but only taking these specific options"
            }
          }
        },
        "^collectd(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Collectd receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8081"
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "attributes_prefix": {
              "type": "string",
              "default": ""
            },
            "encoding": {
              "type": "string",
              "default": "json"
            }
          }
        },
        "^couchdb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "1m0s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:5984"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "couchdb.average_request_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.database.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.database.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.file_descriptor.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.bulk_requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.responses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.views": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for couchdb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "couchdb.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for couchdb resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^datadog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8126"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "read_timeout": {
              "type": "string",
              "default": "1m0s",
              "description": "ReadTimeout of the http server"
            }
          }
        },
        "^docker_stats(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for docker_stats metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/docker.sock",
              "description": "The URL of the docker server.  Default is \"unix:///var/run/docker.sock\""
            },
            "container_labels_to_metric_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A mapping of container label names to MetricDescriptor label keys.\nThe corresponding container label value will become the DataPoint label value\nfor the mapped name.  E.g. `io.kubernetes.container.name: container_spec_name`\nwould result in a MetricDescriptor label called `container_spec_name` whose\nMetric DataPoints have the value of the `io.kubernetes.container.name` container label."
            },
            "env_vars_to_metric_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A mapping of container environment variable names to MetricDescriptor label\nkeys.  The corresponding env var values become the DataPoint label value.\nE.g. `APP_VERSION: version` would result MetricDescriptors having a label\nkey called `version` whose DataPoint label values are the value of the\n`APP_VERSION` environment variable configured for that particular container, if\npresent."
            },
            "excluded_images": {
              "description": "A list of filters whose matching images are to be excluded.  Supports literals, globs, and regex."
            },
            "api_version": {
              "type": "number",
              "description": "Docker client API version. Default is 1.22"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.blockio.io_merged_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_queued_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_service_bytes_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_service_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_serviced_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_wait_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.sectors_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.percent": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.periods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.throttled_periods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.throttled_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.kernelmode": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.percpu": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.system": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.usermode": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.active_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.active_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.dirty": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.hierarchical_memory_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.hierarchical_memsw_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.inactive_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.inactive_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.mapped_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.percent": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgmajfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgpgin": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgpgout": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss_huge": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_active_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_active_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_dirty": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_inactive_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_inactive_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_mapped_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgmajfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgpgin": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgpgout": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_rss_huge": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_unevictable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_writeback": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.unevictable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.writeback": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_packets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_packets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.pids.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.pids.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for docker_stats metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.command_line": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.hostname": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.runtime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for docker_stats resource attributes."
            }
          }
        },
        "^elasticsearch(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the elasticsearch receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:9200"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "elasticsearch.breaker.memory.estimated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.breaker.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.breaker.tripped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.data_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.health": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.in_flight_fetch": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.indices.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.pending_tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.published_states.differences": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.published_states.full": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.shards": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_queue": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_update.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_update.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.merge.docs_count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.merge.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.shards.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.translog.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.translog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.total.primary_rejections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.total.replica_rejections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.memory.indexing_pressure": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cluster.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cluster.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.disk.io.read": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.disk.io.write": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.http.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.documents.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.operations.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.open_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.get.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.get.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.documents.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.documents.preprocessed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.operations.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.cache_evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.compilation_limit_triggered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.compilations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.segments.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.data_set.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.reserved.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.tasks.finished": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.tasks.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.uncommitted.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.15m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.1m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.5m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.memory.virtual": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.classes.loaded": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.gc.collections.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.gc.collections.elapsed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.nonheap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.nonheap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.pool.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.pool.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.threads.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for elasticsearch metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "elasticsearch.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.index.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.node.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for elasticsearch resource attributes."
            },
            "nodes": {
              "description": "Nodes defines the nodes to scrape.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/7.9/cluster.html#cluster-nodes for which selectors may be used here.\nIf Nodes is empty, no nodes will be scraped."
            },
            "skip_cluster_metrics": {
              "type": "boolean",
              "default": false,
              "description": "SkipClusterMetrics indicates whether cluster level metrics from /_cluster/* endpoints should be scraped or not."
            },
            "indices": {
              "description": "Indices defines the indices to scrape.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html#index-stats-api-path-params\nfor which names are viable.\nIf Indices is empty, no indices will be scraped."
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Username is the username used when making REST calls to elasticsearch. Must be specified if Password is. Not required."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Password is the password used when making REST calls to elasticsearch. Must be specified if Username is. Not required."
            }
          }
        },
        "^expvar(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for expvar metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "3s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8000/debug/vars"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "process.runtime.memstats.buck_hash_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.frees": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.gc_cpu_fraction": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.gc_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_alloc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_idle": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_objects": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_released": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.last_pause": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.lookups": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mallocs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mcache_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mcache_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mspan_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mspan_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.next_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.num_forced_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.num_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.other_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.pause_total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.stack_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.stack_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.total_alloc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for expvar metrics."
            }
          }
        },
        "^filelog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "FileLogConfig defines configuration for the filelog receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "file_input"
            },
            "type": {
              "type": "string",
              "default": "file_input"
            },
            "output": {},
            "include": {},
            "exclude": {},
            "ordering_criteria": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "regex": {
                  "type": "string",
                  "default": ""
                },
                "sort_by": {}
              }
            },
            "include_file_name": {
              "type": "boolean",
              "default": true
            },
            "include_file_path": {
              "type": "boolean",
              "default": false
            },
            "include_file_name_resolved": {
              "type": "boolean",
              "default": false
            },
            "include_file_path_resolved": {
              "type": "boolean",
              "default": false
            },
            "poll_interval": {
              "type": "string",
              "default": "200ms"
            },
            "start_at": {
              "type": "string",
              "default": "end"
            },
            "fingerprint_size": {
              "type": "integer",
              "default": 1000
            },
            "max_log_size": {
              "type": "integer",
              "default": 1048576
            },
            "max_concurrent_files": {
              "type": "integer",
              "default": 1024
            },
            "max_batches": {
              "type": "integer"
            },
            "delete_after_read": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "force_flush_period": {
              "type": "string",
              "default": "500ms"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "header": {},
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^flinkmetrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8081"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "flink.job.checkpoint.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.checkpoint.in_progress": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.last_checkpoint.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.last_checkpoint.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.restart.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.class_loader.classes_loaded": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.cpu.load": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.gc.collections.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.gc.collections.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.direct.total_capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.direct.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.mapped.total_capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.mapped.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.threads.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.memory.managed.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.memory.managed.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.operator.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.operator.watermark.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.task.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for flinkmetrics metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "flink.job.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.resource.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.subtask.index": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.task.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.taskmanager.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for flinkmetrics resource attributes."
            }
          }
        },
        "^fluentforward(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the fluentforward receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "The address to listen on for incoming Fluent Forward events.  Should be\nof the form `<ip addr>:<port>` (TCP) or `unix://<socket_path>` (Unix\ndomain socket)."
            }
          }
        },
        "^googlecloudpubsub(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "project": {
              "type": "string",
              "default": "",
              "description": "Google Cloud Project ID where the Pubsub client will connect to"
            },
            "user_agent": {
              "type": "string",
              "default": "",
              "description": "User agent that will be used by the Pubsub client to connect to the service"
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Override of the Pubsub Endpoint, leave empty for the default endpoint"
            },
            "insecure": {
              "type": "boolean",
              "default": false,
              "description": "Only has effect if Endpoint is not \"\""
            },
            "timeout": {
              "type": "string"
            },
            "subscription": {
              "type": "string",
              "default": "",
              "description": "The fully qualified resource name of the Pubsub subscription"
            },
            "encoding": {
              "type": "string",
              "default": "",
              "description": "Lock down the encoding of the payload, leave empty for attribute based detection"
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Lock down the compression of the payload, leave empty for attribute based detection"
            },
            "client_id": {
              "type": "string",
              "default": "",
              "description": "The client id that will be used by Pubsub to make load balancing decisions"
            }
          }
        },
        "^googlecloudspanner(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "top_metrics_query_max_rows": {
              "type": "integer",
              "default": 100
            },
            "backfill_enabled": {
              "type": "boolean",
              "default": false
            },
            "cardinality_total_limit": {
              "type": "integer"
            },
            "projects": {},
            "hide_topn_lockstats_rowrangestartkey": {
              "type": "boolean",
              "default": false
            },
            "truncate_text": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "^haproxy(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for haproxy metrics builder.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "haproxy.bytes.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.bytes.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.clients.canceled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.bypass": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.retries": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.downtime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.failed_checks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.denied": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.redispatched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.responses.denied": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.responses.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.server_selected.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for haproxy metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "haproxy.addr": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.algo": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.iid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.pid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.proxy_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.service_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.sid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.url": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for haproxy resource attributes."
            }
          }
        },
        "^hostmetrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for HostMetrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "root_path": {
              "type": "string",
              "default": "",
              "description": "RootPath is the host's root directory (linux only)."
            }
          }
        },
        "^httpcheck(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "httpcheck.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "httpcheck.error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "httpcheck.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for httpcheck metrics."
            },
            "targets": {}
          }
        },
        "^iis(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for simple prometheus receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "iis.connection.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.connection.anonymous": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.connection.attempt.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.file.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.queue.age.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.queue.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.rejected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.thread.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for iis metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "iis.application_pool": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "iis.site": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for iis resource attributes."
            }
          }
        },
        "^influxdb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the InfluxDB receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:8086"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "^jaeger(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "thrift_http": {},
                "thrift_binary": {
                  "description": "ProtocolUDP is the configuration for a UDP protocol."
                },
                "thrift_compact": {
                  "description": "ProtocolUDP is the configuration for a UDP protocol."
                }
              },
              "description": "Protocols is the configuration for the supported protocols."
            },
            "remote_sampling": {
              "description": "RemoteSamplingConfig defines config key for remote sampling fetch endpoint"
            }
          }
        },
        "^jmx(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "jar_path": {
              "type": "string",
              "default": "/opt/opentelemetry-java-contrib-jmx-metrics.jar",
              "description": "The path for the JMX Metric Gatherer uber JAR (/opt/opentelemetry-java-contrib-jmx-metrics.jar by default)."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "The Service URL or host:port for the target coerced to one of form: service:jmx:rmi:///jndi/rmi://<host>:<port>/jmxrmi."
            },
            "target_system": {
              "type": "string",
              "default": "",
              "description": "The target system for the metric gatherer whose built in groovy script to run."
            },
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "The duration in between groovy script invocations and metric exports (10 seconds by default).\nWill be converted to milliseconds."
            },
            "otlp": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "0.0.0.0:0",
                  "description": "The OTLP Receiver endpoint to send metrics to (\"0.0.0.0:<random open port>\" by default)."
                },
                "timeout": {
                  "type": "string",
                  "default": "5s"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The headers to include in OTLP metric submission requests."
                }
              },
              "description": "The exporter settings for"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "The JMX username"
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "The JMX password"
            },
            "keystore_path": {
              "type": "string",
              "default": "",
              "description": "The keystore path for SSL"
            },
            "keystore_password": {
              "type": "string",
              "default": "",
              "description": "The keystore password for SSL"
            },
            "keystore_type": {
              "type": "string",
              "default": "",
              "description": "The keystore type for SSL"
            },
            "truststore_path": {
              "type": "string",
              "default": "",
              "description": "The truststore path for SSL"
            },
            "truststore_password": {
              "type": "string",
              "default": "",
              "description": "The truststore password for SSL"
            },
            "truststore_type": {
              "type": "string",
              "default": "",
              "description": "The truststore type for SSL"
            },
            "remote_profile": {
              "type": "string",
              "default": "",
              "description": "The JMX remote profile.  Should be one of:\n`\"SASL/PLAIN\"`, `\"SASL/DIGEST-MD5\"`, `\"SASL/CRAM-MD5\"`, `\"TLS SASL/PLAIN\"`, `\"TLS SASL/DIGEST-MD5\"`, or\n`\"TLS SASL/CRAM-MD5\"`, though no enforcement is applied."
            },
            "realm": {
              "type": "string",
              "default": "",
              "description": "The SASL/DIGEST-MD5 realm"
            },
            "additional_jars": {
              "description": "Array of additional JARs to be added to the the class path when launching the JMX Metric Gatherer JAR"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of resource attributes used by the Java SDK Autoconfigure to set resource attributes"
            },
            "log_level": {
              "type": "string",
              "default": "",
              "description": "Log level used by the JMX metric gatherer. Should be one of:\n`\"trace\"`, `\"debug\"`, `\"info\"`, `\"warn\"`, `\"error\"`, `\"off\"`"
            }
          }
        },
        "^journald(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "JournaldConfig defines configuration for the journald receiver\n",
          "properties": {
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^k8s_cluster(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for kubernetes cluster receiver.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "Collection interval for metrics."
            },
            "node_conditions_to_report": {
              "description": "Node condition types to report. See all condition types, see\nhere: https://kubernetes.io/docs/concepts/architecture/nodes/#condition."
            },
            "allocatable_types_to_report": {
              "description": "Allocate resource types to report. See all resource types, see\nhere: https://kubernetes.io/docs/concepts/architecture/nodes/#capacity"
            },
            "metadata_exporters": {
              "description": "List of exporters to which metadata from this receiver should be forwarded to."
            },
            "distribution": {
              "type": "string",
              "default": "kubernetes",
              "description": "Whether OpenShift support should be enabled or not."
            },
            "metadata_collection_interval": {
              "type": "string",
              "default": "5m0s",
              "description": "Collection interval for metadata.\nMetadata of the particular entity in the cluster is collected when the entity changes.\nIn addition metadata of all entities is collected periodically even if no changes happen.\nSetting the duration to 0 will disable periodic collection (however will not impact\nmetadata collection on changes)."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "k8s.container.cpu_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.cpu_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ephemeralstorage_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ephemeralstorage_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.memory_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.memory_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ready": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.restarts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.storage_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.storage_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.cronjob.active_jobs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.current_scheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.desired_scheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.misscheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.ready_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.deployment.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.deployment.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.current_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.desired_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.max_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.min_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.active_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.desired_successful_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.failed_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.max_parallel_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.successful_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.namespace.phase": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.phase": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.status_reason": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replicaset.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replicaset.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replication_controller.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replication_controller.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.resource_quota.hard_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.resource_quota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.current_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.desired_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.ready_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.updated_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.appliedclusterquota.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.appliedclusterquota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.clusterquota.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.clusterquota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for k8s_cluster metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.tag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.cronjob.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.cronjob.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.daemonset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.daemonset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.deployment.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.deployment.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.hpa.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.hpa.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.job.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.job.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicaset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicaset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicationcontroller.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicationcontroller.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.resourcequota.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.resourcequota.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.statefulset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.statefulset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "opencensus.resourcetype": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "openshift.clusterquota.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "openshift.clusterquota.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for k8s_cluster resource attributes."
            }
          }
        },
        "^k8s_events(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for kubernetes events receiver.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "namespaces": {
              "description": "List of ‘namespaces’ to collect events from."
            }
          }
        },
        "^k8sobjects(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "APIConfig contains options relevant to connecting to the K8s API\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "objects": {}
          }
        },
        "^kafka(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Kafka receiver.\n",
          "properties": {
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "Kafka protocol version"
            },
            "topic": {
              "type": "string",
              "default": "otlp_spans",
              "description": "The name of the kafka topic to consume from (default \"otlp_spans\")"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of the messages (default \"otlp_proto\")"
            },
            "group_id": {
              "type": "string",
              "default": "otel-collector",
              "description": "The consumer group that receiver will be consuming messages from (default \"otel-collector\")"
            },
            "client_id": {
              "type": "string",
              "default": "otel-collector",
              "description": "The consumer client ID that receiver will use (default \"otel-collector\")"
            },
            "initial_offset": {
              "type": "string",
              "default": "latest",
              "description": "The initial offset to use if no offset was previously committed.\nMust be `latest` or `earliest` (default \"latest\")."
            },
            "metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "full": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to maintain a full set of metadata for all topics, or just\nthe minimal set that has been necessary so far. The full set is simpler\nand usually more convenient, but can take up a substantial amount of\nmemory if you have many topics and partitions. Defaults to true."
                },
                "retry": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "max": {
                      "type": "integer",
                      "default": 3,
                      "description": "The total number of times to retry a metadata request when the\ncluster is in the middle of a leader election or at startup (default 3)."
                    },
                    "backoff": {
                      "type": "string",
                      "default": "250ms",
                      "description": "How long to wait for leader election to occur before retrying\n(default 250ms). Similar to the JVM's `retry.backoff.ms`."
                    }
                  },
                  "description": "Retry configuration for metadata.\nThis configuration is useful to avoid race conditions when broker\nis starting at the same time as collector."
                }
              },
              "description": "Metadata is the namespace for metadata management properties used by the\nClient, and shared by the Producer/Consumer."
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication defines authentication."
            },
            "autocommit": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enable": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether or not to auto-commit updated offsets back to the broker.\n(default enabled)."
                },
                "interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "How frequently to commit updated offsets. Ineffective unless\nauto-commit is enabled (default 1s)"
                }
              },
              "description": "Controls the auto-commit functionality"
            },
            "message_marking": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, the messages are marked after the pipeline execution"
                },
                "on_error": {
                  "type": "boolean",
                  "default": false,
                  "description": "If false, only the successfully processed messages are marked, it has no impact if\nAfter is set to false.\nNote: this can block the entire partition in case a message processing returns\na permanent error."
                }
              },
              "description": "Controls the way the messages are marked as consumed"
            }
          }
        },
        "^kafkametrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config represents user settings for kafkametrics receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "ProtocolVersion Kafka protocol version"
            },
            "topic_match": {
              "type": "string",
              "default": "^[^_].*$",
              "description": "TopicMatch topics to collect metrics on"
            },
            "group_match": {
              "type": "string",
              "default": ".*",
              "description": "GroupMatch consumer groups to collect on"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication data"
            },
            "scrapers": {
              "description": "Scrapers defines which metric data points to be captured from kafka"
            },
            "client_id": {
              "type": "string",
              "default": "otel-metrics-receiver",
              "description": "ClientID is the id associated with the consumer that reads from topics in kafka."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "kafka.brokers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.lag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.lag_sum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.members": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.offset_sum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.current_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.oldest_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.replicas_in_sync": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.topic.partitions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for kafkametrics metrics."
            }
          }
        },
        "^kubeletstats(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "ClientConfig for a kubelet client for talking to a kubelet HTTP endpoint.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "auth_type": {
              "type": "string",
              "default": "tls",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "ca_file": {
              "type": "string",
              "default": ""
            },
            "ca_pem": {
              "type": "string",
              "default": ""
            },
            "cert_file": {
              "type": "string",
              "default": ""
            },
            "cert_pem": {
              "type": "string",
              "default": ""
            },
            "key_file": {
              "type": "string",
              "default": ""
            },
            "key_pem": {
              "type": "string",
              "default": ""
            },
            "min_version": {
              "type": "string",
              "default": ""
            },
            "max_version": {
              "type": "string",
              "default": ""
            },
            "reload_interval": {
              "type": "string"
            },
            "insecure_skip_verify": {
              "type": "boolean",
              "default": false,
              "description": "InsecureSkipVerify controls whether the client verifies the server's\ncertificate chain and host name."
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "extra_metadata_labels": {
              "description": "ExtraMetadataLabels contains list of extra metadata that should be taken from /pods endpoint\nand put as extra labels on metrics resource.\nNo additional metadata is fetched by default, so there are no extra calls to /pods endpoint.\nSupported values include container.id and k8s.volume.type."
            },
            "metric_groups": {
              "description": "MetricGroupsToCollect provides a list of metrics groups to collect metrics from.\n\"container\", \"pod\", \"node\" and \"volume\" are the only valid groups."
            },
            "k8s_api_config": {
              "description": "Configuration of the Kubernetes API client."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.network.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.network.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for kubeletstats metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aws.volume.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "fs.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "gce.pd.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "glusterfs.endpoints.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "glusterfs.path": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.persistentvolumeclaim.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.volume.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.volume.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "partition": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for kubeletstats resource attributes."
            }
          }
        },
        "^loki(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the lokireceiver receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              },
              "description": "Protocols is the configuration for the supported protocols, currently gRPC and HTTP (Proto and JSON)."
            },
            "use_incoming_timestamp": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "^memcached(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for memcached metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:11211"
            },
            "transport": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "memcached.bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.connections.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.connections.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.current_items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.network": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.operation_hit_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for memcached metrics."
            }
          }
        },
        "^mongodb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mongodb metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "1m0s"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodb.cache.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.collection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.cursor.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.cursor.timeout.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.data.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.database.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.document.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.extent.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.global_lock.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.health": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.access.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.wait_count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.deadlock.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.io.receive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.io.transmit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.object.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.latency.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.repl.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.storage.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mongodb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "database": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mongodb resource attributes."
            },
            "hosts": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "replica_set": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^mongodbatlas(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mongodbatlas metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "3m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "public_key": {
              "type": "string",
              "default": ""
            },
            "private_key": {
              "type": "string",
              "default": ""
            },
            "granularity": {
              "type": "string",
              "default": "PT1M"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodbatlas.db.counts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.db.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.iops.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.iops.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.latency.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.space.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.space.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.utilization.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.utilization.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.asserts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.background_flush": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cache.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cursors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.document.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.operations.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.query_executor.scanned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.query_targeting.scanned_per_returned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.storage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.global_lock": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.index.btree_miss_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.index.counters": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.data_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.written": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.network.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.oplog.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.oplog.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.restarts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.tickets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.cpu.normalized.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.disk.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.memory.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.memory.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.network.io.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.network.io.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.io.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.io.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mongodbatlas metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodb_atlas.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.db.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.disk.partition": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.org_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.port": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.type_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.project.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.project.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.user.alias": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mongodbatlas resource attributes."
            },
            "alerts": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "secret": {
                  "type": "string",
                  "default": ""
                },
                "tls": {},
                "mode": {
                  "type": "string",
                  "default": "listen"
                },
                "projects": {
                  "description": "these parameters are only relevant in retrieval mode"
                },
                "poll_interval": {
                  "type": "string",
                  "default": "5m0s"
                },
                "page_size": {
                  "type": "integer",
                  "default": 100
                },
                "max_pages": {
                  "type": "integer",
                  "default": 10
                }
              }
            },
            "events": {
              "description": "EventsConfig is the configuration options for events collection"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "projects": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "storage": {}
          }
        },
        "^mysql(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mysql metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "username": {
              "type": "string",
              "default": "root"
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "database": {
              "type": "string",
              "default": ""
            },
            "allow_native_passwords": {
              "type": "boolean",
              "default": true
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:3306"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mysql.buffer_pool.data_pages": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.page_flushes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.pages": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.client.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.connection.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.double_writes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.handlers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.index.io.wait.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.index.io.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.joins": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.log_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.mysqlx_connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.mysqlx_worker_threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.opened_resources": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.page_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.prepared_statements": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.client.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.slow.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.replica.sql_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.replica.time_behind_source": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.row_locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.row_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.sorts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.statement_event.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.statement_event.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.io.wait.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.io.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.read.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.read.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.write.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.write.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table_open_cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.tmp_resources": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mysql metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mysql.instance.endpoint": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mysql resource attributes."
            },
            "statement_events": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "digest_text_limit": {
                  "type": "integer",
                  "default": 120
                },
                "limit": {
                  "type": "integer",
                  "default": 250
                },
                "time_limit": {
                  "type": "string",
                  "default": "24h0m0s"
                }
              }
            }
          }
        },
        "^nginx(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for nginx metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:80/status"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nginx.connections_accepted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.connections_current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.connections_handled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "temp.connections_current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for nginx metrics."
            }
          }
        },
        "^nsxt(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the NSX receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nsxt.node.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.filesystem.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.memory.cache.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for nsxt metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "device.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for nsxt resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^opencensus(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for OpenCensus receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:55678"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tls": {},
            "max_recv_msg_size_mib": {
              "default": 0
            },
            "max_concurrent_streams": {
              "default": 0
            },
            "read_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "keepalive": {},
            "auth": {},
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "cors_allowed_origins": {
              "description": "CorsOrigins are the allowed CORS origins for HTTP/JSON requests to grpc-gateway adapter\nfor the OpenCensus receiver. See github.com/rs/cors\nAn empty list means that CORS is not enabled at all. A wildcard (*) can be\nused to match any origin or one or more characters of an origin."
            }
          }
        },
        "^oracledb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for oracledb metrics builder.\n",
          "properties": {
            "datasource": {
              "type": "string",
              "default": ""
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "service": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "oracledb.consistent_gets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.db_block_gets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.dml_locks.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.dml_locks.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_locks.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_locks.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_resources.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_resources.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.exchange_deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.executions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.hard_parses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.logical_reads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.parse_calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.pga_memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.physical_reads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.processes.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.processes.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.sessions.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.sessions.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.tablespace_size.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.tablespace_size.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.transactions.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.transactions.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.user_commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.user_rollbacks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for oracledb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "oracledb.instance.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for oracledb resource attributes."
            }
          }
        },
        "^otlp(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              }
            }
          }
        },
        "^otlpjsonfile(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration of a file input operator\n",
          "properties": {
            "include": {},
            "exclude": {},
            "ordering_criteria": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "regex": {
                  "type": "string",
                  "default": ""
                },
                "sort_by": {}
              }
            },
            "include_file_name": {
              "type": "boolean",
              "default": true
            },
            "include_file_path": {
              "type": "boolean",
              "default": false
            },
            "include_file_name_resolved": {
              "type": "boolean",
              "default": false
            },
            "include_file_path_resolved": {
              "type": "boolean",
              "default": false
            },
            "poll_interval": {
              "type": "string",
              "default": "200ms"
            },
            "start_at": {
              "type": "string",
              "default": "end"
            },
            "fingerprint_size": {
              "type": "integer",
              "default": 1000
            },
            "max_log_size": {
              "type": "integer",
              "default": 1048576
            },
            "max_concurrent_files": {
              "type": "integer",
              "default": 1024
            },
            "max_batches": {
              "type": "integer"
            },
            "delete_after_read": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "force_flush_period": {
              "type": "string",
              "default": "500ms"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "header": {},
            "storage": {}
          }
        },
        "^podman_stats(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///run/podman/podman.sock",
              "description": "The URL of the podman server.  Default is \"unix:///run/podman/podman.sock\""
            },
            "api_version": {
              "type": "string",
              "default": "3.3.1"
            },
            "ssh_key": {
              "type": "string",
              "default": ""
            },
            "ssh_passphrase": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^postgresql(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for postgresql metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "databases": {},
            "endpoint": {
              "type": "string",
              "default": "localhost:5432"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": true
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "postgresql.backends": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.buffers.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.buffers.writes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.checkpoint.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.maxwritten": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.blocks_read": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.connection.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.database.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.database.locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.db_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.index.scans": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.index.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.replication.data_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.rollbacks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.rows": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.sequential_scans": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.vacuum.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.temp_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.wal.age": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.wal.lag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for postgresql metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "postgresql.database.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "postgresql.index.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "postgresql.table.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for postgresql resource attributes."
            }
          }
        },
        "^prometheus(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Prometheus receiver.\n",
          "properties": {
            "trim_metric_suffixes": {
              "type": "boolean",
              "default": false
            },
            "use_start_time_metric": {
              "type": "boolean",
              "default": false,
              "description": "UseStartTimeMetric enables retrieving the start time of all counter metrics\nfrom the process_start_time_seconds metric. This is only correct if all counters on that endpoint\nstarted after the process start time, and the process is the only actor exporting the metric after\nthe process started. It should not be used in \"exporters\" which export counters that may have\nstarted before the process itself. Use only if you know what you are doing, as this may result\nin incorrect rate calculations."
            },
            "start_time_metric_regex": {
              "type": "string",
              "default": ""
            },
            "report_extra_scrape_metrics": {
              "type": "boolean",
              "default": false,
              "description": "ReportExtraScrapeMetrics - enables reporting of additional metrics for Prometheus client like scrape_body_size_bytes"
            },
            "target_allocator": {},
            "config": {
              "description": "ConfigPlaceholder is just an entry to make the configuration pass a check\nthat requires that all keys present in the config actually exist on the\nstructure, ie.: it will error if an unknown key is present."
            }
          }
        },
        "^prometheus_simple(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for simple prometheus receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:9090"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "CollectionInterval is the interval at which metrics should be collected"
            },
            "metrics_path": {
              "type": "string",
              "default": "/metrics",
              "description": "MetricsPath the path to the metrics endpoint."
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Params the parameters to the metrics endpoint."
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels static labels"
            },
            "use_service_account": {
              "type": "boolean",
              "default": false,
              "description": "Whether or not to use pod service account to authenticate."
            }
          }
        },
        "^pulsar(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "pulsar://localhost:6650",
              "description": "Configure the service URL for the Pulsar service."
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The topic of pulsar to consume logs,metrics,traces. (default = \"otlp_traces\" for traces,\n\"otlp_metrics\" for metrics, \"otlp_logs\" for logs)"
            },
            "subscription": {
              "type": "string",
              "default": "otlp_subscription",
              "description": "The Subscription that receiver will be consuming messages from (default \"otlp_subscription\")"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of the messages (default \"otlp_proto\")"
            },
            "consumer_name": {
              "type": "string",
              "default": "",
              "description": "Name specifies the consumer name."
            },
            "tls_trust_certs_file_path": {
              "type": "string",
              "default": "",
              "description": "Set the path to the trusted TLS certificate file"
            },
            "tls_allow_insecure_connection": {
              "type": "boolean",
              "default": false,
              "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tls": {},
                "token": {},
                "athenz": {},
                "oauth2": {}
              }
            }
          }
        },
        "^purefa(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config relating to Array Metric Scraper.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "settings": {
              "description": "Settings contains settings for the individual scrapers"
            },
            "array": {
              "description": "Array represents the list of arrays to query"
            },
            "hosts": {
              "description": "Hosts represents the list of hosts to query"
            },
            "directories": {
              "description": "Directories represents the list of directories to query"
            },
            "pods": {
              "description": "Pods represents the list of pods to query"
            },
            "volumes": {
              "description": "Volumes represents the list of volumes to query"
            },
            "env": {
              "type": "string",
              "default": "",
              "description": "Env represents the respective environment value valid to scrape"
            },
            "fa_array_name": {
              "type": "string",
              "default": "foobar.example.com",
              "description": "ArrayName represents the display name that is appended to the received metrics, as the `host` label if not provided by OpenMetrics output, and to the `fa_array_name` label always."
            }
          }
        },
        "^purefb(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config relating to Array Metric Scraper.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "settings": {
              "description": "Settings contains settings for the individual scrapers"
            },
            "arrays": {
              "description": "Arrays represents the list of arrays to query"
            },
            "clients": {
              "description": "Clients represents the list of clients metrics"
            },
            "usage": {
              "description": "Usage represents the list of usage to query"
            },
            "env": {
              "type": "string",
              "default": "",
              "description": "Env represents the respective environment value valid to scrape"
            }
          }
        },
        "^rabbitmq(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:15672"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "rabbitmq.consumer.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.acknowledged": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.delivered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.published": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for rabbitmq metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "rabbitmq.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "rabbitmq.queue.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "rabbitmq.vhost.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for rabbitmq resource attributes."
            }
          }
        },
        "^receiver_creator(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for receiver_creator.\n",
          "properties": {
            "watch_observers": {
              "description": "WatchObservers are the extensions to listen to endpoints from."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ResourceAttributes is a map of default resource attributes to add to each resource\nobject received by this receiver from dynamically created receivers."
            }
          }
        },
        "^redis(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for redis metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Optional username. Use the specified Username to authenticate the current connection\nwith one of the connections defined in the ACL list when connecting\nto a Redis 6.0 instance, or greater, that is using the Redis ACL system."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Optional password. Must match the password specified in the\nrequirepass server configuration option, or the user's password when connecting\nto a Redis 6.0 instance, or greater, that is using the Redis ACL system."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "redis.clients.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.connected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.max_input_buffer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.max_output_buffer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cmd.calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cmd.usec": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.commands.processed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.connections.received": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.connections.rejected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.avg_ttl": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.expires": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.keys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keys.evicted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keys.expired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keyspace.hits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keyspace.misses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.latest_fork": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.maxmemory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.fragmentation_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.lua": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.net.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.net.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.rdb.changes_since_last_save": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.replication.backlog_first_byte_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.replication.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.role": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.slaves.connected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for redis metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "redis.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for redis resource attributes."
            }
          }
        },
        "^riak(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8098"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "metrics": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "riak.memory.limit": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.operation.time.mean": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.read_repair.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.vnode.index.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.vnode.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    }
                  },
                  "description": "MetricsConfig provides config for riak metrics."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "riak.node.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for riak resource attributes."
                }
              },
              "description": "MetricsBuilderConfig is a configuration for riak metrics builder."
            }
          }
        },
        "^saphana(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for saphana metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:33015"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "saphana.alert.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.backup.latest": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.column.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.component.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.cpu.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.disk.size.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.host.memory.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.host.swap.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.code_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.shared.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.used.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.expiration.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.finished.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.backlog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.backlog.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.row_store.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.memory.used.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.memory.used.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.record.compressed.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.code_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.compactors.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.compactors.freeable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.effective_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.heap.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.shared.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.stack_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.thread.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.transaction.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.transaction.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for saphana metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "db.system": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "saphana.host": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for saphana resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^sapm(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SAPM receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":7276"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            }
          }
        },
        "^signalfx(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the SignalFx receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":9943"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            }
          }
        },
        "^skywalking(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for skywalking receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              },
              "description": "Protocols is the configuration for the supported protocols."
            }
          }
        },
        "^snmp(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "udp://localhost:161",
              "description": "Endpoint is the SNMP target to request data from. Must be formatted as [udp|tcp|][4|6|]://{host}:{port}.\nDefault: udp://localhost:161\nIf no scheme is given, udp4 is assumed.\nIf no port is given, 161 is assumed."
            },
            "version": {
              "type": "string",
              "default": "v2c",
              "description": "Version is the version of SNMP to use for this connection.\nValid options: v1, v2c, v3.\nDefault: v2c"
            },
            "community": {
              "type": "string",
              "default": "public",
              "description": "Community is the SNMP community string to use.\nOnly valid for versions \"v1\" and \"v2c\"\nDefault: public"
            },
            "user": {
              "type": "string",
              "default": "",
              "description": "User is the SNMP User for this connection.\nOnly valid for version “v3”"
            },
            "security_level": {
              "type": "string",
              "default": "no_auth_no_priv",
              "description": "SecurityLevel is the security level to use for this SNMP connection.\nOnly valid for version “v3”\nValid options: “no_auth_no_priv”, “auth_no_priv”, “auth_priv”\nDefault: \"no_auth_no_priv\""
            },
            "auth_type": {
              "type": "string",
              "default": "MD5",
              "description": "AuthType is the type of authentication protocol to use for this SNMP connection.\nOnly valid for version “v3” and if “no_auth_no_priv” is not selected for SecurityLevel\nValid options: “md5”, “sha”, “sha224”, “sha256”, “sha384”, “sha512”\nDefault: \"md5\""
            },
            "auth_password": {
              "type": "string",
              "default": "",
              "description": "AuthPassword is the authentication password used for this SNMP connection.\nOnly valid for version \"v3\" and if \"no_auth_no_priv\" is not selected for SecurityLevel"
            },
            "privacy_type": {
              "type": "string",
              "default": "DES",
              "description": "PrivacyType is the type of privacy protocol to use for this SNMP connection.\nOnly valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel\nValid options: “des”, “aes”, “aes192”, “aes256”, “aes192c”, “aes256c”\nDefault: \"des\""
            },
            "privacy_password": {
              "type": "string",
              "default": "",
              "description": "PrivacyPassword is the authentication password used for this SNMP connection.\nOnly valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ResourceAttributes defines what resource attributes will be used for this receiver and is composed\nof resource attribute names along with their resource attribute configurations"
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Attributes defines what attributes will be used on metrics for this receiver and is composed of\nattribute names along with their attribute configurations"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Metrics defines what SNMP metrics will be collected for this receiver and is composed of metric\nnames along with their metric configurations"
            }
          }
        },
        "^snowflake(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for snowflake metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "30m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "snowflake.billing.cloud_service.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.total_credit.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.virtual_warehouse.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.cloud_service.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.total_credit.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.virtual_warehouse.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.database.bytes_scanned.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.database.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.logins.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.pipe.credits_used.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_deleted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_spilled.local.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_spilled.remote.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_written.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.compilation_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.data_scanned_cache.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.executed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.execution_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.partitions_scanned.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.queued_overload": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.queued_provision": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_overload_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_provisioning_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_repair_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_deleted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_inserted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_produced.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_unloaded.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_updated.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.session_id.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.failsafe_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.stage_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.storage_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.total_elapsed_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for snowflake metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "snowflake.account.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for snowflake resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "account": {
              "type": "string",
              "default": ""
            },
            "schema": {
              "type": "string",
              "default": "ACCOUNT_USAGE"
            },
            "warehouse": {
              "type": "string",
              "default": ""
            },
            "database": {
              "type": "string",
              "default": "SNOWFLAKE"
            },
            "role": {
              "type": "string",
              "default": "ACCOUNTADMIN"
            }
          }
        },
        "^solace(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Solace receiver.\n",
          "properties": {
            "broker": {
              "description": "The list of solace brokers (default localhost:5671)"
            },
            "queue": {
              "type": "string",
              "default": "",
              "description": "The name of the solace queue to consume from, it is required parameter"
            },
            "max_unacknowledged": {
              "default": 1000,
              "description": "The maximum number of unacknowledged messages the Solace broker can transmit, to configure AMQP Link"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sasl_plain": {
                  "description": "SaslPlainTextConfig defines SASL PLAIN authentication."
                },
                "sasl_xauth2": {
                  "description": "SaslXAuth2Config defines the configuration for the SASL XAUTH2 authentication."
                },
                "sasl_external": {
                  "description": "SaslExternalConfig defines the configuration for the SASL External used in conjunction with TLS client authentication."
                }
              },
              "description": "Authentication defines authentication strategies."
            },
            "flow_control": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "delayed_retry": {
                  "description": "FlowControlDelayedRetry represents the strategy of waiting for a defined amount of time (in time.Duration) and attempt redelivery"
                }
              },
              "description": "FlowControl defines the configuration for what to do in backpressure scenarios, e.g. memorylimiter errors"
            }
          }
        },
        "^splunk_hec(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Splunk HEC receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":8088"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "raw_path": {
              "type": "string",
              "default": "/services/collector/raw",
              "description": "RawPath for raw data collection, default is '/services/collector/raw'"
            },
            "splitting": {
              "type": "string",
              "default": "line",
              "description": "Splitting defines the splitting strategy used by the receiver when ingesting raw events. Can be set to \"line\" or \"none\". Default is \"line\"."
            },
            "health_path": {
              "type": "string",
              "default": "/services/collector/health",
              "description": "HealthPath for health API, default is '/services/collector/health'"
            },
            "hec_metadata_to_otel_attrs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source": {
                  "type": "string",
                  "default": "com.splunk.source",
                  "description": "Source indicates the mapping of the source field to a specific unified model attribute."
                },
                "sourcetype": {
                  "type": "string",
                  "default": "com.splunk.sourcetype",
                  "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute."
                },
                "index": {
                  "type": "string",
                  "default": "com.splunk.index",
                  "description": "Index indicates the mapping of the index field to a specific unified model attribute."
                },
                "host": {
                  "type": "string",
                  "default": "host.name",
                  "description": "Host indicates the mapping of the host field to a specific unified model attribute."
                }
              },
              "description": "HecToOtelAttrs creates a mapping from HEC metadata to attributes."
            }
          }
        },
        "^sqlquery(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "driver": {
              "type": "string",
              "default": ""
            },
            "datasource": {
              "type": "string",
              "default": ""
            },
            "queries": {},
            "storage": {}
          }
        },
        "^sqlserver(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for a sqlserver receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sqlserver.batch.request.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.batch.sql_compilation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.batch.sql_recompilation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.lock.wait.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.lock.wait_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.buffer_cache.hit_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.checkpoint.flush.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.lazy_write.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.life_expectancy": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.operation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.split.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction.write.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.data.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.wait.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.growth.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.shrink.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.user.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for sqlserver metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sqlserver.computer.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "sqlserver.database.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "sqlserver.instance.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for sqlserver resource attributes."
            },
            "instance_name": {
              "type": "string",
              "default": ""
            },
            "computer_name": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^sshcheck(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for sshcheck metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is always required"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "authentication requires a Username and either a Password or KeyFile"
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "key_file": {
              "type": "string",
              "default": ""
            },
            "known_hosts": {
              "type": "string",
              "default": "",
              "description": "file path to the known_hosts"
            },
            "ignore_host_key": {
              "type": "boolean",
              "default": false,
              "description": "IgnoreHostKey provides an insecure path to quickstarts and testing"
            },
            "check_sftp": {
              "type": "boolean",
              "default": false
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sshcheck.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for sshcheck metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ssh.endpoint": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for sshcheck resource attributes."
            }
          }
        },
        "^statsd(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for StatsD receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8125"
            },
            "transport": {
              "type": "string",
              "default": "udp"
            },
            "aggregation_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "enable_metric_type": {
              "type": "boolean",
              "default": false
            },
            "is_monotonic_counter": {
              "type": "boolean",
              "default": false
            },
            "timer_histogram_mapping": {}
          }
        },
        "^syslog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "SysLogConfig defines configuration for the syslog receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "syslog_input"
            },
            "type": {
              "type": "string",
              "default": "syslog_input"
            },
            "output": {},
            "protocol": {
              "type": "string",
              "default": ""
            },
            "location": {
              "type": "string",
              "default": ""
            },
            "enable_octet_counting": {
              "type": "boolean",
              "default": false
            },
            "non_transparent_framing_trailer": {},
            "tcp": {
              "description": "BaseConfig is the detailed configuration of a tcp input operator."
            },
            "udp": {
              "description": "BaseConfig is the details configuration of a udp input operator."
            },
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^tcplog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "TCPLogConfig defines configuration for the tcp receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "tcp_input"
            },
            "type": {
              "type": "string",
              "default": "tcp_input"
            },
            "output": {},
            "max_log_size": {
              "type": "integer"
            },
            "listen_address": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "add_attributes": {
              "type": "boolean",
              "default": false
            },
            "one_log_per_packet": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "multilinebuilder": {},
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^udplog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "UDPLogConfig defines configuration for the udp receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "udp_input"
            },
            "type": {
              "type": "string",
              "default": "udp_input"
            },
            "output": {},
            "listen_address": {
              "type": "string",
              "default": ""
            },
            "one_log_per_packet": {
              "type": "boolean",
              "default": false
            },
            "add_attributes": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ".^"
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^vcenter(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration of the receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "2m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vcenter.cluster.cpu.effective": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.cpu.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.host.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.effective": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.vm.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.datastore.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.datastore.disk.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.memory.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.packet.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.cpu.shares": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.memory.shares": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.ballooned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.swapped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.swapped_ssd": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for vcenter metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vcenter.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.datastore.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.resource_pool.inventory_path": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.resource_pool.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.vm.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.vm.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for vcenter resource attributes."
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "^wavefront(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Wavefront receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003"
            },
            "tcp_idle_timeout": {
              "type": "string",
              "default": "30s",
              "description": "TCPIdleTimeout is the timout for idle TCP connections."
            },
            "extract_collectd_tags": {
              "type": "boolean",
              "default": false,
              "description": "ExtractCollectdTags instructs the Wavefront receiver to attempt to extract\ntags in the CollectD format from the metric name. The default is false."
            }
          }
        },
        "^webhookevent(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Generic Webhook receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "read_timeout": {
              "type": "string",
              "default": "500ms"
            },
            "write_timeout": {
              "type": "string",
              "default": "500ms"
            },
            "path": {
              "type": "string",
              "default": "/events"
            },
            "health_path": {
              "type": "string",
              "default": "/health_check"
            },
            "required_header": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "key": {
                  "type": "string",
                  "default": ""
                },
                "value": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          }
        },
        "^windowseventlog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "WindowsLogConfig defines configuration for the windowseventlog receiver\n",
          "properties": {
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "^windowsperfcounters(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for WindowsPerfCounters receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "perfcounters": {
              "description": "ObjectConfig defines configuration for a perf counter object."
            }
          }
        },
        "^zipkin(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Zipkin receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:9411"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parse_string_tags": {
              "type": "boolean",
              "default": false,
              "description": "If enabled the zipkin receiver will attempt to parse string tags/binary annotations into int/bool/float.\nDisabled by default"
            }
          }
        },
        "^zookeeper(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for zookeeper metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": ":2181"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "zookeeper.connection.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.data_tree.ephemeral_node.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.data_tree.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.file_descriptor.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.file_descriptor.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.follower.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.fsync.exceeded_threshold.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.min": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.request.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.ruok": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.sync.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.watch.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.znode.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for zookeeper metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "server.state": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "zk.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for zookeeper resource attributes."
            }
          }
        }
      },
      "properties": {
        "additionalProperties": false,
        "active_directory_ds": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for active_directory_ds metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "active_directory.ds.bind.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.bind.last_successful.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.bind.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.client.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.ldap.search.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.name_cache.hit_rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.notification.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.operation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.object.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.operation.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.property.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.sync.object.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.sync.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.replication.value.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.security_descriptor_propagations_event.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.suboperation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "active_directory.ds.thread.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for active_directory_ds metrics."
            }
          }
        },
        "aerospike": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the receiver configuration\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "20s"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:3000"
            },
            "tlsname": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "collect_cluster_metrics": {
              "type": "boolean",
              "default": false
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aerospike.namespace.disk.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_cells": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_false_positive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_points": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.geojson.region_query_requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.memory.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.scan.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.namespace.transaction.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.connection.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.memory.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "aerospike.node.query.tracked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for aerospike metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aerospike.namespace": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "aerospike.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for aerospike resource attributes."
            },
            "tls": {}
          }
        },
        "apache": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for apache metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8080/server-status?auto"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "apache.cpu.load": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.current_connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.1": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.15": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.load.5": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.request.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.scoreboard": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.traffic": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "apache.workers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for apache metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "apache.server.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "apache.server.port": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for apache resource attributes."
            }
          }
        },
        "apachespark": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "spark.driver.block_manager.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.block_manager.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.compilation.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.compilation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_class.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_class.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_method.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.generated_method.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.source_code.average_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.code_generator.source_code.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.job.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.job.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.stage.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.dag_scheduler.stage.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.gc.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.gc.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.execution": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.jvm": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.pool": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.executor.memory.storage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.file_cache_hits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.files_discovered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.hive_client_calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.parallel_listing_jobs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.hive_external_catalog.partitions_fetched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.jvm_cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.posted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.processing_time.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.driver.live_listener_bus.queue_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.gc_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.input_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.shuffle.io.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.storage_memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.executor.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.stage.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.stage.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.job.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.disk.spilled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.executor.cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.executor.run_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.io.records": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.io.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.jvm_gc_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.memory.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.memory.spilled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.blocks_fetched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.fetch_wait_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.disk": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.read.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.records": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.io.write.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.shuffle.write_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "spark.stage.task.result_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for apachespark metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "spark.application.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.application.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.executor.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.job.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.stage.attempt.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "spark.stage.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for apachespark resource attributes."
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:4040"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "application_names": {}
          }
        },
        "awscloudwatch": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the overall config structure for the awscloudwatchreceiver\n",
          "properties": {
            "region": {
              "type": "string",
              "default": ""
            },
            "profile": {
              "type": "string",
              "default": ""
            },
            "imds_endpoint": {
              "type": "string",
              "default": ""
            },
            "logs": {
              "description": "LogsConfig is the configuration for the logs portion of this receiver"
            }
          }
        },
        "awscontainerinsightreceiver": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for aws ecs container metrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s",
              "description": "CollectionInterval is the interval at which metrics should be collected. The default is 60 second."
            },
            "container_orchestrator": {
              "type": "string",
              "default": "eks",
              "description": "ContainerOrchestrator is the type of container orchestration service, e.g. eks or ecs. The default is eks."
            },
            "add_service_as_attribute": {
              "type": "boolean",
              "default": true,
              "description": "Whether to add the associated service name as attribute. The default is true"
            },
            "prefer_full_pod_name": {
              "type": "boolean",
              "default": false,
              "description": "The \"PodName\" attribute is set based on the name of the relevant controllers like Daemonset, Job, ReplicaSet, ReplicationController, ...\nIf it can not be set that way and PrefFullPodName is true, the \"PodName\" attribute is set to the pod's own name.\nThe default value is false"
            },
            "add_full_pod_name_metric_label": {
              "type": "boolean",
              "default": false,
              "description": "The \"FullPodName\" attribute is the pod name including suffix\nIf false FullPodName label is not added\nThe default value is false"
            }
          }
        },
        "awsecscontainermetrics": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for aws ecs container metrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "20s",
              "description": "CollectionInterval is the interval at which metrics should be collected"
            }
          }
        },
        "awsfirehose": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:4433"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "record_type": {
              "type": "string",
              "default": "cwmetrics",
              "description": "RecordType is the key used to determine which unmarshaler to use\nwhen receiving the requests."
            },
            "access_key": {
              "type": "string",
              "default": "",
              "description": "AccessKey is checked against the one received with each request.\nThis can be set when creating or updating the Firehose delivery\nstream."
            }
          }
        },
        "awsxray": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configurations for an AWS X-Ray receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:2000"
            },
            "transport": {
              "type": "string",
              "default": "udp"
            },
            "proxy_server": {
              "description": "ProxyServer defines configurations related to the local TCP proxy server."
            }
          }
        },
        "azureblob": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "connection_string": {
              "type": "string",
              "default": "",
              "description": "Azure Blob Storage connection key,\nwhich can be found in the Azure Blob Storage resource on the Azure Portal. (no default)"
            },
            "event_hub": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "",
                  "description": "Azure Event Hub endpoint triggering on the `Blob Create` event"
                }
              },
              "description": "Configurations of Azure Event Hub triggering on the `Blob Create` event"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container_name": {
                  "type": "string",
                  "default": "logs",
                  "description": "Name of the blob container with the logs (default = \"logs\")"
                }
              },
              "description": "Logs related configurations"
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container_name": {
                  "type": "string",
                  "default": "traces",
                  "description": "Name of the blob container with the traces (default = \"traces\")"
                }
              },
              "description": "Traces related configurations"
            }
          }
        },
        "azureeventhub": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "connection": {
              "type": "string",
              "default": ""
            },
            "partition": {
              "type": "string",
              "default": ""
            },
            "offset": {
              "type": "string",
              "default": ""
            },
            "storage": {},
            "format": {
              "type": "string",
              "default": ""
            }
          }
        },
        "azuremonitor": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "azuremonitor.subscription_id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeSettings provides common settings for a particular metric."
                },
                "azuremonitor.tenant_id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeSettings provides common settings for a particular metric."
                }
              },
              "description": "ResourceAttributesSettings provides settings for azuremonitorreceiver metrics."
            },
            "subscription_id": {
              "type": "string",
              "default": ""
            },
            "tenant_id": {
              "type": "string",
              "default": ""
            },
            "client_id": {
              "type": "string",
              "default": ""
            },
            "client_secret": {
              "type": "string",
              "default": ""
            },
            "resource_groups": {},
            "services": {},
            "cache_resources": {
              "type": "number"
            },
            "cache_resources_definitions": {
              "type": "number"
            },
            "maximum_number_of_metrics_in_a_call": {
              "type": "integer",
              "default": 20
            },
            "append_tags_as_attributes": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "bigip": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "https://localhost:443"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bigip.node.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.node.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.member.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.pool_member.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.availability": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.data.transmitted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.enabled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "bigip.virtual_server.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for bigip metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "bigip.node.ip_address": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool_member.ip_address": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.pool_member.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.virtual_server.destination": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "bigip.virtual_server.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for bigip resource attributes."
            }
          }
        },
        "carbon": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Carbon receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tcp_idle_timeout": {
              "type": "string",
              "default": "30s",
              "description": "TCPIdleTimeout is the timout for idle TCP connections, it is ignored\nif transport being used is UDP."
            },
            "parser": {
              "description": "Parser specifies a parser and the respective configuration to be used\nby the receiver."
            }
          }
        },
        "chrony": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for chrony metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s",
              "description": "Timeout controls the max time allowed to read data from chronyd"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ntp.frequency.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.skew": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.stratum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.correction": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.last_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.rms_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "ntp.time.root_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for chrony metrics."
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/chrony/chronyd.sock",
              "description": "Endpoint is the published address or unix socket\nthat allows clients to connect to:\nThe allowed format is:\n  unix:///path/to/chronyd/unix.sock\n  udp://localhost:323\n\nThe default value is unix:///var/run/chrony/chronyd.sock"
            }
          }
        },
        "cloudfoundry": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Collectd receiver.\n",
          "properties": {
            "rlp_gateway": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://localhost"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ca_file": {
                      "type": "string",
                      "default": ""
                    },
                    "ca_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_file": {
                      "type": "string",
                      "default": ""
                    },
                    "cert_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "key_file": {
                      "type": "string",
                      "default": ""
                    },
                    "key_pem": {
                      "type": "string",
                      "default": ""
                    },
                    "min_version": {
                      "type": "string",
                      "default": ""
                    },
                    "max_version": {
                      "type": "string",
                      "default": ""
                    },
                    "reload_interval": {
                      "type": "string"
                    },
                    "insecure": {
                      "type": "boolean",
                      "default": false
                    },
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    },
                    "server_name_override": {
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                "read_buffer_size": {
                  "type": "integer"
                },
                "write_buffer_size": {
                  "type": "integer"
                },
                "timeout": {
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "customroundtripper": {},
                "auth": {},
                "compression": {
                  "type": "string",
                  "default": ""
                },
                "max_idle_conns": {},
                "max_idle_conns_per_host": {},
                "max_conns_per_host": {},
                "idle_conn_timeout": {},
                "shard_id": {
                  "type": "string",
                  "default": "opentelemetry"
                }
              }
            },
            "uaa": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://localhost"
                },
                "tls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "insecure_skip_verify": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
                },
                "username": {
                  "type": "string",
                  "default": "admin"
                },
                "password": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "LimitedHTTPClientSettings is a subset of HTTPClientSettings, implemented as a separate type due to the library this\nconfiguration is used with not taking a preconfigured http.Client as input, but only taking these specific options"
            }
          }
        },
        "collectd": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Collectd receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8081"
            },
            "timeout": {
              "type": "string",
              "default": "30s"
            },
            "attributes_prefix": {
              "type": "string",
              "default": ""
            },
            "encoding": {
              "type": "string",
              "default": "json"
            }
          }
        },
        "couchdb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "1m0s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:5984"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "couchdb.average_request_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.database.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.database.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.file_descriptor.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.bulk_requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.responses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "couchdb.httpd.views": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for couchdb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "couchdb.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for couchdb resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "datadog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8126"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "read_timeout": {
              "type": "string",
              "default": "1m0s",
              "description": "ReadTimeout of the http server"
            }
          }
        },
        "docker_stats": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for docker_stats metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///var/run/docker.sock",
              "description": "The URL of the docker server.  Default is \"unix:///var/run/docker.sock\""
            },
            "container_labels_to_metric_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A mapping of container label names to MetricDescriptor label keys.\nThe corresponding container label value will become the DataPoint label value\nfor the mapped name.  E.g. `io.kubernetes.container.name: container_spec_name`\nwould result in a MetricDescriptor label called `container_spec_name` whose\nMetric DataPoints have the value of the `io.kubernetes.container.name` container label."
            },
            "env_vars_to_metric_labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A mapping of container environment variable names to MetricDescriptor label\nkeys.  The corresponding env var values become the DataPoint label value.\nE.g. `APP_VERSION: version` would result MetricDescriptors having a label\nkey called `version` whose DataPoint label values are the value of the\n`APP_VERSION` environment variable configured for that particular container, if\npresent."
            },
            "excluded_images": {
              "description": "A list of filters whose matching images are to be excluded.  Supports literals, globs, and regex."
            },
            "api_version": {
              "type": "number",
              "description": "Docker client API version. Default is 1.22"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.blockio.io_merged_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_queued_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_service_bytes_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_service_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_serviced_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.io_wait_time_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.blockio.sectors_recursive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.percent": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.periods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.throttled_periods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.throttling_data.throttled_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.kernelmode": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.percpu": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.system": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.usage.usermode": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.active_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.active_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.dirty": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.hierarchical_memory_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.hierarchical_memsw_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.inactive_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.inactive_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.mapped_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.percent": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgmajfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgpgin": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.pgpgout": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss_huge": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_active_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_active_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_dirty": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_inactive_anon": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_inactive_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_mapped_file": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgmajfault": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgpgin": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_pgpgout": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_rss_huge": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_unevictable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.total_writeback": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.unevictable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.writeback": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.rx_packets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.network.io.usage.tx_packets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.pids.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.pids.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for docker_stats metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.command_line": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.hostname": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.runtime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for docker_stats resource attributes."
            }
          }
        },
        "elasticsearch": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the elasticsearch receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:9200"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "elasticsearch.breaker.memory.estimated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.breaker.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.breaker.tripped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.data_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.health": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.in_flight_fetch": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.indices.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.pending_tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.published_states.differences": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.published_states.full": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.shards": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_queue": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_update.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.cluster.state_update.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.merge.docs_count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.merge.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.segments.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.shards.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.translog.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.index.translog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.total.primary_rejections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.indexing_pressure.memory.total.replica_rejections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.memory.indexing_pressure": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cluster.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.cluster.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.disk.io.read": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.disk.io.write": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.fs.disk.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.http.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.documents": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.documents.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.ingest.operations.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.open_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.get.completed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.get.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.documents.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.documents.preprocessed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.pipeline.ingest.operations.failed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.cache_evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.compilation_limit_triggered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.script.compilations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.segments.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.data_set.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.reserved.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.shards.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.tasks.finished": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.tasks.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.thread_pool.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.node.translog.uncommitted.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.15m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.1m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.load_avg.5m": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.os.memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "elasticsearch.process.memory.virtual": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.classes.loaded": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.gc.collections.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.gc.collections.elapsed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.heap.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.nonheap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.nonheap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.pool.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.memory.pool.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "jvm.threads.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for elasticsearch metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "elasticsearch.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.index.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "elasticsearch.node.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for elasticsearch resource attributes."
            },
            "nodes": {
              "description": "Nodes defines the nodes to scrape.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/7.9/cluster.html#cluster-nodes for which selectors may be used here.\nIf Nodes is empty, no nodes will be scraped."
            },
            "skip_cluster_metrics": {
              "type": "boolean",
              "default": false,
              "description": "SkipClusterMetrics indicates whether cluster level metrics from /_cluster/* endpoints should be scraped or not."
            },
            "indices": {
              "description": "Indices defines the indices to scrape.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html#index-stats-api-path-params\nfor which names are viable.\nIf Indices is empty, no indices will be scraped."
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Username is the username used when making REST calls to elasticsearch. Must be specified if Password is. Not required."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Password is the password used when making REST calls to elasticsearch. Must be specified if Username is. Not required."
            }
          }
        },
        "expvar": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for expvar metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "3s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8000/debug/vars"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "process.runtime.memstats.buck_hash_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.frees": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.gc_cpu_fraction": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.gc_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_alloc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_idle": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_objects": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_released": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.heap_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.last_pause": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.lookups": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mallocs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mcache_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mcache_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mspan_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.mspan_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.next_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.num_forced_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.num_gc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.other_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.pause_total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.stack_inuse": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.stack_sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.sys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "process.runtime.memstats.total_alloc": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for expvar metrics."
            }
          }
        },
        "filelog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "FileLogConfig defines configuration for the filelog receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "file_input"
            },
            "type": {
              "type": "string",
              "default": "file_input"
            },
            "output": {},
            "include": {},
            "exclude": {},
            "ordering_criteria": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "regex": {
                  "type": "string",
                  "default": ""
                },
                "sort_by": {}
              }
            },
            "include_file_name": {
              "type": "boolean",
              "default": true
            },
            "include_file_path": {
              "type": "boolean",
              "default": false
            },
            "include_file_name_resolved": {
              "type": "boolean",
              "default": false
            },
            "include_file_path_resolved": {
              "type": "boolean",
              "default": false
            },
            "poll_interval": {
              "type": "string",
              "default": "200ms"
            },
            "start_at": {
              "type": "string",
              "default": "end"
            },
            "fingerprint_size": {
              "type": "integer",
              "default": 1000
            },
            "max_log_size": {
              "type": "integer",
              "default": 1048576
            },
            "max_concurrent_files": {
              "type": "integer",
              "default": 1024
            },
            "max_batches": {
              "type": "integer"
            },
            "delete_after_read": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "force_flush_period": {
              "type": "string",
              "default": "500ms"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "header": {},
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "flinkmetrics": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8081"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "flink.job.checkpoint.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.checkpoint.in_progress": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.last_checkpoint.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.last_checkpoint.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.job.restart.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.class_loader.classes_loaded": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.cpu.load": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.gc.collections.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.gc.collections.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.direct.total_capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.direct.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.heap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.mapped.total_capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.mapped.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.metaspace.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.committed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.memory.nonheap.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.jvm.threads.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.memory.managed.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.memory.managed.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.operator.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.operator.watermark.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "flink.task.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for flinkmetrics metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "flink.job.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.resource.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.subtask.index": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.task.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "flink.taskmanager.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for flinkmetrics resource attributes."
            }
          }
        },
        "fluentforward": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the fluentforward receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "The address to listen on for incoming Fluent Forward events.  Should be\nof the form `<ip addr>:<port>` (TCP) or `unix://<socket_path>` (Unix\ndomain socket)."
            }
          }
        },
        "googlecloudpubsub": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "project": {
              "type": "string",
              "default": "",
              "description": "Google Cloud Project ID where the Pubsub client will connect to"
            },
            "user_agent": {
              "type": "string",
              "default": "",
              "description": "User agent that will be used by the Pubsub client to connect to the service"
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Override of the Pubsub Endpoint, leave empty for the default endpoint"
            },
            "insecure": {
              "type": "boolean",
              "default": false,
              "description": "Only has effect if Endpoint is not \"\""
            },
            "timeout": {
              "type": "string"
            },
            "subscription": {
              "type": "string",
              "default": "",
              "description": "The fully qualified resource name of the Pubsub subscription"
            },
            "encoding": {
              "type": "string",
              "default": "",
              "description": "Lock down the encoding of the payload, leave empty for attribute based detection"
            },
            "compression": {
              "type": "string",
              "default": "",
              "description": "Lock down the compression of the payload, leave empty for attribute based detection"
            },
            "client_id": {
              "type": "string",
              "default": "",
              "description": "The client id that will be used by Pubsub to make load balancing decisions"
            }
          }
        },
        "googlecloudspanner": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "top_metrics_query_max_rows": {
              "type": "integer",
              "default": 100
            },
            "backfill_enabled": {
              "type": "boolean",
              "default": false
            },
            "cardinality_total_limit": {
              "type": "integer"
            },
            "projects": {},
            "hide_topn_lockstats_rowrangestartkey": {
              "type": "boolean",
              "default": false
            },
            "truncate_text": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "haproxy": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for haproxy metrics builder.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "haproxy.bytes.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.bytes.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.clients.canceled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.bypass": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.compression.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.retries": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.connections.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.downtime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.failed_checks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.denied": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.queued": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.redispatched": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.requests.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.responses.denied": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.responses.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.server_selected.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "haproxy.sessions.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for haproxy metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "haproxy.addr": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.algo": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.iid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.pid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.proxy_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.service_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.sid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "haproxy.url": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for haproxy resource attributes."
            }
          }
        },
        "hostmetrics": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for HostMetrics receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "root_path": {
              "type": "string",
              "default": "",
              "description": "RootPath is the host's root directory (linux only)."
            }
          }
        },
        "httpcheck": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "httpcheck.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "httpcheck.error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "httpcheck.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for httpcheck metrics."
            },
            "targets": {}
          }
        },
        "iis": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for simple prometheus receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "iis.connection.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.connection.anonymous": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.connection.attempt.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.file.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.queue.age.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.queue.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.request.rejected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.thread.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "iis.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for iis metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "iis.application_pool": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "iis.site": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for iis resource attributes."
            }
          }
        },
        "influxdb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the InfluxDB receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:8086"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "jaeger": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Jaeger receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "thrift_http": {},
                "thrift_binary": {
                  "description": "ProtocolUDP is the configuration for a UDP protocol."
                },
                "thrift_compact": {
                  "description": "ProtocolUDP is the configuration for a UDP protocol."
                }
              },
              "description": "Protocols is the configuration for the supported protocols."
            },
            "remote_sampling": {
              "description": "RemoteSamplingConfig defines config key for remote sampling fetch endpoint"
            }
          }
        },
        "jmx": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "jar_path": {
              "type": "string",
              "default": "/opt/opentelemetry-java-contrib-jmx-metrics.jar",
              "description": "The path for the JMX Metric Gatherer uber JAR (/opt/opentelemetry-java-contrib-jmx-metrics.jar by default)."
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "The Service URL or host:port for the target coerced to one of form: service:jmx:rmi:///jndi/rmi://<host>:<port>/jmxrmi."
            },
            "target_system": {
              "type": "string",
              "default": "",
              "description": "The target system for the metric gatherer whose built in groovy script to run."
            },
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "The duration in between groovy script invocations and metric exports (10 seconds by default).\nWill be converted to milliseconds."
            },
            "otlp": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "0.0.0.0:0",
                  "description": "The OTLP Receiver endpoint to send metrics to (\"0.0.0.0:<random open port>\" by default)."
                },
                "timeout": {
                  "type": "string",
                  "default": "5s"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The headers to include in OTLP metric submission requests."
                }
              },
              "description": "The exporter settings for"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "The JMX username"
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "The JMX password"
            },
            "keystore_path": {
              "type": "string",
              "default": "",
              "description": "The keystore path for SSL"
            },
            "keystore_password": {
              "type": "string",
              "default": "",
              "description": "The keystore password for SSL"
            },
            "keystore_type": {
              "type": "string",
              "default": "",
              "description": "The keystore type for SSL"
            },
            "truststore_path": {
              "type": "string",
              "default": "",
              "description": "The truststore path for SSL"
            },
            "truststore_password": {
              "type": "string",
              "default": "",
              "description": "The truststore password for SSL"
            },
            "truststore_type": {
              "type": "string",
              "default": "",
              "description": "The truststore type for SSL"
            },
            "remote_profile": {
              "type": "string",
              "default": "",
              "description": "The JMX remote profile.  Should be one of:\n`\"SASL/PLAIN\"`, `\"SASL/DIGEST-MD5\"`, `\"SASL/CRAM-MD5\"`, `\"TLS SASL/PLAIN\"`, `\"TLS SASL/DIGEST-MD5\"`, or\n`\"TLS SASL/CRAM-MD5\"`, though no enforcement is applied."
            },
            "realm": {
              "type": "string",
              "default": "",
              "description": "The SASL/DIGEST-MD5 realm"
            },
            "additional_jars": {
              "description": "Array of additional JARs to be added to the the class path when launching the JMX Metric Gatherer JAR"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of resource attributes used by the Java SDK Autoconfigure to set resource attributes"
            },
            "log_level": {
              "type": "string",
              "default": "",
              "description": "Log level used by the JMX metric gatherer. Should be one of:\n`\"trace\"`, `\"debug\"`, `\"info\"`, `\"warn\"`, `\"error\"`, `\"off\"`"
            }
          }
        },
        "journald": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "JournaldConfig defines configuration for the journald receiver\n",
          "properties": {
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "k8s_cluster": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for kubernetes cluster receiver.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "Collection interval for metrics."
            },
            "node_conditions_to_report": {
              "description": "Node condition types to report. See all condition types, see\nhere: https://kubernetes.io/docs/concepts/architecture/nodes/#condition."
            },
            "allocatable_types_to_report": {
              "description": "Allocate resource types to report. See all resource types, see\nhere: https://kubernetes.io/docs/concepts/architecture/nodes/#capacity"
            },
            "metadata_exporters": {
              "description": "List of exporters to which metadata from this receiver should be forwarded to."
            },
            "distribution": {
              "type": "string",
              "default": "kubernetes",
              "description": "Whether OpenShift support should be enabled or not."
            },
            "metadata_collection_interval": {
              "type": "string",
              "default": "5m0s",
              "description": "Collection interval for metadata.\nMetadata of the particular entity in the cluster is collected when the entity changes.\nIn addition metadata of all entities is collected periodically even if no changes happen.\nSetting the duration to 0 will disable periodic collection (however will not impact\nmetadata collection on changes)."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "k8s.container.cpu_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.cpu_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ephemeralstorage_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ephemeralstorage_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.memory_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.memory_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.ready": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.restarts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.storage_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.container.storage_request": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.cronjob.active_jobs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.current_scheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.desired_scheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.misscheduled_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.daemonset.ready_nodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.deployment.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.deployment.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.current_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.desired_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.max_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.hpa.min_replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.active_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.desired_successful_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.failed_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.max_parallel_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.job.successful_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.namespace.phase": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.phase": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.status_reason": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replicaset.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replicaset.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replication_controller.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.replication_controller.desired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.resource_quota.hard_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.resource_quota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.current_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.desired_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.ready_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.statefulset.updated_pods": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.appliedclusterquota.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.appliedclusterquota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.clusterquota.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "openshift.clusterquota.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for k8s_cluster metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.image.tag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.cronjob.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.cronjob.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.daemonset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.daemonset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.deployment.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.deployment.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.hpa.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.hpa.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.job.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.job.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicaset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicaset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicationcontroller.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.replicationcontroller.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.resourcequota.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.resourcequota.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.statefulset.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.statefulset.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "opencensus.resourcetype": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "openshift.clusterquota.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "openshift.clusterquota.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for k8s_cluster resource attributes."
            }
          }
        },
        "k8s_events": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for kubernetes events receiver.\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "namespaces": {
              "description": "List of ‘namespaces’ to collect events from."
            }
          }
        },
        "k8sobjects": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "APIConfig contains options relevant to connecting to the K8s API\n",
          "properties": {
            "auth_type": {
              "type": "string",
              "default": "serviceAccount",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "objects": {}
          }
        },
        "kafka": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Kafka receiver.\n",
          "properties": {
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "Kafka protocol version"
            },
            "topic": {
              "type": "string",
              "default": "otlp_spans",
              "description": "The name of the kafka topic to consume from (default \"otlp_spans\")"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of the messages (default \"otlp_proto\")"
            },
            "group_id": {
              "type": "string",
              "default": "otel-collector",
              "description": "The consumer group that receiver will be consuming messages from (default \"otel-collector\")"
            },
            "client_id": {
              "type": "string",
              "default": "otel-collector",
              "description": "The consumer client ID that receiver will use (default \"otel-collector\")"
            },
            "initial_offset": {
              "type": "string",
              "default": "latest",
              "description": "The initial offset to use if no offset was previously committed.\nMust be `latest` or `earliest` (default \"latest\")."
            },
            "metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "full": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to maintain a full set of metadata for all topics, or just\nthe minimal set that has been necessary so far. The full set is simpler\nand usually more convenient, but can take up a substantial amount of\nmemory if you have many topics and partitions. Defaults to true."
                },
                "retry": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "max": {
                      "type": "integer",
                      "default": 3,
                      "description": "The total number of times to retry a metadata request when the\ncluster is in the middle of a leader election or at startup (default 3)."
                    },
                    "backoff": {
                      "type": "string",
                      "default": "250ms",
                      "description": "How long to wait for leader election to occur before retrying\n(default 250ms). Similar to the JVM's `retry.backoff.ms`."
                    }
                  },
                  "description": "Retry configuration for metadata.\nThis configuration is useful to avoid race conditions when broker\nis starting at the same time as collector."
                }
              },
              "description": "Metadata is the namespace for metadata management properties used by the\nClient, and shared by the Producer/Consumer."
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication defines authentication."
            },
            "autocommit": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enable": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether or not to auto-commit updated offsets back to the broker.\n(default enabled)."
                },
                "interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "How frequently to commit updated offsets. Ineffective unless\nauto-commit is enabled (default 1s)"
                }
              },
              "description": "Controls the auto-commit functionality"
            },
            "message_marking": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, the messages are marked after the pipeline execution"
                },
                "on_error": {
                  "type": "boolean",
                  "default": false,
                  "description": "If false, only the successfully processed messages are marked, it has no impact if\nAfter is set to false.\nNote: this can block the entire partition in case a message processing returns\na permanent error."
                }
              },
              "description": "Controls the way the messages are marked as consumed"
            }
          }
        },
        "kafkametrics": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config represents user settings for kafkametrics receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "brokers": {
              "description": "The list of kafka brokers (default localhost:9092)"
            },
            "protocol_version": {
              "type": "string",
              "default": "",
              "description": "ProtocolVersion Kafka protocol version"
            },
            "topic_match": {
              "type": "string",
              "default": "^[^_].*$",
              "description": "TopicMatch topics to collect metrics on"
            },
            "group_match": {
              "type": "string",
              "default": ".*",
              "description": "GroupMatch consumer groups to collect on"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "plain_text": {
                  "description": "PlainTextConfig defines plaintext authentication."
                },
                "sasl": {
                  "description": "SASLConfig defines the configuration for the SASL authentication."
                },
                "tls": {},
                "kerberos": {
                  "description": "KerberosConfig defines kereros configuration."
                }
              },
              "description": "Authentication data"
            },
            "scrapers": {
              "description": "Scrapers defines which metric data points to be captured from kafka"
            },
            "client_id": {
              "type": "string",
              "default": "otel-metrics-receiver",
              "description": "ClientID is the id associated with the consumer that reads from topics in kafka."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "kafka.brokers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.lag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.lag_sum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.members": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.consumer_group.offset_sum": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.current_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.oldest_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.replicas": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.partition.replicas_in_sync": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "kafka.topic.partitions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for kafkametrics metrics."
            }
          }
        },
        "kubeletstats": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "ClientConfig for a kubelet client for talking to a kubelet HTTP endpoint.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "auth_type": {
              "type": "string",
              "default": "tls",
              "description": "How to authenticate to the K8s API server.  This can be one of `none`\n(for no auth), `serviceAccount` (to use the standard service account\ntoken provided to the agent pod), or `kubeConfig` to use credentials\nfrom `~/.kube/config`."
            },
            "ca_file": {
              "type": "string",
              "default": ""
            },
            "ca_pem": {
              "type": "string",
              "default": ""
            },
            "cert_file": {
              "type": "string",
              "default": ""
            },
            "cert_pem": {
              "type": "string",
              "default": ""
            },
            "key_file": {
              "type": "string",
              "default": ""
            },
            "key_pem": {
              "type": "string",
              "default": ""
            },
            "min_version": {
              "type": "string",
              "default": ""
            },
            "max_version": {
              "type": "string",
              "default": ""
            },
            "reload_interval": {
              "type": "string"
            },
            "insecure_skip_verify": {
              "type": "boolean",
              "default": false,
              "description": "InsecureSkipVerify controls whether the client verifies the server's\ncertificate chain and host name."
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "extra_metadata_labels": {
              "description": "ExtraMetadataLabels contains list of extra metadata that should be taken from /pods endpoint\nand put as extra labels on metrics resource.\nNo additional metadata is fetched by default, so there are no extra calls to /pods endpoint.\nSupported values include container.id and k8s.volume.type."
            },
            "metric_groups": {
              "description": "MetricGroupsToCollect provides a list of metrics groups to collect metrics from.\n\"container\", \"pod\", \"node\" and \"volume\" are the only valid groups."
            },
            "k8s_api_config": {
              "description": "Configuration of the Kubernetes API client."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "container.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "container.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.network.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.node.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.major_page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.memory.working_set": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.network.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.pod.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.available": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.capacity": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes.free": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "k8s.volume.inodes.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for kubeletstats metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "aws.volume.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "container.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "fs.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "gce.pd.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "glusterfs.endpoints.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "glusterfs.path": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.container.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.namespace.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.persistentvolumeclaim.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.pod.uid": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.volume.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "k8s.volume.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "partition": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for kubeletstats resource attributes."
            }
          }
        },
        "loki": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the lokireceiver receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              },
              "description": "Protocols is the configuration for the supported protocols, currently gRPC and HTTP (Proto and JSON)."
            },
            "use_incoming_timestamp": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "memcached": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for memcached metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:11211"
            },
            "transport": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "memcached.bytes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.connections.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.connections.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.current_items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.evictions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.network": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.operation_hit_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "memcached.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for memcached metrics."
            }
          }
        },
        "mongodb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mongodb metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "1m0s"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodb.cache.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.collection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.cursor.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.cursor.timeout.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.data.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.database.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.document.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.extent.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.global_lock.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.health": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.access.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.index.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.acquire.wait_count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.lock.deadlock.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.io.receive": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.io.transmit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.network.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.object.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.latency.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.repl.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.operation.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.session.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.storage.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodb.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mongodb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "database": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mongodb resource attributes."
            },
            "hosts": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "replica_set": {
              "type": "string",
              "default": ""
            }
          }
        },
        "mongodbatlas": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mongodbatlas metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "3m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "public_key": {
              "type": "string",
              "default": ""
            },
            "private_key": {
              "type": "string",
              "default": ""
            },
            "granularity": {
              "type": "string",
              "default": "PT1M"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodbatlas.db.counts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.db.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.iops.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.iops.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.latency.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.space.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.space.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.utilization.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.disk.partition.utilization.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.asserts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.background_flush": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cache.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cache.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.children.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cpu.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.cursors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.document.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.operations.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.operations.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.query_executor.scanned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.query_targeting.scanned_per_returned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.db.storage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.global_lock": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.index.btree_miss_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.index.counters": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.data_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.journaling.written": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.network.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.oplog.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.oplog.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.page_faults": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.restarts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.process.tickets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.normalized.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.normalized.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.cpu.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.cpu.normalized.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.disk.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.fts.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.memory.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.memory.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.network.io.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.network.io.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.io.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.io.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.usage.average": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mongodbatlas.system.paging.usage.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mongodbatlas metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mongodb_atlas.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.db.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.disk.partition": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.org_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.port": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.process.type_name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.project.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.project.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "mongodb_atlas.user.alias": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mongodbatlas resource attributes."
            },
            "alerts": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "endpoint": {
                  "type": "string",
                  "default": ""
                },
                "secret": {
                  "type": "string",
                  "default": ""
                },
                "tls": {},
                "mode": {
                  "type": "string",
                  "default": "listen"
                },
                "projects": {
                  "description": "these parameters are only relevant in retrieval mode"
                },
                "poll_interval": {
                  "type": "string",
                  "default": "5m0s"
                },
                "page_size": {
                  "type": "integer",
                  "default": 100
                },
                "max_pages": {
                  "type": "integer",
                  "default": 10
                }
              }
            },
            "events": {
              "description": "EventsConfig is the configuration options for events collection"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "projects": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "storage": {}
          }
        },
        "mysql": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for mysql metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "username": {
              "type": "string",
              "default": "root"
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "database": {
              "type": "string",
              "default": ""
            },
            "allow_native_passwords": {
              "type": "boolean",
              "default": true
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:3306"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mysql.buffer_pool.data_pages": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.page_flushes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.pages": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.buffer_pool.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.client.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.connection.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.double_writes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.handlers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.index.io.wait.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.index.io.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.joins": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.log_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.mysqlx_connections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.mysqlx_worker_threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.opened_resources": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.page_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.prepared_statements": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.client.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.query.slow.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.replica.sql_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.replica.time_behind_source": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.row_locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.row_operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.sorts": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.statement_event.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.statement_event.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.io.wait.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.io.wait.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.read.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.read.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.write.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table.lock_wait.write.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.table_open_cache": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.threads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.tmp_resources": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "mysql.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for mysql metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mysql.instance.endpoint": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for mysql resource attributes."
            },
            "statement_events": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "digest_text_limit": {
                  "type": "integer",
                  "default": 120
                },
                "limit": {
                  "type": "integer",
                  "default": 250
                },
                "time_limit": {
                  "type": "string",
                  "default": "24h0m0s"
                }
              }
            }
          }
        },
        "nginx": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for nginx metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:80/status"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nginx.connections_accepted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.connections_current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.connections_handled": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nginx.requests": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "temp.connections_current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for nginx metrics."
            }
          }
        },
        "nsxt": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration for the NSX receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nsxt.node.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.filesystem.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.filesystem.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.memory.cache.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.network.io": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "nsxt.node.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for nsxt metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "device.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "nsxt.node.type": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for nsxt resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "opencensus": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for OpenCensus receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:55678"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tls": {},
            "max_recv_msg_size_mib": {
              "default": 0
            },
            "max_concurrent_streams": {
              "default": 0
            },
            "read_buffer_size": {
              "type": "integer",
              "default": 524288
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "keepalive": {},
            "auth": {},
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "cors_allowed_origins": {
              "description": "CorsOrigins are the allowed CORS origins for HTTP/JSON requests to grpc-gateway adapter\nfor the OpenCensus receiver. See github.com/rs/cors\nAn empty list means that CORS is not enabled at all. A wildcard (*) can be\nused to match any origin or one or more characters of an origin."
            }
          }
        },
        "oracledb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for oracledb metrics builder.\n",
          "properties": {
            "datasource": {
              "type": "string",
              "default": ""
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "service": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "oracledb.consistent_gets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.cpu_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.db_block_gets": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.dml_locks.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.dml_locks.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_locks.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_locks.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_resources.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.enqueue_resources.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.exchange_deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.executions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.hard_parses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.logical_reads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.parse_calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.pga_memory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.physical_reads": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.processes.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.processes.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.sessions.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.sessions.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.tablespace_size.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.tablespace_size.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.transactions.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.transactions.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.user_commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "oracledb.user_rollbacks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for oracledb metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "oracledb.instance.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for oracledb resource attributes."
            }
          }
        },
        "otlp": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              }
            }
          }
        },
        "otlpjsonfile": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration of a file input operator\n",
          "properties": {
            "include": {},
            "exclude": {},
            "ordering_criteria": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "regex": {
                  "type": "string",
                  "default": ""
                },
                "sort_by": {}
              }
            },
            "include_file_name": {
              "type": "boolean",
              "default": true
            },
            "include_file_path": {
              "type": "boolean",
              "default": false
            },
            "include_file_name_resolved": {
              "type": "boolean",
              "default": false
            },
            "include_file_path_resolved": {
              "type": "boolean",
              "default": false
            },
            "poll_interval": {
              "type": "string",
              "default": "200ms"
            },
            "start_at": {
              "type": "string",
              "default": "end"
            },
            "fingerprint_size": {
              "type": "integer",
              "default": 1000
            },
            "max_log_size": {
              "type": "integer",
              "default": 1048576
            },
            "max_concurrent_files": {
              "type": "integer",
              "default": 1024
            },
            "max_batches": {
              "type": "integer"
            },
            "delete_after_read": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "force_flush_period": {
              "type": "string",
              "default": "500ms"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "header": {},
            "storage": {}
          }
        },
        "podman_stats": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "unix:///run/podman/podman.sock",
              "description": "The URL of the podman server.  Default is \"unix:///run/podman/podman.sock\""
            },
            "api_version": {
              "type": "string",
              "default": "3.3.1"
            },
            "ssh_key": {
              "type": "string",
              "default": ""
            },
            "ssh_passphrase": {
              "type": "string",
              "default": ""
            }
          }
        },
        "postgresql": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for postgresql metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "databases": {},
            "endpoint": {
              "type": "string",
              "default": "localhost:5432"
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": true
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "postgresql.backends": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.buffers.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.buffers.writes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.checkpoint.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.bgwriter.maxwritten": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.blocks_read": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.commits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.connection.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.database.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.database.locks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.db_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.deadlocks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.index.scans": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.index.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.operations": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.replication.data_delay": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.rollbacks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.rows": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.sequential_scans": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.table.vacuum.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.temp_files": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.wal.age": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "postgresql.wal.lag": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for postgresql metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "postgresql.database.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "postgresql.index.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "postgresql.table.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for postgresql resource attributes."
            }
          }
        },
        "prometheus": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Prometheus receiver.\n",
          "properties": {
            "trim_metric_suffixes": {
              "type": "boolean",
              "default": false
            },
            "use_start_time_metric": {
              "type": "boolean",
              "default": false,
              "description": "UseStartTimeMetric enables retrieving the start time of all counter metrics\nfrom the process_start_time_seconds metric. This is only correct if all counters on that endpoint\nstarted after the process start time, and the process is the only actor exporting the metric after\nthe process started. It should not be used in \"exporters\" which export counters that may have\nstarted before the process itself. Use only if you know what you are doing, as this may result\nin incorrect rate calculations."
            },
            "start_time_metric_regex": {
              "type": "string",
              "default": ""
            },
            "report_extra_scrape_metrics": {
              "type": "boolean",
              "default": false,
              "description": "ReportExtraScrapeMetrics - enables reporting of additional metrics for Prometheus client like scrape_body_size_bytes"
            },
            "target_allocator": {},
            "config": {
              "description": "ConfigPlaceholder is just an entry to make the configuration pass a check\nthat requires that all keys present in the config actually exist on the\nstructure, ie.: it will error if an unknown key is present."
            }
          }
        },
        "prometheus_simple": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for simple prometheus receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:9090"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "collection_interval": {
              "type": "string",
              "default": "10s",
              "description": "CollectionInterval is the interval at which metrics should be collected"
            },
            "metrics_path": {
              "type": "string",
              "default": "/metrics",
              "description": "MetricsPath the path to the metrics endpoint."
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Params the parameters to the metrics endpoint."
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels static labels"
            },
            "use_service_account": {
              "type": "boolean",
              "default": false,
              "description": "Whether or not to use pod service account to authenticate."
            }
          }
        },
        "pulsar": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "pulsar://localhost:6650",
              "description": "Configure the service URL for the Pulsar service."
            },
            "topic": {
              "type": "string",
              "default": "",
              "description": "The topic of pulsar to consume logs,metrics,traces. (default = \"otlp_traces\" for traces,\n\"otlp_metrics\" for metrics, \"otlp_logs\" for logs)"
            },
            "subscription": {
              "type": "string",
              "default": "otlp_subscription",
              "description": "The Subscription that receiver will be consuming messages from (default \"otlp_subscription\")"
            },
            "encoding": {
              "type": "string",
              "default": "otlp_proto",
              "description": "Encoding of the messages (default \"otlp_proto\")"
            },
            "consumer_name": {
              "type": "string",
              "default": "",
              "description": "Name specifies the consumer name."
            },
            "tls_trust_certs_file_path": {
              "type": "string",
              "default": "",
              "description": "Set the path to the trusted TLS certificate file"
            },
            "tls_allow_insecure_connection": {
              "type": "boolean",
              "default": false,
              "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)"
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tls": {},
                "token": {},
                "athenz": {},
                "oauth2": {}
              }
            }
          }
        },
        "purefa": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config relating to Array Metric Scraper.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "settings": {
              "description": "Settings contains settings for the individual scrapers"
            },
            "array": {
              "description": "Array represents the list of arrays to query"
            },
            "hosts": {
              "description": "Hosts represents the list of hosts to query"
            },
            "directories": {
              "description": "Directories represents the list of directories to query"
            },
            "pods": {
              "description": "Pods represents the list of pods to query"
            },
            "volumes": {
              "description": "Volumes represents the list of volumes to query"
            },
            "env": {
              "type": "string",
              "default": "",
              "description": "Env represents the respective environment value valid to scrape"
            },
            "fa_array_name": {
              "type": "string",
              "default": "foobar.example.com",
              "description": "ArrayName represents the display name that is appended to the received metrics, as the `host` label if not provided by OpenMetrics output, and to the `fa_array_name` label always."
            }
          }
        },
        "purefb": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config relating to Array Metric Scraper.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "timeout": {
              "type": "string"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "settings": {
              "description": "Settings contains settings for the individual scrapers"
            },
            "arrays": {
              "description": "Arrays represents the list of arrays to query"
            },
            "clients": {
              "description": "Clients represents the list of clients metrics"
            },
            "usage": {
              "description": "Usage represents the list of usage to query"
            },
            "env": {
              "type": "string",
              "default": "",
              "description": "Env represents the respective environment value valid to scrape"
            }
          }
        },
        "rabbitmq": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:15672"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "rabbitmq.consumer.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.acknowledged": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.delivered": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.dropped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "rabbitmq.message.published": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for rabbitmq metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "rabbitmq.node.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "rabbitmq.queue.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "rabbitmq.vhost.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for rabbitmq resource attributes."
            }
          }
        },
        "receiver_creator": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for receiver_creator.\n",
          "properties": {
            "watch_observers": {
              "description": "WatchObservers are the extensions to listen to endpoints from."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ResourceAttributes is a map of default resource attributes to add to each resource\nobject received by this receiver from dynamically created receivers."
            }
          }
        },
        "redis": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for redis metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "transport": {
              "type": "string",
              "default": "tcp"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "Optional username. Use the specified Username to authenticate the current connection\nwith one of the connections defined in the ACL list when connecting\nto a Redis 6.0 instance, or greater, that is using the Redis ACL system."
            },
            "password": {
              "type": "string",
              "default": "",
              "description": "Optional password. Must match the password specified in the\nrequirepass server configuration option, or the user's password when connecting\nto a Redis 6.0 instance, or greater, that is using the Redis ACL system."
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "redis.clients.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.connected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.max_input_buffer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.clients.max_output_buffer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cmd.calls": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cmd.usec": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.commands": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.commands.processed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.connections.received": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.connections.rejected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.cpu.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.avg_ttl": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.expires": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.db.keys": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keys.evicted": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keys.expired": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keyspace.hits": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.keyspace.misses": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.latest_fork": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.maxmemory": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.fragmentation_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.lua": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.rss": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.net.input": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.net.output": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.rdb.changes_since_last_save": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.replication.backlog_first_byte_offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.replication.offset": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.role": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.slaves.connected": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "redis.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for redis metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "redis.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for redis resource attributes."
            }
          }
        },
        "riak": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver agent.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8098"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "read_buffer_size": {
              "type": "integer"
            },
            "write_buffer_size": {
              "type": "integer"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "customroundtripper": {},
            "auth": {},
            "compression": {
              "type": "string",
              "default": ""
            },
            "max_idle_conns": {},
            "max_idle_conns_per_host": {},
            "max_conns_per_host": {},
            "idle_conn_timeout": {},
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "metrics": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "riak.memory.limit": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.operation.time.mean": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.node.read_repair.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.vnode.index.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    },
                    "riak.vnode.operation.count": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "MetricConfig provides common config for a particular metric."
                    }
                  },
                  "description": "MetricsConfig provides config for riak metrics."
                },
                "resource_attributes": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "riak.node.name": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                    }
                  },
                  "description": "ResourceAttributesConfig provides config for riak resource attributes."
                }
              },
              "description": "MetricsBuilderConfig is a configuration for riak metrics builder."
            }
          }
        },
        "saphana": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for saphana metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "endpoint": {
              "type": "string",
              "default": "localhost:33015"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": true
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "saphana.alert.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.backup.latest": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.column.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.component.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.cpu.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.disk.size.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.host.memory.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.host.swap.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.code_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.shared.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.instance.memory.used.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.expiration.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.license.peak": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.network.request.finished.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.average_time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.backlog.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.replication.backlog.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.row_store.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.memory.used.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.memory.used.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.record.compressed.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.schema.record.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.code_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.compactors.allocated": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.compactors.freeable": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.effective_limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.heap.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.shared.current": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.stack_size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.service.thread.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.transaction.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.transaction.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.uptime": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "saphana.volume.operation.time": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for saphana metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "db.system": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "saphana.host": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for saphana resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "sapm": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for SAPM receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":7276"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            }
          }
        },
        "signalfx": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the SignalFx receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":9943"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            }
          }
        },
        "skywalking": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for skywalking receiver.\n",
          "properties": {
            "protocols": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "grpc": {},
                "http": {}
              },
              "description": "Protocols is the configuration for the supported protocols."
            }
          }
        },
        "snmp": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration for the various elements of the receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string"
            },
            "timeout": {
              "type": "string",
              "default": "5s"
            },
            "endpoint": {
              "type": "string",
              "default": "udp://localhost:161",
              "description": "Endpoint is the SNMP target to request data from. Must be formatted as [udp|tcp|][4|6|]://{host}:{port}.\nDefault: udp://localhost:161\nIf no scheme is given, udp4 is assumed.\nIf no port is given, 161 is assumed."
            },
            "version": {
              "type": "string",
              "default": "v2c",
              "description": "Version is the version of SNMP to use for this connection.\nValid options: v1, v2c, v3.\nDefault: v2c"
            },
            "community": {
              "type": "string",
              "default": "public",
              "description": "Community is the SNMP community string to use.\nOnly valid for versions \"v1\" and \"v2c\"\nDefault: public"
            },
            "user": {
              "type": "string",
              "default": "",
              "description": "User is the SNMP User for this connection.\nOnly valid for version “v3”"
            },
            "security_level": {
              "type": "string",
              "default": "no_auth_no_priv",
              "description": "SecurityLevel is the security level to use for this SNMP connection.\nOnly valid for version “v3”\nValid options: “no_auth_no_priv”, “auth_no_priv”, “auth_priv”\nDefault: \"no_auth_no_priv\""
            },
            "auth_type": {
              "type": "string",
              "default": "MD5",
              "description": "AuthType is the type of authentication protocol to use for this SNMP connection.\nOnly valid for version “v3” and if “no_auth_no_priv” is not selected for SecurityLevel\nValid options: “md5”, “sha”, “sha224”, “sha256”, “sha384”, “sha512”\nDefault: \"md5\""
            },
            "auth_password": {
              "type": "string",
              "default": "",
              "description": "AuthPassword is the authentication password used for this SNMP connection.\nOnly valid for version \"v3\" and if \"no_auth_no_priv\" is not selected for SecurityLevel"
            },
            "privacy_type": {
              "type": "string",
              "default": "DES",
              "description": "PrivacyType is the type of privacy protocol to use for this SNMP connection.\nOnly valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel\nValid options: “des”, “aes”, “aes192”, “aes256”, “aes192c”, “aes256c”\nDefault: \"des\""
            },
            "privacy_password": {
              "type": "string",
              "default": "",
              "description": "PrivacyPassword is the authentication password used for this SNMP connection.\nOnly valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel"
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "ResourceAttributes defines what resource attributes will be used for this receiver and is composed\nof resource attribute names along with their resource attribute configurations"
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Attributes defines what attributes will be used on metrics for this receiver and is composed of\nattribute names along with their attribute configurations"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Metrics defines what SNMP metrics will be collected for this receiver and is composed of metric\nnames along with their metric configurations"
            }
          }
        },
        "snowflake": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for snowflake metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "30m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "snowflake.billing.cloud_service.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.total_credit.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.virtual_warehouse.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.cloud_service.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.total_credit.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.billing.warehouse.virtual_warehouse.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.database.bytes_scanned.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.database.query.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.logins.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.pipe.credits_used.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.blocked": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_deleted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_spilled.local.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_spilled.remote.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.bytes_written.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.compilation_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.data_scanned_cache.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.executed": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.execution_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.partitions_scanned.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.queued_overload": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.query.queued_provision": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_overload_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_provisioning_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.queued_repair_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_deleted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_inserted.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_produced.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_unloaded.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.rows_updated.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.session_id.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.failsafe_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.stage_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.storage.storage_bytes.total": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "snowflake.total_elapsed_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for snowflake metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "snowflake.account.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for snowflake resource attributes."
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "account": {
              "type": "string",
              "default": ""
            },
            "schema": {
              "type": "string",
              "default": "ACCOUNT_USAGE"
            },
            "warehouse": {
              "type": "string",
              "default": ""
            },
            "database": {
              "type": "string",
              "default": "SNOWFLAKE"
            },
            "role": {
              "type": "string",
              "default": "ACCOUNTADMIN"
            }
          }
        },
        "solace": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Solace receiver.\n",
          "properties": {
            "broker": {
              "description": "The list of solace brokers (default localhost:5671)"
            },
            "queue": {
              "type": "string",
              "default": "",
              "description": "The name of the solace queue to consume from, it is required parameter"
            },
            "max_unacknowledged": {
              "default": 1000,
              "description": "The maximum number of unacknowledged messages the Solace broker can transmit, to configure AMQP Link"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sasl_plain": {
                  "description": "SaslPlainTextConfig defines SASL PLAIN authentication."
                },
                "sasl_xauth2": {
                  "description": "SaslXAuth2Config defines the configuration for the SASL XAUTH2 authentication."
                },
                "sasl_external": {
                  "description": "SaslExternalConfig defines the configuration for the SASL External used in conjunction with TLS client authentication."
                }
              },
              "description": "Authentication defines authentication strategies."
            },
            "flow_control": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "delayed_retry": {
                  "description": "FlowControlDelayedRetry represents the strategy of waiting for a defined amount of time (in time.Duration) and attempt redelivery"
                }
              },
              "description": "FlowControl defines the configuration for what to do in backpressure scenarios, e.g. memorylimiter errors"
            }
          }
        },
        "splunk_hec": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Splunk HEC receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ":8088"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "access_token_passthrough": {
              "type": "boolean",
              "default": false,
              "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request."
            },
            "raw_path": {
              "type": "string",
              "default": "/services/collector/raw",
              "description": "RawPath for raw data collection, default is '/services/collector/raw'"
            },
            "splitting": {
              "type": "string",
              "default": "line",
              "description": "Splitting defines the splitting strategy used by the receiver when ingesting raw events. Can be set to \"line\" or \"none\". Default is \"line\"."
            },
            "health_path": {
              "type": "string",
              "default": "/services/collector/health",
              "description": "HealthPath for health API, default is '/services/collector/health'"
            },
            "hec_metadata_to_otel_attrs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source": {
                  "type": "string",
                  "default": "com.splunk.source",
                  "description": "Source indicates the mapping of the source field to a specific unified model attribute."
                },
                "sourcetype": {
                  "type": "string",
                  "default": "com.splunk.sourcetype",
                  "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute."
                },
                "index": {
                  "type": "string",
                  "default": "com.splunk.index",
                  "description": "Index indicates the mapping of the index field to a specific unified model attribute."
                },
                "host": {
                  "type": "string",
                  "default": "host.name",
                  "description": "Host indicates the mapping of the host field to a specific unified model attribute."
                }
              },
              "description": "HecToOtelAttrs creates a mapping from HEC metadata to attributes."
            }
          }
        },
        "sqlquery": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "driver": {
              "type": "string",
              "default": ""
            },
            "datasource": {
              "type": "string",
              "default": ""
            },
            "queries": {},
            "storage": {}
          }
        },
        "sqlserver": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for a sqlserver receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sqlserver.batch.request.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.batch.sql_compilation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.batch.sql_recompilation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.lock.wait.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.lock.wait_time.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.buffer_cache.hit_ratio": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.checkpoint.flush.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.lazy_write.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.life_expectancy": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.operation.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.page.split.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction.write.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.data.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.flush.wait.rate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.growth.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.shrink.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.transaction_log.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sqlserver.user.connection.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for sqlserver metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sqlserver.computer.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "sqlserver.database.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "sqlserver.instance.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for sqlserver resource attributes."
            },
            "instance_name": {
              "type": "string",
              "default": ""
            },
            "computer_name": {
              "type": "string",
              "default": ""
            }
          }
        },
        "sshcheck": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for sshcheck metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": "",
              "description": "Endpoint is always required"
            },
            "username": {
              "type": "string",
              "default": "",
              "description": "authentication requires a Username and either a Password or KeyFile"
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "key_file": {
              "type": "string",
              "default": ""
            },
            "known_hosts": {
              "type": "string",
              "default": "",
              "description": "file path to the known_hosts"
            },
            "ignore_host_key": {
              "type": "boolean",
              "default": false,
              "description": "IgnoreHostKey provides an insecure path to quickstarts and testing"
            },
            "check_sftp": {
              "type": "boolean",
              "default": false
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sshcheck.duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_duration": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_error": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.sftp_status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "sshcheck.status": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for sshcheck metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ssh.endpoint": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for sshcheck resource attributes."
            }
          }
        },
        "statsd": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for StatsD receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:8125"
            },
            "transport": {
              "type": "string",
              "default": "udp"
            },
            "aggregation_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "enable_metric_type": {
              "type": "boolean",
              "default": false
            },
            "is_monotonic_counter": {
              "type": "boolean",
              "default": false
            },
            "timer_histogram_mapping": {}
          }
        },
        "syslog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "SysLogConfig defines configuration for the syslog receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "syslog_input"
            },
            "type": {
              "type": "string",
              "default": "syslog_input"
            },
            "output": {},
            "protocol": {
              "type": "string",
              "default": ""
            },
            "location": {
              "type": "string",
              "default": ""
            },
            "enable_octet_counting": {
              "type": "boolean",
              "default": false
            },
            "non_transparent_framing_trailer": {},
            "tcp": {
              "description": "BaseConfig is the detailed configuration of a tcp input operator."
            },
            "udp": {
              "description": "BaseConfig is the details configuration of a udp input operator."
            },
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "default": "1s",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "tcplog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "TCPLogConfig defines configuration for the tcp receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "tcp_input"
            },
            "type": {
              "type": "string",
              "default": "tcp_input"
            },
            "output": {},
            "max_log_size": {
              "type": "integer"
            },
            "listen_address": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "add_attributes": {
              "type": "boolean",
              "default": false
            },
            "one_log_per_packet": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "multilinebuilder": {},
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "udplog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "UDPLogConfig defines configuration for the udp receiver\n",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "resource": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "default": "udp_input"
            },
            "type": {
              "type": "string",
              "default": "udp_input"
            },
            "output": {},
            "listen_address": {
              "type": "string",
              "default": ""
            },
            "one_log_per_packet": {
              "type": "boolean",
              "default": false
            },
            "add_attributes": {
              "type": "boolean",
              "default": false
            },
            "encoding": {
              "type": "string",
              "default": "utf-8"
            },
            "multiline": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "line_start_pattern": {
                  "type": "string",
                  "default": ""
                },
                "line_end_pattern": {
                  "type": "string",
                  "default": ".^"
                }
              },
              "description": "MultilineConfig is the configuration of a multiline helper"
            },
            "preserve_leading_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "preserve_trailing_whitespaces": {
              "type": "boolean",
              "default": false
            },
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "vcenter": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config is the configuration of the receiver\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "2m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ca_file": {
                  "type": "string",
                  "default": ""
                },
                "ca_pem": {
                  "type": "string",
                  "default": ""
                },
                "cert_file": {
                  "type": "string",
                  "default": ""
                },
                "cert_pem": {
                  "type": "string",
                  "default": ""
                },
                "key_file": {
                  "type": "string",
                  "default": ""
                },
                "key_pem": {
                  "type": "string",
                  "default": ""
                },
                "min_version": {
                  "type": "string",
                  "default": ""
                },
                "max_version": {
                  "type": "string",
                  "default": ""
                },
                "reload_interval": {
                  "type": "string"
                },
                "insecure": {
                  "type": "boolean",
                  "default": false
                },
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false
                },
                "server_name_override": {
                  "type": "string",
                  "default": ""
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vcenter.cluster.cpu.effective": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.cpu.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.host.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.effective": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.memory.used": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.cluster.vm.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.datastore.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.datastore.disk.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.disk.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.memory.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.packet.errors": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.host.network.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.cpu.shares": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.memory.shares": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.resource_pool.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.cpu.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.cpu.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.disk.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.ballooned": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.swapped": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.swapped_ssd": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.memory.utilization": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.throughput": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "vcenter.vm.network.usage": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for vcenter metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vcenter.cluster.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.datastore.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.host.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.resource_pool.inventory_path": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.resource_pool.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.vm.id": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "vcenter.vm.name": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for vcenter resource attributes."
            },
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "username": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          }
        },
        "wavefront": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Wavefront receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "localhost:2003"
            },
            "tcp_idle_timeout": {
              "type": "string",
              "default": "30s",
              "description": "TCPIdleTimeout is the timout for idle TCP connections."
            },
            "extract_collectd_tags": {
              "type": "boolean",
              "default": false,
              "description": "ExtractCollectdTags instructs the Wavefront receiver to attempt to extract\ntags in the CollectD format from the metric name. The default is false."
            }
          }
        },
        "webhookevent": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Generic Webhook receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": ""
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "read_timeout": {
              "type": "string",
              "default": "500ms"
            },
            "write_timeout": {
              "type": "string",
              "default": "500ms"
            },
            "path": {
              "type": "string",
              "default": "/events"
            },
            "health_path": {
              "type": "string",
              "default": "/health_check"
            },
            "required_header": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "key": {
                  "type": "string",
                  "default": ""
                },
                "value": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          }
        },
        "windowseventlog": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "WindowsLogConfig defines configuration for the windowseventlog receiver\n",
          "properties": {
            "operators": {
              "description": "Config is the configuration of an operator"
            },
            "storage": {},
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream\nconsumer. Default is false."
                },
                "initial_interval": {
                  "type": "string",
                  "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second."
                },
                "max_interval": {
                  "type": "string",
                  "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between\nconsecutive retries will always be `MaxInterval`. Default value is 30 seconds."
                },
                "max_elapsed_time": {
                  "type": "string",
                  "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to\na downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.\nDefault value is 5 minutes."
                }
              },
              "description": "Config defines configuration for retrying batches in case of receiving a retryable error from a downstream\nconsumer. If the retryable error doesn't provide a delay, exponential backoff is applied."
            }
          }
        },
        "windowsperfcounters": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for WindowsPerfCounters receiver.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "1m0s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "perfcounters": {
              "description": "ObjectConfig defines configuration for a perf counter object."
            }
          }
        },
        "zipkin": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for Zipkin receiver.\n",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "0.0.0.0:9411"
            },
            "tls": {},
            "cors": {},
            "auth": {},
            "max_request_body_size": {
              "type": "integer"
            },
            "include_metadata": {
              "type": "boolean",
              "default": false
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parse_string_tags": {
              "type": "boolean",
              "default": false,
              "description": "If enabled the zipkin receiver will attempt to parse string tags/binary annotations into int/bool/float.\nDisabled by default"
            }
          }
        },
        "zookeeper": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "MetricsBuilderConfig is a configuration for zookeeper metrics builder.\n",
          "properties": {
            "collection_interval": {
              "type": "string",
              "default": "10s"
            },
            "initial_delay": {
              "type": "string",
              "default": "1s"
            },
            "timeout": {
              "type": "string",
              "default": "10s"
            },
            "endpoint": {
              "type": "string",
              "default": ":2181"
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "zookeeper.connection.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.data_tree.ephemeral_node.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.data_tree.size": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.file_descriptor.limit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.file_descriptor.open": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.follower.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.fsync.exceeded_threshold.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.avg": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.max": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.latency.min": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.packet.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.request.active": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.ruok": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.sync.pending": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.watch.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                },
                "zookeeper.znode.count": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "MetricConfig provides common config for a particular metric."
                }
              },
              "description": "MetricsConfig provides config for zookeeper metrics."
            },
            "resource_attributes": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "server.state": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                },
                "zk.version": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "description": "ResourceAttributeConfig provides common config for a particular resource attribute."
                }
              },
              "description": "ResourceAttributesConfig provides config for zookeeper resource attributes."
            }
          }
        }
      }
    },
    "service": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pipelines": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "patternProperties": {
            "^logs(/[^/]+)*$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "^metrics(/[^/]+)*$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "^traces(/[^/]+)*$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "receivers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exporters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "telemetry": {
          "description":"Telemetry for the collector itself can be configured.\n",
          "type": "object",
          "properties": {
            "logs": {
              "description":"Allows configuration of the logs generated by the collector.\n",
              "type": "object",
              "properties": {
                "level": { "type": "string" },
                "development": { "type": "boolean" },
                "encoding": { "type": "string" },
                "disable_caller": { "type": "boolean" },
                "disable_stacktrace": { "type": "boolean" },
                "sampling": {
                  "type": "object",
                  "properties": {
                    "initial": { "type": "integer" },
                    "thereafter": { "type": "integer" }
                  }
                },
                "output_paths": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "error_output_paths": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "initial_fields": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "metrics": {
              "description":"Allows configuration of the metrics generated by the collector.",
              "type": "object",
              "properties": {
                "level": {
									"description": "Level is the level of telemetry metrics, the possible values are: none, basic, normal, detailed.",
									"type": "string"
								},
                "address": {
									"description": "Address is the [address]:port that metrics exposition should be bound to.",
									"type": "string"
								},
                "readers": {
									"description": "Readers allow configuration of metric readers to emit metrics to any number of supported backends.",
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            },
            "traces": {
              "description":"Traces exposes the common Telemetry configuration for collector's internal spans.",
              "type": "object",
              "properties": {
                "propagators": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "processors": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            },
            "resource": {
              "description":"Resource specifies user-defined attributes to include with all emitted telemetry.",
              "type": "object",
              "additionalProperties": { "type": ["string", "null"] }
            }
          }
        }
      }
    },
    "connectors": {
      "type": "object",
      "description": "A connector is both an exporter and receiver.",
      "additionalProperties": false,
      "patternProperties":{
        "^datadog(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines configuration for the Datadog exporter.\n",
          "properties": {
            "timeout": {
              "type": "string",
              "default": "15s"
            },
            "sending_queue": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "num_consumers": {
                  "type": "integer",
                  "default": 10
                },
                "queue_size": {
                  "type": "integer",
                  "default": 1000
                },
                "storage": {}
              }
            },
            "retry_on_failure": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "initial_interval": {
                  "type": "string",
                  "default": "5s"
                },
                "randomization_factor": {
                  "type": "number"
                },
                "multiplier": {
                  "type": "number"
                },
                "max_interval": {
                  "type": "string",
                  "default": "30s"
                },
                "max_elapsed_time": {
                  "type": "string",
                  "default": "5m0s"
                }
              }
            },
            "tls": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "insecure_skip_verify": {
                  "type": "boolean",
                  "default": false,
                  "description": "InsecureSkipVerify controls whether a client verifies the server's\ncertificate chain and host name."
                }
              },
              "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
            },
            "hostname": {
              "type": "string",
              "default": "",
              "description": "Hostname is the host name for unified service tagging.\nIf unset, it is determined automatically."
            },
            "api": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "key": {
                  "type": "string",
                  "default": "",
                  "description": "Key is the Datadog API key to associate your Agent's data with your organization.\nCreate a new API key here: https://app.datadoghq.com/account/settings"
                },
                "site": {
                  "type": "string",
                  "default": "datadoghq.com",
                  "description": "Site is the site of the Datadog intake to send data to.\nThe default value is \"datadoghq.com\"."
                },
                "fail_on_invalid_key": {
                  "type": "boolean",
                  "default": false,
                  "description": "FailOnInvalidKey states whether to exit at startup on invalid API key.\nThe default value is false."
                }
              },
              "description": "API defines the Datadog API configuration."
            },
            "metrics": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "delta_ttl": {
                  "type": "integer",
                  "default": 3600,
                  "description": "DeltaTTL defines the time that previous points of a cumulative monotonic\nmetric are kept in memory to calculate deltas"
                },
                "endpoint": {
                  "type": "string",
                  "default": "https://api.datadoghq.com"
                },
                "resource_attributes_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "ResourceAttributesAsTags, if set to true, will use the exporterhelper feature to transform all\nresource attributes into metric labels, which are then converted into tags"
                },
                "instrumentation_scope_metadata_as_tags": {
                  "type": "boolean",
                  "default": false,
                  "description": "InstrumentationScopeMetadataAsTags, if set to true, adds the name and version of the\ninstrumentation scope that created a metric to the metric tags"
                },
                "histograms": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "distributions",
                      "description": "Mode for exporting histograms. Valid values are 'distributions', 'counters' or 'nobuckets'.\n - 'distributions' sends histograms as Datadog distributions (recommended).\n - 'counters' sends histograms as Datadog counts, one metric per bucket.\n - 'nobuckets' sends no bucket histogram metrics. Aggregation metrics will still be sent\n   if `send_aggregation_metrics` is enabled.\n\nThe current default is 'distributions'."
                    },
                    "send_count_sum_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendCountSum states if the export should send .sum and .count metrics for histograms.\nThe default is false.\nDeprecated: [v0.75.0] Use `send_aggregation_metrics` (HistogramConfig.SendAggregations) instead."
                    },
                    "send_aggregation_metrics": {
                      "type": "boolean",
                      "default": false,
                      "description": "SendAggregations states if the exporter should send .sum, .count, .min and .max metrics for histograms.\nThe default is false."
                    }
                  },
                  "description": "HistConfig defines the export of OTLP Histograms."
                },
                "sums": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cumulative_monotonic_mode": {
                      "type": "string",
                      "default": "to_delta",
                      "description": "CumulativeMonotonicMode is the mode for exporting OTLP Cumulative Monotonic Sums.\nValid values are 'to_delta' or 'raw_value'.\n - 'to_delta' calculates delta for cumulative monotonic sums and sends it as a Datadog count.\n - 'raw_value' sends the raw value of cumulative monotonic sums as Datadog gauges.\n\nThe default is 'to_delta'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=sum#mapping for details and examples."
                    },
                    "initial_cumulative_monotonic_value": {
                      "type": "string",
                      "default": "auto",
                      "description": "InitialCumulativeMonotonicMode defines the behavior of the exporter when receiving the first value\nof a cumulative monotonic sum."
                    }
                  },
                  "description": "SumConfig defines the export of OTLP Sums."
                },
                "summaries": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "mode": {
                      "type": "string",
                      "default": "gauges",
                      "description": "Mode is the the mode for exporting OTLP Summaries.\nValid values are 'noquantiles' or 'gauges'.\n - 'noquantiles' sends no `.quantile` metrics. `.sum` and `.count` metrics will still be sent.\n - 'gauges' sends `.quantile` metrics as gauges tagged by the quantile.\n\nThe default is 'gauges'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=summary#mapping for details and examples."
                    }
                  },
                  "description": "SummaryConfig defines the export for OTLP Summaries."
                }
              },
              "description": "Metrics defines the Metrics exporter specific configuration"
            },
            "traces": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://trace.agent.datadoghq.com"
                },
                "ignore_resources": {
                  "description": "ignored resources\nA blacklist of regular expressions can be provided to disable certain traces based on their resource name\nall entries must be surrounded by double quotes and separated by commas.\nignore_resources: [\"(GET|POST) /healthcheck\"]"
                },
                "span_name_remappings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "SpanNameRemappings is the map of datadog span names and preferred name to map to. This can be used to\nautomatically map Datadog Span Operation Names to an updated value. All entries should be key/value pairs.\nspan_name_remappings:\n  io.opentelemetry.javaagent.spring.client: spring.client\n  instrumentation:express.server: express\n  go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client"
                },
                "span_name_as_resource_name": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true the OpenTelemetry span name will used in the Datadog resource name.\nIf set to false the resource name will be filled with the instrumentation library name + span kind.\nThe default value is `false`."
                },
                "compute_stats_by_span_kind": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables an additional stats computation check on spans to see they have an eligible `span.kind` (server, consumer, client, producer).\nIf enabled, a span with an eligible `span.kind` will have stats computed. If disabled, only top-level and measured spans will have stats computed.\nNOTE: For stats computed from OTel traces, only top-level spans are considered when this option is off."
                },
                "peer_service_aggregation": {
                  "type": "boolean",
                  "default": false,
                  "description": "If set to true, enables `peer.service` aggregation in the exporter. If disabled, aggregated trace stats will not include `peer.service` as a dimension.\nFor the best experience with `peer.service`, it is recommended to also enable `compute_stats_by_span_kind`.\nIf enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first.\nIf the overhead remains high, it will be due to a high cardinality of `peer.service` values from the traces. You may need to check your instrumentation."
                }
              },
              "description": "Traces defines the Traces exporter specific configuration"
            },
            "logs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "endpoint": {
                  "type": "string",
                  "default": "https://http-intake.logs.datadoghq.com"
                },
                "dump_payloads": {
                  "type": "boolean",
                  "default": false,
                  "description": "DumpPayloads report whether payloads should be dumped when logging level is debug."
                }
              },
              "description": "Logs defines the Logs exporter specific configuration"
            },
            "host_metadata": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Enabled enables the host metadata functionality."
                },
                "hostname_source": {
                  "type": "string",
                  "default": "config_or_system",
                  "description": "HostnameSource is the source for the hostname of host metadata.\nValid values are 'first_resource' and 'config_or_system':\n- 'first_resource' picks the host metadata hostname from the resource\n   attributes on the first OTLP payload that gets to the exporter.\n   If the first payload lacks hostname-like attributes, it will fallback to 'config_or_system'.\n   Do not use this hostname source if receiving data from multiple hosts.\n- 'config_or_system' picks the host metadata hostname from the 'hostname' setting,\n   If this is empty it will use available system APIs and cloud provider endpoints.\n\nThe default is 'config_or_system'."
                },
                "tags": {
                  "description": "Tags is a list of host tags.\nThese tags will be attached to telemetry signals that have the host metadata hostname.\nTo attach tags to telemetry signals regardless of the host, use a processor instead."
                }
              },
              "description": "HostMetadata defines the host metadata specific configuration"
            },
            "only_metadata": {
              "type": "boolean",
              "default": false,
              "description": "OnlyMetadata defines whether to only send metadata\nThis is useful for agent-collector setups, so that\nmetadata about a host is sent to the backend even\nwhen telemetry data is reported via a different host.\n\nThis flag is incompatible with disabling host metadata,\n`use_resource_metadata`, or `host_metadata::hostname_source != first_resource`"
            }
          }
        },
        "^servicegraph(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for servicegraphprocessor.\n",
          "properties": {
            "metrics_exporter": {
              "type": "string",
              "default": "",
              "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
            },
            "latency_histogram_buckets": {
              "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- client\n- server\n- failed\n- connection_type\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "store": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "max_items": {
                  "type": "integer",
                  "default": 1000,
                  "description": "MaxItems is the maximum number of items to keep in the store."
                },
                "ttl": {
                  "type": "string",
                  "default": "2s",
                  "description": "TTL is the time to live for items in the store."
                }
              },
              "description": "Store contains the config for the in-memory store used to find requests between services by pairing spans."
            },
            "cache_loop": {
              "type": "string",
              "default": "1m0s",
              "description": "CacheLoop is the time to cleans the cache periodically."
            },
            "store_expiration_loop": {
              "type": "string",
              "default": "2s",
              "description": "CacheLoop is the time to expire old entries from the store periodically."
            },
            "virtual_node_peer_attributes": {
              "description": "VirtualNodePeerAttributes the list of attributes need to match, the higher the front, the higher the priority."
            }
          }
        },
        "^spanmetrics(/[^/]+)*$": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false,
          "description": "Config defines the configuration options for spanmetricsprocessor.\n",
          "properties": {
            "aggregation_temporality": {
              "type": "string",
              "default": "AGGREGATION_TEMPORALITY_CUMULATIVE",
              "description":"Defines the aggregation temporality of the generated metrics."
            },
            "dimensions": {
              "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- service.name\n- operation\n- span.kind\n- status.code\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
            },
            "dimensions_cache_size": {
              "type": "integer",
              "default": 1000,
              "description": "DimensionsCacheSize defines the size of cache for storing Dimensions, which helps to avoid cache memory growing\nindefinitely over the lifetime of the collector.\nOptional. See defaultDimensionsCacheSize in processor.go for the default value."
            },
            "metrics_flush_interval": {
              "type": "string",
              "default": "15s",
              "description": "MetricsEmitInterval is the time period between when metrics are flushed or emitted to the configured MetricsExporter."
            },
            "namespace": {
              "type": "string",
              "default": "",
              "description": "Namespace is the namespace to use for the metrics."
            },
            "exclude_dimensions":{
              "type": "array",
              "items": {
                "type": "string"
              },
              "description":"The list of dimensions to be excluded from the default set of dimensions. Use to exclude unneeded data from metrics."
            },
            "exemplars":{
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enables exemplars for metrics."
                }
              },
              "description":"Use to configure how to attach exemplars to histograms"
            },
            "histogram":{
              "type": "object",
              "description":"Use to configure the type of histogram to record calculated from \n spans duration measurements. Must be either explicit or exponential.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["explicit", "exponential"],
                  "default": "explicit"
                },
                "buckets": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "disable": {
                  "type": "boolean",
                  "default": false
                },
                "unit": {
                  "type": "string",
                  "enum": ["ms", "s"],
                  "default": "ms"
                }
              }
            }
          },
          "patternProperties": {
            "^explicit$": {
              "type": "object",
              "properties": {
                "buckets": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              },
              "required": ["buckets"]
            },
            "^exponential$": {
              "type": "object",
              "properties": {
                "max_size": {
                  "type": "integer",
                  "default": 160
                }
              }
            }
          }
        }
      },
    "properties":{
      "count":{
        "description": "The count connector can be used to count spans, span events, metrics, data points, and log records.",
        "properties": {
          "spans": {
            "type": "object",
            "description":""
          },
          "spanevents": {
            "type": "object",
            "description":""
          },
          "metrics": {
            "type": "object",
           "description":""
          },
          "datapoints": {
            "type": "object",
           "description":","
          },
          "logs": {
            "type": "object",
            "description":""
          }
        }
      },
      "datadog": {
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false,
        "description": "The Datadog Connector is a connector component that computes Datadog APM Stats pre-sampling \n in the event that your traces pipeline is sampled using components such as the tailsamplingprocessor \n or probabilisticsamplerprocessor.",
        "properties": {
          "timeout": {
            "type": "string",
            "default": "15s"
          },
          "sending_queue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": true
              },
              "num_consumers": {
                "type": "integer",
                "default": 10
              },
              "queue_size": {
                "type": "integer",
                "default": 1000
              },
              "storage": {}
            }
          },
          "retry_on_failure": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": true
              },
              "initial_interval": {
                "type": "string",
                "default": "5s"
              },
              "randomization_factor": {
                "type": "number"
              },
              "multiplier": {
                "type": "number"
              },
              "max_interval": {
                "type": "string",
                "default": "30s"
              },
              "max_elapsed_time": {
                "type": "string",
                "default": "5m0s"
              }
            }
          },
          "tls": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "insecure_skip_verify": {
                "type": "boolean",
                "default": false,
                "description": "InsecureSkipVerify controls whether a client verifies the server's\ncertificate chain and host name."
              }
            },
            "description": "LimitedTLSClientSetting is a subset of TLSClientSetting, see LimitedHTTPClientSettings for more details"
          },
          "hostname": {
            "type": "string",
            "default": "",
            "description": "Hostname is the host name for unified service tagging.\nIf unset, it is determined automatically."
          },
          "api": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "key": {
                "type": "string",
                "default": "",
                "description": "Key is the Datadog API key to associate your Agent's data with your organization.\nCreate a new API key here: https://app.datadoghq.com/account/settings"
              },
              "site": {
                "type": "string",
                "default": "datadoghq.com",
                "description": "Site is the site of the Datadog intake to send data to.\nThe default value is \"datadoghq.com\"."
              },
              "fail_on_invalid_key": {
                "type": "boolean",
                "default": false,
                "description": "FailOnInvalidKey states whether to exit at startup on invalid API key.\nThe default value is false."
              }
            },
            "description": "API defines the Datadog API configuration."
          },
          "metrics": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "delta_ttl": {
                "type": "integer",
                "default": 3600,
                "description": "DeltaTTL defines the time that previous points of a cumulative monotonic\nmetric are kept in memory to calculate deltas"
              },
              "endpoint": {
                "type": "string",
                "default": "https://api.datadoghq.com"
              },
              "resource_attributes_as_tags": {
                "type": "boolean",
                "default": false,
                "description": "ResourceAttributesAsTags, if set to true, will use the exporterhelper feature to transform all\nresource attributes into metric labels, which are then converted into tags"
              },
              "instrumentation_scope_metadata_as_tags": {
                "type": "boolean",
                "default": false,
                "description": "InstrumentationScopeMetadataAsTags, if set to true, adds the name and version of the\ninstrumentation scope that created a metric to the metric tags"
              },
              "histograms": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "mode": {
                    "type": "string",
                    "default": "distributions",
                    "description": "Mode for exporting histograms. Valid values are 'distributions', 'counters' or 'nobuckets'.\n - 'distributions' sends histograms as Datadog distributions (recommended).\n - 'counters' sends histograms as Datadog counts, one metric per bucket.\n - 'nobuckets' sends no bucket histogram metrics. Aggregation metrics will still be sent\n   if `send_aggregation_metrics` is enabled.\n\nThe current default is 'distributions'."
                  },
                  "send_count_sum_metrics": {
                    "type": "boolean",
                    "default": false,
                    "description": "SendCountSum states if the export should send .sum and .count metrics for histograms.\nThe default is false.\nDeprecated: [v0.75.0] Use `send_aggregation_metrics` (HistogramConfig.SendAggregations) instead."
                  },
                  "send_aggregation_metrics": {
                    "type": "boolean",
                    "default": false,
                    "description": "SendAggregations states if the exporter should send .sum, .count, .min and .max metrics for histograms.\nThe default is false."
                  }
                },
                "description": "HistConfig defines the export of OTLP Histograms."
              },
              "sums": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "cumulative_monotonic_mode": {
                    "type": "string",
                    "default": "to_delta",
                    "description": "CumulativeMonotonicMode is the mode for exporting OTLP Cumulative Monotonic Sums.\nValid values are 'to_delta' or 'raw_value'.\n - 'to_delta' calculates delta for cumulative monotonic sums and sends it as a Datadog count.\n - 'raw_value' sends the raw value of cumulative monotonic sums as Datadog gauges.\n\nThe default is 'to_delta'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=sum#mapping for details and examples."
                  },
                  "initial_cumulative_monotonic_value": {
                    "type": "string",
                    "default": "auto",
                    "description": "InitialCumulativeMonotonicMode defines the behavior of the exporter when receiving the first value\nof a cumulative monotonic sum."
                  }
                },
                "description": "SumConfig defines the export of OTLP Sums."
              },
              "summaries": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "mode": {
                    "type": "string",
                    "default": "gauges",
                    "description": "Mode is the the mode for exporting OTLP Summaries.\nValid values are 'noquantiles' or 'gauges'.\n - 'noquantiles' sends no `.quantile` metrics. `.sum` and `.count` metrics will still be sent.\n - 'gauges' sends `.quantile` metrics as gauges tagged by the quantile.\n\nThe default is 'gauges'.\nSee https://docs.datadoghq.com/metrics/otlp/?tab=summary#mapping for details and examples."
                  }
                },
                "description": "SummaryConfig defines the export for OTLP Summaries."
              }
            },
            "description": "Metrics defines the Metrics exporter specific configuration"
          },
          "traces": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string",
                "default": "https://trace.agent.datadoghq.com"
              },
              "ignore_resources": {
                "description": "ignored resources\nA blacklist of regular expressions can be provided to disable certain traces based on their resource name\nall entries must be surrounded by double quotes and separated by commas.\nignore_resources: [\"(GET|POST) /healthcheck\"]"
              },
              "span_name_remappings": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "SpanNameRemappings is the map of datadog span names and preferred name to map to. This can be used to\nautomatically map Datadog Span Operation Names to an updated value. All entries should be key/value pairs.\nspan_name_remappings:\n  io.opentelemetry.javaagent.spring.client: spring.client\n  instrumentation:express.server: express\n  go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client"
              },
              "span_name_as_resource_name": {
                "type": "boolean",
                "default": false,
                "description": "If set to true the OpenTelemetry span name will used in the Datadog resource name.\nIf set to false the resource name will be filled with the instrumentation library name + span kind.\nThe default value is `false`."
              },
              "compute_stats_by_span_kind": {
                "type": "boolean",
                "default": false,
                "description": "If set to true, enables an additional stats computation check on spans to see they have an eligible `span.kind` (server, consumer, client, producer).\nIf enabled, a span with an eligible `span.kind` will have stats computed. If disabled, only top-level and measured spans will have stats computed.\nNOTE: For stats computed from OTel traces, only top-level spans are considered when this option is off."
              },
              "peer_service_aggregation": {
                "type": "boolean",
                "default": false,
                "description": "If set to true, enables `peer.service` aggregation in the exporter. If disabled, aggregated trace stats will not include `peer.service` as a dimension.\nFor the best experience with `peer.service`, it is recommended to also enable `compute_stats_by_span_kind`.\nIf enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first.\nIf the overhead remains high, it will be due to a high cardinality of `peer.service` values from the traces. You may need to check your instrumentation."
              }
            },
            "description": "Traces defines the Traces exporter specific configuration"
          },
          "logs": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string",
                "default": "https://http-intake.logs.datadoghq.com"
              },
              "dump_payloads": {
                "type": "boolean",
                "default": false,
                "description": "DumpPayloads report whether payloads should be dumped when logging level is debug."
              }
            },
            "description": "Logs defines the Logs exporter specific configuration"
          },
          "host_metadata": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": true,
                "description": "Enabled enables the host metadata functionality."
              },
              "hostname_source": {
                "type": "string",
                "default": "config_or_system",
                "description": "HostnameSource is the source for the hostname of host metadata.\nValid values are 'first_resource' and 'config_or_system':\n- 'first_resource' picks the host metadata hostname from the resource\n   attributes on the first OTLP payload that gets to the exporter.\n   If the first payload lacks hostname-like attributes, it will fallback to 'config_or_system'.\n   Do not use this hostname source if receiving data from multiple hosts.\n- 'config_or_system' picks the host metadata hostname from the 'hostname' setting,\n   If this is empty it will use available system APIs and cloud provider endpoints.\n\nThe default is 'config_or_system'."
              },
              "tags": {
                "description": "Tags is a list of host tags.\nThese tags will be attached to telemetry signals that have the host metadata hostname.\nTo attach tags to telemetry signals regardless of the host, use a processor instead."
              }
            },
            "description": "HostMetadata defines the host metadata specific configuration"
          },
          "only_metadata": {
            "type": "boolean",
            "default": false,
            "description": "OnlyMetadata defines whether to only send metadata\nThis is useful for agent-collector setups, so that\nmetadata about a host is sent to the backend even\nwhen telemetry data is reported via a different host.\n\nThis flag is incompatible with disabling host metadata,\n`use_resource_metadata`, or `host_metadata::hostname_source != first_resource`"
          }
        }
      },
      "exceptions":{
        "description":"Generate metrics and logs from recorded application exceptions associated with spans.",
        "properties": {
          "dimensions": {
            "description":"The list of dimensions to add together with the default dimensions defined above.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "default": { "type": ["string", "null"] }
              }
            }
          }
        }
      },
      "routing":{
        "description":"Routes logs, metrics or traces based on resource attributes to specific \n pipelines using OpenTelemetry Transformation Language (OTTL) statements as routing conditions.",
        "properties": {
          "default_pipelines": {
            "description":"Contains the list of pipelines to use when a record does not meet any of specified conditions.",
            "type": "array",
            "items": { "type": "string" }
          },
          "error_mode": {
            "description":"Determines how errors returned from OTTL statements are handled. Valid values are ignore and propagate",
            "type": "string",
            "enum": ["ignore", "propagate"]
          },
          "table": {
            "description":"The routing table for this connector.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statement": { "type": "string" },
                "pipelines": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "servicegraph": {
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false,
        "description": "The service graphs connector builds a map representing the interrelationships between various services in a system. \n",
        "properties": {
          "metrics_exporter": {
            "type": "string",
            "default": "",
            "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics."
          },
          "latency_histogram_buckets": {
            "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets.\nSee defaultLatencyHistogramBucketsMs in processor.go for the default value."
          },
          "dimensions": {
            "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- client\n- server\n- failed\n- connection_type\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
          },
          "store": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "max_items": {
                "type": "integer",
                "default": 1000,
                "description": "MaxItems is the maximum number of items to keep in the store."
              },
              "ttl": {
                "type": "string",
                "default": "2s",
                "description": "TTL is the time to live for items in the store."
              }
            },
            "description": "Store contains the config for the in-memory store used to find requests between services by pairing spans."
          },
          "cache_loop": {
            "type": "string",
            "default": "1m0s",
            "description": "CacheLoop is the time to cleans the cache periodically."
          },
          "store_expiration_loop": {
            "type": "string",
            "default": "2s",
            "description": "CacheLoop is the time to expire old entries from the store periodically."
          },
          "virtual_node_peer_attributes": {
            "description": "VirtualNodePeerAttributes the list of attributes need to match, the higher the front, the higher the priority."
          }
        }
      },
      "spanmetrics": {
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false,
        "description": "Aggregates Request, Error and Duration (R.E.D) OpenTelemetry metrics from span data.\n",
        "properties": {
          "dimensions": {
            "description": "Dimensions defines the list of additional dimensions on top of the provided:\n- service.name\n- operation\n- span.kind\n- status.code\nThe dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes:\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go."
          },
          "dimensions_cache_size": {
            "type": "integer",
            "default": 1000,
            "description": "DimensionsCacheSize defines the size of cache for storing Dimensions, which helps to avoid cache memory growing\nindefinitely over the lifetime of the collector.\nOptional. See defaultDimensionsCacheSize in processor.go for the default value."
          },
          "aggregation_temporality": {
            "type": "string",
            "default": "AGGREGATION_TEMPORALITY_CUMULATIVE"
          },
          "metrics_flush_interval": {
            "type": "string",
            "default": "15s",
            "description": "MetricsEmitInterval is the time period between when metrics are flushed or emitted to the configured MetricsExporter."
          },
          "namespace": {
            "type": "string",
            "default": "",
            "description": "Namespace is the namespace to use for the metrics."
          },
          "exclude_dimensions":{
            "type": "array",
            "items": {
              "type": "string"
            },
            "description":"The list of dimensions to be excluded from the default set of dimensions. Use to exclude unneeded data from metrics."
          },
          "exemplars":{
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false,
                "description": "Enables exemplars for metrics."
              }
            },
            "description":"Use to configure how to attach exemplars to histograms"
          },
          "histogram":{
            "type": "object",
            "description":"Use to configure the type of histogram to record calculated from \n spans duration measurements. Must be either explicit or exponential.",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["explicit", "exponential"],
                "default": "explicit"
              },
              "buckets": {
                "type": "array",
                "items": { "type": "string" }
              },
              "disable": {
                "type": "boolean",
                "default": false
              },
              "unit": {
                "type": "string",
                "enum": ["ms", "s"],
                "default": "ms"
              }
            }
          }
        }
      }
    }
    }
  }
}
