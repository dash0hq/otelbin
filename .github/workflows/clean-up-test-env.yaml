name: Clean up test environment

# only trigger on pull request closed events
on:
  pull_request:
    types: [ closed ]
  workflow_dispatch:

jobs:
  cleanup_test_env:
    name: Clean up test environment ${{ github.ref }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version-file: .nvmrc

      - name: Install CDK dependencies
        shell: bash
        working-directory: packages/otelbin-validation
        run: |
          npm ci

      - name: Get test environment name
        id: get_test_env_name
        shell: bash
        env:
          REF_NAME: ${{ github.head_ref || github.ref_name }}
        # When the trigger is a pull event, use the PR's branch name (`github.head_ref`), which
        # is available only for pull trigger. Otherwise, use the branch on which the commit was pushed.
        # (Ref names in pull requests are in the shape of `<pr_id>/merge` and those will break CDK.)
        # language=bash
        run: |
          echo "test_env_name=$(./.github/workflows/scripts/test_env_name.sh)" >> "$GITHUB_OUTPUT" || exit 1

      - name: Select credentials
        id: select_credentials
        shell: bash
        env:
          TEST_ENVIRONMENT_NAME: ${{ steps.get_test_env_name.outputs.test_env_name }}
          OTELBIN_AUTOMATION_ACCOUNT_PROD: ${{secrets.OTELBIN_AUTOMATION_ACCOUNT_PROD}}
          OTELBIN_AUTOMATION_ACCESS_KEY_ID_PROD: ${{secrets.OTELBIN_AUTOMATION_ACCESS_KEY_ID_PROD}}
          OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_PROD: ${{secrets.OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_PROD}}
          OTELBIN_AUTOMATION_ROLE_ARN_PROD: ${{secrets.OTELBIN_AUTOMATION_ROLE_ARN_PROD}}
          OTELBIN_AUTOMATION_ACCOUNT_DEV: ${{secrets.OTELBIN_AUTOMATION_ACCOUNT_DEV}}
          OTELBIN_AUTOMATION_ACCESS_KEY_ID_DEV: ${{secrets.OTELBIN_AUTOMATION_ACCESS_KEY_ID_DEV}}
          OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_DEV: ${{secrets.OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_DEV}}
          OTELBIN_AUTOMATION_ROLE_ARN_DEV: ${{secrets.OTELBIN_AUTOMATION_ROLE_ARN_DEV}}
        # language=bash
        run: |
          if [ "${TEST_ENVIRONMENT_NAME}" == 'main' ]; then
            echo "aws_account=${OTELBIN_AUTOMATION_ACCOUNT_PROD}" >> "${GITHUB_OUTPUT}"
            echo "aws_access_key=${OTELBIN_AUTOMATION_ACCESS_KEY_ID_PROD}" >> "${GITHUB_OUTPUT}"
            echo "aws_secret_access_key=${OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_PROD}" >> "${GITHUB_OUTPUT}"
            echo "role_arn=${OTELBIN_AUTOMATION_ROLE_ARN_PROD}" >> "${GITHUB_OUTPUT}"
          else
            echo "aws_account=${OTELBIN_AUTOMATION_ACCOUNT_DEV}" >> "${GITHUB_OUTPUT}"
            echo "aws_access_key=${OTELBIN_AUTOMATION_ACCESS_KEY_ID_DEV}" >> "${GITHUB_OUTPUT}"
            echo "aws_secret_access_key=${OTELBIN_AUTOMATION_SECRET_ACCESS_KEY_DEV}" >> "${GITHUB_OUTPUT}"
            echo "role_arn=${OTELBIN_AUTOMATION_ROLE_ARN_DEV}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-access-key-id: ${{ steps.select_credentials.outputs.aws_access_key }}
          aws-secret-access-key: ${{ steps.select_credentials.outputs.aws_secret_access_key }}
          aws-region: 'us-east-2'
          mask-aws-account-id: true
          role-to-assume: ${{ steps.select_credentials.outputs.role_arn }}

      - name: Delete validation backend
        shell: bash
        working-directory: packages/otelbin-validation
        env:
          AWS_ROLE_ARN: ${{ steps.select_credentials.outputs.role_arn }}
          AWS_DEFAULT_REGION: 'us-east-2'
          CDK_DEPLOY_ACCOUNT: ${{ steps.select_credentials.outputs.aws_account }}
          CDK_DEPLOY_REGION: 'us-east-2'
          GH_TOKEN: ${{ github.token }}
          TEST_ENVIRONMENT_NAME: ${{ steps.get_test_env_name.outputs.test_env_name }}
        run: |
          npx projen destroy --force
